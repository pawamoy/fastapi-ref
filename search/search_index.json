{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"FastAPI framework, high performance, easy to learn, fast to code, ready for production API Reference : https://pawamoy.github.io/fastapi Source Code : https://github.com/pawamoy/fastapi-ref This repository allows to build the API reference of FastAPI .","title":"Home"},{"location":"SUMMARY/","text":"applications concurrency datastructures dependencies models utils encoders exception_handlers exceptions logger middleware asyncexitstack cors gzip httpsredirect trustedhost wsgi openapi constants docs models utils param_functions params requests responses routing security api_key base http oauth2 open_id_connect_url utils staticfiles templating testclient types utils websockets","title":"SUMMARY"},{"location":"applications/","text":"FastAPI \u00b6 FastAPI ( * , debug = False , routes = None , title = \"FastAPI\" , description = \"\" , version = \"0.1.0\" , openapi_url = \"/openapi.json\" , openapi_tags = None , servers = None , dependencies = None , default_response_class = Default ( JSONResponse ), docs_url = \"/docs\" , redoc_url = \"/redoc\" , swagger_ui_oauth2_redirect_url = \"/docs/oauth2-redirect\" , swagger_ui_init_oauth = None , middleware = None , exception_handlers = None , on_startup = None , on_shutdown = None , terms_of_service = None , contact = None , license_info = None , openapi_prefix = \"\" , root_path = \"\" , root_path_in_servers = True , responses = None , callbacks = None , deprecated = None , include_in_schema = True , swagger_ui_parameters = None , generate_unique_id_function = Default ( generate_unique_id ), ** extra ) Bases: Starlette Source code in fastapi/applications.py 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 def __init__ ( self , * , debug : bool = False , routes : Optional [ List [ BaseRoute ]] = None , title : str = \"FastAPI\" , description : str = \"\" , version : str = \"0.1.0\" , openapi_url : Optional [ str ] = \"/openapi.json\" , openapi_tags : Optional [ List [ Dict [ str , Any ]]] = None , servers : Optional [ List [ Dict [ str , Union [ str , Any ]]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , default_response_class : Type [ Response ] = Default ( JSONResponse ), docs_url : Optional [ str ] = \"/docs\" , redoc_url : Optional [ str ] = \"/redoc\" , swagger_ui_oauth2_redirect_url : Optional [ str ] = \"/docs/oauth2-redirect\" , swagger_ui_init_oauth : Optional [ Dict [ str , Any ]] = None , middleware : Optional [ Sequence [ Middleware ]] = None , exception_handlers : Optional [ Dict [ Union [ int , Type [ Exception ]], Callable [[ Request , Any ], Coroutine [ Any , Any , Response ]], ] ] = None , on_startup : Optional [ Sequence [ Callable [[], Any ]]] = None , on_shutdown : Optional [ Sequence [ Callable [[], Any ]]] = None , terms_of_service : Optional [ str ] = None , contact : Optional [ Dict [ str , Union [ str , Any ]]] = None , license_info : Optional [ Dict [ str , Union [ str , Any ]]] = None , openapi_prefix : str = \"\" , root_path : str = \"\" , root_path_in_servers : bool = True , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , callbacks : Optional [ List [ BaseRoute ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , swagger_ui_parameters : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ** extra : Any , ) -> None : self . _debug : bool = debug self . title = title self . description = description self . version = version self . terms_of_service = terms_of_service self . contact = contact self . license_info = license_info self . openapi_url = openapi_url self . openapi_tags = openapi_tags self . root_path_in_servers = root_path_in_servers self . docs_url = docs_url self . redoc_url = redoc_url self . swagger_ui_oauth2_redirect_url = swagger_ui_oauth2_redirect_url self . swagger_ui_init_oauth = swagger_ui_init_oauth self . swagger_ui_parameters = swagger_ui_parameters self . servers = servers or [] self . extra = extra self . openapi_version = \"3.0.2\" self . openapi_schema : Optional [ Dict [ str , Any ]] = None if self . openapi_url : assert self . title , \"A title must be provided for OpenAPI, e.g.: 'My API'\" assert self . version , \"A version must be provided for OpenAPI, e.g.: '2.1.0'\" # TODO: remove when discarding the openapi_prefix parameter if openapi_prefix : logger . warning ( '\"openapi_prefix\" has been deprecated in favor of \"root_path\", which ' \"follows more closely the ASGI standard, is simpler, and more \" \"automatic. Check the docs at \" \"https://fastapi.tiangolo.com/advanced/sub-applications/\" ) self . root_path = root_path or openapi_prefix self . state : State = State () self . dependency_overrides : Dict [ Callable [ ... , Any ], Callable [ ... , Any ]] = {} self . router : routing . APIRouter = routing . APIRouter ( routes = routes , dependency_overrides_provider = self , on_startup = on_startup , on_shutdown = on_shutdown , default_response_class = default_response_class , dependencies = dependencies , callbacks = callbacks , deprecated = deprecated , include_in_schema = include_in_schema , responses = responses , generate_unique_id_function = generate_unique_id_function , ) self . exception_handlers : Dict [ Any , Callable [[ Request , Any ], Union [ Response , Awaitable [ Response ]]] ] = ({} if exception_handlers is None else dict ( exception_handlers )) self . exception_handlers . setdefault ( HTTPException , http_exception_handler ) self . exception_handlers . setdefault ( RequestValidationError , request_validation_exception_handler ) self . user_middleware : List [ Middleware ] = ( [] if middleware is None else list ( middleware ) ) self . middleware_stack : ASGIApp = self . build_middleware_stack () self . setup () _debug instance-attribute \u00b6 _debug : bool = debug contact instance-attribute \u00b6 contact = contact dependency_overrides instance-attribute \u00b6 dependency_overrides : Dict [ Callable [ ... , Any ], Callable [ ... , Any ] ] = {} description instance-attribute \u00b6 description = description docs_url instance-attribute \u00b6 docs_url = docs_url exception_handlers instance-attribute \u00b6 exception_handlers : Dict [ Any , Callable [ [ Request , Any ], Union [ Response , Awaitable [ Response ]] ], ] = ( {} if exception_handlers is None else dict ( exception_handlers ) ) extra instance-attribute \u00b6 extra = extra license_info instance-attribute \u00b6 license_info = license_info middleware_stack instance-attribute \u00b6 middleware_stack : ASGIApp = self . build_middleware_stack () openapi_schema instance-attribute \u00b6 openapi_schema : Optional [ Dict [ str , Any ]] = None openapi_tags instance-attribute \u00b6 openapi_tags = openapi_tags openapi_url instance-attribute \u00b6 openapi_url = openapi_url openapi_version instance-attribute \u00b6 openapi_version = '3.0.2' redoc_url instance-attribute \u00b6 redoc_url = redoc_url root_path instance-attribute \u00b6 root_path = root_path or openapi_prefix root_path_in_servers instance-attribute \u00b6 root_path_in_servers = root_path_in_servers router instance-attribute \u00b6 router : routing . APIRouter = routing . APIRouter ( routes = routes , dependency_overrides_provider = self , on_startup = on_startup , on_shutdown = on_shutdown , default_response_class = default_response_class , dependencies = dependencies , callbacks = callbacks , deprecated = deprecated , include_in_schema = include_in_schema , responses = responses , generate_unique_id_function = generate_unique_id_function , ) servers instance-attribute \u00b6 servers = servers or [] state instance-attribute \u00b6 state : State = State () swagger_ui_init_oauth instance-attribute \u00b6 swagger_ui_init_oauth = swagger_ui_init_oauth swagger_ui_oauth2_redirect_url instance-attribute \u00b6 swagger_ui_oauth2_redirect_url = ( swagger_ui_oauth2_redirect_url ) swagger_ui_parameters instance-attribute \u00b6 swagger_ui_parameters = swagger_ui_parameters terms_of_service instance-attribute \u00b6 terms_of_service = terms_of_service title instance-attribute \u00b6 title = title user_middleware instance-attribute \u00b6 user_middleware : List [ Middleware ] = ( [] if middleware is None else list ( middleware ) ) version instance-attribute \u00b6 version = version __call__ async \u00b6 __call__ ( scope , receive , send ) Source code in fastapi/applications.py 266 267 268 269 async def __call__ ( self , scope : Scope , receive : Receive , send : Send ) -> None : if self . root_path : scope [ \"root_path\" ] = self . root_path await super () . __call__ ( scope , receive , send ) add_api_route \u00b6 add_api_route ( path , endpoint , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , methods = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 def add_api_route ( self , path : str , endpoint : Callable [ ... , Coroutine [ Any , Any , Response ]], * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , methods : Optional [ List [ str ]] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Union [ Type [ Response ], DefaultPlaceholder ] = Default ( JSONResponse ), name : Optional [ str ] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> None : self . router . add_api_route ( path , endpoint = endpoint , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = methods , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) add_api_websocket_route \u00b6 add_api_websocket_route ( path , endpoint , name = None ) Source code in fastapi/applications.py 390 391 392 393 def add_api_websocket_route ( self , path : str , endpoint : Callable [ ... , Any ], name : Optional [ str ] = None ) -> None : self . router . add_api_websocket_route ( path , endpoint , name = name ) api_route \u00b6 api_route ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , methods = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 def api_route ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , methods : Optional [ List [ str ]] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: def decorator ( func : DecoratedCallable ) -> DecoratedCallable : self . router . add_api_route ( path , func , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = methods , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) return func return decorator build_middleware_stack \u00b6 build_middleware_stack () Source code in fastapi/applications.py 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 def build_middleware_stack ( self ) -> ASGIApp : # Duplicate/override from Starlette to add AsyncExitStackMiddleware # inside of ExceptionMiddleware, inside of custom user middlewares debug = self . debug error_handler = None exception_handlers = {} for key , value in self . exception_handlers . items (): if key in ( 500 , Exception ): error_handler = value else : exception_handlers [ key ] = value middleware = ( [ Middleware ( ServerErrorMiddleware , handler = error_handler , debug = debug )] + self . user_middleware + [ Middleware ( ExceptionMiddleware , handlers = exception_handlers , debug = debug ), # Add FastAPI-specific AsyncExitStackMiddleware for dependencies with # contextvars. # This needs to happen after user middlewares because those create a # new contextvars context copy by using a new AnyIO task group. # The initial part of dependencies with yield is executed in the # FastAPI code, inside all the middlewares, but the teardown part # (after yield) is executed in the AsyncExitStack in this middleware, # if the AsyncExitStack lived outside of the custom middlewares and # contextvars were set in a dependency with yield in that internal # contextvars context, the values would not be available in the # outside context of the AsyncExitStack. # By putting the middleware and the AsyncExitStack here, inside all # user middlewares, the code before and after yield in dependencies # with yield is executed in the same contextvars context, so all values # set in contextvars before yield is still available after yield as # would be expected. # Additionally, by having this AsyncExitStack here, after the # ExceptionMiddleware, now dependencies can catch handled exceptions, # e.g. HTTPException, to customize the teardown code (e.g. DB session # rollback). Middleware ( AsyncExitStackMiddleware ), ] ) app = self . router for cls , options in reversed ( middleware ): app = cls ( app = app , ** options ) return app delete \u00b6 delete ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 def delete ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . delete ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , operation_id = operation_id , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) get \u00b6 get ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 def get ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . get ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) head \u00b6 head ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 def head ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . head ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) include_router \u00b6 include_router ( router , * , prefix = \"\" , tags = None , dependencies = None , responses = None , deprecated = None , include_in_schema = True , default_response_class = Default ( JSONResponse ), callbacks = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 def include_router ( self , router : routing . APIRouter , * , prefix : str = \"\" , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , default_response_class : Type [ Response ] = Default ( JSONResponse ), callbacks : Optional [ List [ BaseRoute ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> None : self . router . include_router ( router , prefix = prefix , tags = tags , dependencies = dependencies , responses = responses , deprecated = deprecated , include_in_schema = include_in_schema , default_response_class = default_response_class , callbacks = callbacks , generate_unique_id_function = generate_unique_id_function , ) openapi \u00b6 openapi () Source code in fastapi/applications.py 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 def openapi ( self ) -> Dict [ str , Any ]: if not self . openapi_schema : self . openapi_schema = get_openapi ( title = self . title , version = self . version , openapi_version = self . openapi_version , description = self . description , terms_of_service = self . terms_of_service , contact = self . contact , license_info = self . license_info , routes = self . routes , tags = self . openapi_tags , servers = self . servers , ) return self . openapi_schema options \u00b6 options ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 def options ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . options ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) patch \u00b6 patch ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 def patch ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . patch ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) post \u00b6 post ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 def post ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . post ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) put \u00b6 put ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 def put ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . put ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) setup \u00b6 setup () Source code in fastapi/applications.py 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 def setup ( self ) -> None : if self . openapi_url : urls = ( server_data . get ( \"url\" ) for server_data in self . servers ) server_urls = { url for url in urls if url } async def openapi ( req : Request ) -> JSONResponse : root_path = req . scope . get ( \"root_path\" , \"\" ) . rstrip ( \"/\" ) if root_path not in server_urls : if root_path and self . root_path_in_servers : self . servers . insert ( 0 , { \"url\" : root_path }) server_urls . add ( root_path ) return JSONResponse ( self . openapi ()) self . add_route ( self . openapi_url , openapi , include_in_schema = False ) if self . openapi_url and self . docs_url : async def swagger_ui_html ( req : Request ) -> HTMLResponse : root_path = req . scope . get ( \"root_path\" , \"\" ) . rstrip ( \"/\" ) openapi_url = root_path + self . openapi_url oauth2_redirect_url = self . swagger_ui_oauth2_redirect_url if oauth2_redirect_url : oauth2_redirect_url = root_path + oauth2_redirect_url return get_swagger_ui_html ( openapi_url = openapi_url , title = self . title + \" - Swagger UI\" , oauth2_redirect_url = oauth2_redirect_url , init_oauth = self . swagger_ui_init_oauth , swagger_ui_parameters = self . swagger_ui_parameters , ) self . add_route ( self . docs_url , swagger_ui_html , include_in_schema = False ) if self . swagger_ui_oauth2_redirect_url : async def swagger_ui_redirect ( req : Request ) -> HTMLResponse : return get_swagger_ui_oauth2_redirect_html () self . add_route ( self . swagger_ui_oauth2_redirect_url , swagger_ui_redirect , include_in_schema = False , ) if self . openapi_url and self . redoc_url : async def redoc_html ( req : Request ) -> HTMLResponse : root_path = req . scope . get ( \"root_path\" , \"\" ) . rstrip ( \"/\" ) openapi_url = root_path + self . openapi_url return get_redoc_html ( openapi_url = openapi_url , title = self . title + \" - ReDoc\" ) self . add_route ( self . redoc_url , redoc_html , include_in_schema = False ) trace \u00b6 trace ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 def trace ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . trace ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) websocket \u00b6 websocket ( path , name = None ) Source code in fastapi/applications.py 395 396 397 398 399 400 401 402 def websocket ( self , path : str , name : Optional [ str ] = None ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: def decorator ( func : DecoratedCallable ) -> DecoratedCallable : self . add_api_websocket_route ( path , func , name = name ) return func return decorator","title":"applications"},{"location":"applications/#fastapi.applications.FastAPI","text":"FastAPI ( * , debug = False , routes = None , title = \"FastAPI\" , description = \"\" , version = \"0.1.0\" , openapi_url = \"/openapi.json\" , openapi_tags = None , servers = None , dependencies = None , default_response_class = Default ( JSONResponse ), docs_url = \"/docs\" , redoc_url = \"/redoc\" , swagger_ui_oauth2_redirect_url = \"/docs/oauth2-redirect\" , swagger_ui_init_oauth = None , middleware = None , exception_handlers = None , on_startup = None , on_shutdown = None , terms_of_service = None , contact = None , license_info = None , openapi_prefix = \"\" , root_path = \"\" , root_path_in_servers = True , responses = None , callbacks = None , deprecated = None , include_in_schema = True , swagger_ui_parameters = None , generate_unique_id_function = Default ( generate_unique_id ), ** extra ) Bases: Starlette Source code in fastapi/applications.py 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 def __init__ ( self , * , debug : bool = False , routes : Optional [ List [ BaseRoute ]] = None , title : str = \"FastAPI\" , description : str = \"\" , version : str = \"0.1.0\" , openapi_url : Optional [ str ] = \"/openapi.json\" , openapi_tags : Optional [ List [ Dict [ str , Any ]]] = None , servers : Optional [ List [ Dict [ str , Union [ str , Any ]]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , default_response_class : Type [ Response ] = Default ( JSONResponse ), docs_url : Optional [ str ] = \"/docs\" , redoc_url : Optional [ str ] = \"/redoc\" , swagger_ui_oauth2_redirect_url : Optional [ str ] = \"/docs/oauth2-redirect\" , swagger_ui_init_oauth : Optional [ Dict [ str , Any ]] = None , middleware : Optional [ Sequence [ Middleware ]] = None , exception_handlers : Optional [ Dict [ Union [ int , Type [ Exception ]], Callable [[ Request , Any ], Coroutine [ Any , Any , Response ]], ] ] = None , on_startup : Optional [ Sequence [ Callable [[], Any ]]] = None , on_shutdown : Optional [ Sequence [ Callable [[], Any ]]] = None , terms_of_service : Optional [ str ] = None , contact : Optional [ Dict [ str , Union [ str , Any ]]] = None , license_info : Optional [ Dict [ str , Union [ str , Any ]]] = None , openapi_prefix : str = \"\" , root_path : str = \"\" , root_path_in_servers : bool = True , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , callbacks : Optional [ List [ BaseRoute ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , swagger_ui_parameters : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ** extra : Any , ) -> None : self . _debug : bool = debug self . title = title self . description = description self . version = version self . terms_of_service = terms_of_service self . contact = contact self . license_info = license_info self . openapi_url = openapi_url self . openapi_tags = openapi_tags self . root_path_in_servers = root_path_in_servers self . docs_url = docs_url self . redoc_url = redoc_url self . swagger_ui_oauth2_redirect_url = swagger_ui_oauth2_redirect_url self . swagger_ui_init_oauth = swagger_ui_init_oauth self . swagger_ui_parameters = swagger_ui_parameters self . servers = servers or [] self . extra = extra self . openapi_version = \"3.0.2\" self . openapi_schema : Optional [ Dict [ str , Any ]] = None if self . openapi_url : assert self . title , \"A title must be provided for OpenAPI, e.g.: 'My API'\" assert self . version , \"A version must be provided for OpenAPI, e.g.: '2.1.0'\" # TODO: remove when discarding the openapi_prefix parameter if openapi_prefix : logger . warning ( '\"openapi_prefix\" has been deprecated in favor of \"root_path\", which ' \"follows more closely the ASGI standard, is simpler, and more \" \"automatic. Check the docs at \" \"https://fastapi.tiangolo.com/advanced/sub-applications/\" ) self . root_path = root_path or openapi_prefix self . state : State = State () self . dependency_overrides : Dict [ Callable [ ... , Any ], Callable [ ... , Any ]] = {} self . router : routing . APIRouter = routing . APIRouter ( routes = routes , dependency_overrides_provider = self , on_startup = on_startup , on_shutdown = on_shutdown , default_response_class = default_response_class , dependencies = dependencies , callbacks = callbacks , deprecated = deprecated , include_in_schema = include_in_schema , responses = responses , generate_unique_id_function = generate_unique_id_function , ) self . exception_handlers : Dict [ Any , Callable [[ Request , Any ], Union [ Response , Awaitable [ Response ]]] ] = ({} if exception_handlers is None else dict ( exception_handlers )) self . exception_handlers . setdefault ( HTTPException , http_exception_handler ) self . exception_handlers . setdefault ( RequestValidationError , request_validation_exception_handler ) self . user_middleware : List [ Middleware ] = ( [] if middleware is None else list ( middleware ) ) self . middleware_stack : ASGIApp = self . build_middleware_stack () self . setup ()","title":"FastAPI"},{"location":"applications/#fastapi.applications.FastAPI._debug","text":"_debug : bool = debug","title":"_debug"},{"location":"applications/#fastapi.applications.FastAPI.contact","text":"contact = contact","title":"contact"},{"location":"applications/#fastapi.applications.FastAPI.dependency_overrides","text":"dependency_overrides : Dict [ Callable [ ... , Any ], Callable [ ... , Any ] ] = {}","title":"dependency_overrides"},{"location":"applications/#fastapi.applications.FastAPI.description","text":"description = description","title":"description"},{"location":"applications/#fastapi.applications.FastAPI.docs_url","text":"docs_url = docs_url","title":"docs_url"},{"location":"applications/#fastapi.applications.FastAPI.exception_handlers","text":"exception_handlers : Dict [ Any , Callable [ [ Request , Any ], Union [ Response , Awaitable [ Response ]] ], ] = ( {} if exception_handlers is None else dict ( exception_handlers ) )","title":"exception_handlers"},{"location":"applications/#fastapi.applications.FastAPI.extra","text":"extra = extra","title":"extra"},{"location":"applications/#fastapi.applications.FastAPI.license_info","text":"license_info = license_info","title":"license_info"},{"location":"applications/#fastapi.applications.FastAPI.middleware_stack","text":"middleware_stack : ASGIApp = self . build_middleware_stack ()","title":"middleware_stack"},{"location":"applications/#fastapi.applications.FastAPI.openapi_schema","text":"openapi_schema : Optional [ Dict [ str , Any ]] = None","title":"openapi_schema"},{"location":"applications/#fastapi.applications.FastAPI.openapi_tags","text":"openapi_tags = openapi_tags","title":"openapi_tags"},{"location":"applications/#fastapi.applications.FastAPI.openapi_url","text":"openapi_url = openapi_url","title":"openapi_url"},{"location":"applications/#fastapi.applications.FastAPI.openapi_version","text":"openapi_version = '3.0.2'","title":"openapi_version"},{"location":"applications/#fastapi.applications.FastAPI.redoc_url","text":"redoc_url = redoc_url","title":"redoc_url"},{"location":"applications/#fastapi.applications.FastAPI.root_path","text":"root_path = root_path or openapi_prefix","title":"root_path"},{"location":"applications/#fastapi.applications.FastAPI.root_path_in_servers","text":"root_path_in_servers = root_path_in_servers","title":"root_path_in_servers"},{"location":"applications/#fastapi.applications.FastAPI.router","text":"router : routing . APIRouter = routing . APIRouter ( routes = routes , dependency_overrides_provider = self , on_startup = on_startup , on_shutdown = on_shutdown , default_response_class = default_response_class , dependencies = dependencies , callbacks = callbacks , deprecated = deprecated , include_in_schema = include_in_schema , responses = responses , generate_unique_id_function = generate_unique_id_function , )","title":"router"},{"location":"applications/#fastapi.applications.FastAPI.servers","text":"servers = servers or []","title":"servers"},{"location":"applications/#fastapi.applications.FastAPI.state","text":"state : State = State ()","title":"state"},{"location":"applications/#fastapi.applications.FastAPI.swagger_ui_init_oauth","text":"swagger_ui_init_oauth = swagger_ui_init_oauth","title":"swagger_ui_init_oauth"},{"location":"applications/#fastapi.applications.FastAPI.swagger_ui_oauth2_redirect_url","text":"swagger_ui_oauth2_redirect_url = ( swagger_ui_oauth2_redirect_url )","title":"swagger_ui_oauth2_redirect_url"},{"location":"applications/#fastapi.applications.FastAPI.swagger_ui_parameters","text":"swagger_ui_parameters = swagger_ui_parameters","title":"swagger_ui_parameters"},{"location":"applications/#fastapi.applications.FastAPI.terms_of_service","text":"terms_of_service = terms_of_service","title":"terms_of_service"},{"location":"applications/#fastapi.applications.FastAPI.title","text":"title = title","title":"title"},{"location":"applications/#fastapi.applications.FastAPI.user_middleware","text":"user_middleware : List [ Middleware ] = ( [] if middleware is None else list ( middleware ) )","title":"user_middleware"},{"location":"applications/#fastapi.applications.FastAPI.version","text":"version = version","title":"version"},{"location":"applications/#fastapi.applications.FastAPI.__call__","text":"__call__ ( scope , receive , send ) Source code in fastapi/applications.py 266 267 268 269 async def __call__ ( self , scope : Scope , receive : Receive , send : Send ) -> None : if self . root_path : scope [ \"root_path\" ] = self . root_path await super () . __call__ ( scope , receive , send )","title":"__call__()"},{"location":"applications/#fastapi.applications.FastAPI.add_api_route","text":"add_api_route ( path , endpoint , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , methods = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 def add_api_route ( self , path : str , endpoint : Callable [ ... , Coroutine [ Any , Any , Response ]], * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , methods : Optional [ List [ str ]] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Union [ Type [ Response ], DefaultPlaceholder ] = Default ( JSONResponse ), name : Optional [ str ] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> None : self . router . add_api_route ( path , endpoint = endpoint , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = methods , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"add_api_route()"},{"location":"applications/#fastapi.applications.FastAPI.add_api_websocket_route","text":"add_api_websocket_route ( path , endpoint , name = None ) Source code in fastapi/applications.py 390 391 392 393 def add_api_websocket_route ( self , path : str , endpoint : Callable [ ... , Any ], name : Optional [ str ] = None ) -> None : self . router . add_api_websocket_route ( path , endpoint , name = name )","title":"add_api_websocket_route()"},{"location":"applications/#fastapi.applications.FastAPI.api_route","text":"api_route ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , methods = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 def api_route ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , methods : Optional [ List [ str ]] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: def decorator ( func : DecoratedCallable ) -> DecoratedCallable : self . router . add_api_route ( path , func , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = methods , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) return func return decorator","title":"api_route()"},{"location":"applications/#fastapi.applications.FastAPI.build_middleware_stack","text":"build_middleware_stack () Source code in fastapi/applications.py 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 def build_middleware_stack ( self ) -> ASGIApp : # Duplicate/override from Starlette to add AsyncExitStackMiddleware # inside of ExceptionMiddleware, inside of custom user middlewares debug = self . debug error_handler = None exception_handlers = {} for key , value in self . exception_handlers . items (): if key in ( 500 , Exception ): error_handler = value else : exception_handlers [ key ] = value middleware = ( [ Middleware ( ServerErrorMiddleware , handler = error_handler , debug = debug )] + self . user_middleware + [ Middleware ( ExceptionMiddleware , handlers = exception_handlers , debug = debug ), # Add FastAPI-specific AsyncExitStackMiddleware for dependencies with # contextvars. # This needs to happen after user middlewares because those create a # new contextvars context copy by using a new AnyIO task group. # The initial part of dependencies with yield is executed in the # FastAPI code, inside all the middlewares, but the teardown part # (after yield) is executed in the AsyncExitStack in this middleware, # if the AsyncExitStack lived outside of the custom middlewares and # contextvars were set in a dependency with yield in that internal # contextvars context, the values would not be available in the # outside context of the AsyncExitStack. # By putting the middleware and the AsyncExitStack here, inside all # user middlewares, the code before and after yield in dependencies # with yield is executed in the same contextvars context, so all values # set in contextvars before yield is still available after yield as # would be expected. # Additionally, by having this AsyncExitStack here, after the # ExceptionMiddleware, now dependencies can catch handled exceptions, # e.g. HTTPException, to customize the teardown code (e.g. DB session # rollback). Middleware ( AsyncExitStackMiddleware ), ] ) app = self . router for cls , options in reversed ( middleware ): app = cls ( app = app , ** options ) return app","title":"build_middleware_stack()"},{"location":"applications/#fastapi.applications.FastAPI.delete","text":"delete ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 def delete ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . delete ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , operation_id = operation_id , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"delete()"},{"location":"applications/#fastapi.applications.FastAPI.get","text":"get ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 def get ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . get ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"get()"},{"location":"applications/#fastapi.applications.FastAPI.head","text":"head ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 def head ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . head ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"head()"},{"location":"applications/#fastapi.applications.FastAPI.include_router","text":"include_router ( router , * , prefix = \"\" , tags = None , dependencies = None , responses = None , deprecated = None , include_in_schema = True , default_response_class = Default ( JSONResponse ), callbacks = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 def include_router ( self , router : routing . APIRouter , * , prefix : str = \"\" , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , default_response_class : Type [ Response ] = Default ( JSONResponse ), callbacks : Optional [ List [ BaseRoute ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> None : self . router . include_router ( router , prefix = prefix , tags = tags , dependencies = dependencies , responses = responses , deprecated = deprecated , include_in_schema = include_in_schema , default_response_class = default_response_class , callbacks = callbacks , generate_unique_id_function = generate_unique_id_function , )","title":"include_router()"},{"location":"applications/#fastapi.applications.FastAPI.openapi","text":"openapi () Source code in fastapi/applications.py 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 def openapi ( self ) -> Dict [ str , Any ]: if not self . openapi_schema : self . openapi_schema = get_openapi ( title = self . title , version = self . version , openapi_version = self . openapi_version , description = self . description , terms_of_service = self . terms_of_service , contact = self . contact , license_info = self . license_info , routes = self . routes , tags = self . openapi_tags , servers = self . servers , ) return self . openapi_schema","title":"openapi()"},{"location":"applications/#fastapi.applications.FastAPI.options","text":"options ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 def options ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . options ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"options()"},{"location":"applications/#fastapi.applications.FastAPI.patch","text":"patch ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 def patch ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . patch ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"patch()"},{"location":"applications/#fastapi.applications.FastAPI.post","text":"post ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 def post ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . post ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"post()"},{"location":"applications/#fastapi.applications.FastAPI.put","text":"put ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 def put ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . put ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"put()"},{"location":"applications/#fastapi.applications.FastAPI.setup","text":"setup () Source code in fastapi/applications.py 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 def setup ( self ) -> None : if self . openapi_url : urls = ( server_data . get ( \"url\" ) for server_data in self . servers ) server_urls = { url for url in urls if url } async def openapi ( req : Request ) -> JSONResponse : root_path = req . scope . get ( \"root_path\" , \"\" ) . rstrip ( \"/\" ) if root_path not in server_urls : if root_path and self . root_path_in_servers : self . servers . insert ( 0 , { \"url\" : root_path }) server_urls . add ( root_path ) return JSONResponse ( self . openapi ()) self . add_route ( self . openapi_url , openapi , include_in_schema = False ) if self . openapi_url and self . docs_url : async def swagger_ui_html ( req : Request ) -> HTMLResponse : root_path = req . scope . get ( \"root_path\" , \"\" ) . rstrip ( \"/\" ) openapi_url = root_path + self . openapi_url oauth2_redirect_url = self . swagger_ui_oauth2_redirect_url if oauth2_redirect_url : oauth2_redirect_url = root_path + oauth2_redirect_url return get_swagger_ui_html ( openapi_url = openapi_url , title = self . title + \" - Swagger UI\" , oauth2_redirect_url = oauth2_redirect_url , init_oauth = self . swagger_ui_init_oauth , swagger_ui_parameters = self . swagger_ui_parameters , ) self . add_route ( self . docs_url , swagger_ui_html , include_in_schema = False ) if self . swagger_ui_oauth2_redirect_url : async def swagger_ui_redirect ( req : Request ) -> HTMLResponse : return get_swagger_ui_oauth2_redirect_html () self . add_route ( self . swagger_ui_oauth2_redirect_url , swagger_ui_redirect , include_in_schema = False , ) if self . openapi_url and self . redoc_url : async def redoc_html ( req : Request ) -> HTMLResponse : root_path = req . scope . get ( \"root_path\" , \"\" ) . rstrip ( \"/\" ) openapi_url = root_path + self . openapi_url return get_redoc_html ( openapi_url = openapi_url , title = self . title + \" - ReDoc\" ) self . add_route ( self . redoc_url , redoc_html , include_in_schema = False )","title":"setup()"},{"location":"applications/#fastapi.applications.FastAPI.trace","text":"trace ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/applications.py 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 def trace ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ routing . APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . router . trace ( path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"trace()"},{"location":"applications/#fastapi.applications.FastAPI.websocket","text":"websocket ( path , name = None ) Source code in fastapi/applications.py 395 396 397 398 399 400 401 402 def websocket ( self , path : str , name : Optional [ str ] = None ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: def decorator ( func : DecoratedCallable ) -> DecoratedCallable : self . add_api_websocket_route ( path , func , name = name ) return func return decorator","title":"websocket()"},{"location":"concurrency/","text":"_T module-attribute \u00b6 _T = TypeVar ( '_T' ) contextmanager_in_threadpool async \u00b6 contextmanager_in_threadpool ( cm ) Source code in fastapi/concurrency.py 21 22 23 24 25 26 27 28 29 30 31 32 @asynccontextmanager async def contextmanager_in_threadpool ( cm : ContextManager [ _T ], ) -> AsyncGenerator [ _T , None ]: try : yield await run_in_threadpool ( cm . __enter__ ) except Exception as e : ok : bool = await run_in_threadpool ( cm . __exit__ , type ( e ), e , None ) if not ok : raise e else : await run_in_threadpool ( cm . __exit__ , None , None , None )","title":"concurrency"},{"location":"concurrency/#fastapi.concurrency._T","text":"_T = TypeVar ( '_T' )","title":"_T"},{"location":"concurrency/#fastapi.concurrency.contextmanager_in_threadpool","text":"contextmanager_in_threadpool ( cm ) Source code in fastapi/concurrency.py 21 22 23 24 25 26 27 28 29 30 31 32 @asynccontextmanager async def contextmanager_in_threadpool ( cm : ContextManager [ _T ], ) -> AsyncGenerator [ _T , None ]: try : yield await run_in_threadpool ( cm . __enter__ ) except Exception as e : ok : bool = await run_in_threadpool ( cm . __exit__ , type ( e ), e , None ) if not ok : raise e else : await run_in_threadpool ( cm . __exit__ , None , None , None )","title":"contextmanager_in_threadpool()"},{"location":"datastructures/","text":"DefaultType module-attribute \u00b6 DefaultType = TypeVar ( 'DefaultType' ) DefaultPlaceholder \u00b6 DefaultPlaceholder ( value ) You shouldn't use this class directly. It's used internally to recognize when a default value has been overwritten, even if the overridden default value was truthy. Source code in fastapi/datastructures.py 36 37 def __init__ ( self , value : Any ): self . value = value value instance-attribute \u00b6 value = value __bool__ \u00b6 __bool__ () Source code in fastapi/datastructures.py 39 40 def __bool__ ( self ) -> bool : return bool ( self . value ) __eq__ \u00b6 __eq__ ( o ) Source code in fastapi/datastructures.py 42 43 def __eq__ ( self , o : object ) -> bool : return isinstance ( o , DefaultPlaceholder ) and o . value == self . value UploadFile \u00b6 Bases: StarletteUploadFile __get_validators__ classmethod \u00b6 __get_validators__ () Source code in fastapi/datastructures.py 13 14 15 @classmethod def __get_validators__ ( cls : Type [ \"UploadFile\" ]) -> Iterable [ Callable [ ... , Any ]]: yield cls . validate __modify_schema__ classmethod \u00b6 __modify_schema__ ( field_schema ) Source code in fastapi/datastructures.py 23 24 25 @classmethod def __modify_schema__ ( cls , field_schema : Dict [ str , Any ]) -> None : field_schema . update ({ \"type\" : \"string\" , \"format\" : \"binary\" }) validate classmethod \u00b6 validate ( v ) Source code in fastapi/datastructures.py 17 18 19 20 21 @classmethod def validate ( cls : Type [ \"UploadFile\" ], v : Any ) -> Any : if not isinstance ( v , StarletteUploadFile ): raise ValueError ( f \"Expected UploadFile, received: { type ( v ) } \" ) return v Default \u00b6 Default ( value ) You shouldn't use this function directly. It's used internally to recognize when a default value has been overwritten, even if the overridden default value was truthy. Source code in fastapi/datastructures.py 49 50 51 52 53 54 55 56 def Default ( value : DefaultType ) -> DefaultType : \"\"\" You shouldn't use this function directly. It's used internally to recognize when a default value has been overwritten, even if the overridden default value was truthy. \"\"\" return DefaultPlaceholder ( value ) # type: ignore","title":"datastructures"},{"location":"datastructures/#fastapi.datastructures.DefaultType","text":"DefaultType = TypeVar ( 'DefaultType' )","title":"DefaultType"},{"location":"datastructures/#fastapi.datastructures.DefaultPlaceholder","text":"DefaultPlaceholder ( value ) You shouldn't use this class directly. It's used internally to recognize when a default value has been overwritten, even if the overridden default value was truthy. Source code in fastapi/datastructures.py 36 37 def __init__ ( self , value : Any ): self . value = value","title":"DefaultPlaceholder"},{"location":"datastructures/#fastapi.datastructures.DefaultPlaceholder.value","text":"value = value","title":"value"},{"location":"datastructures/#fastapi.datastructures.DefaultPlaceholder.__bool__","text":"__bool__ () Source code in fastapi/datastructures.py 39 40 def __bool__ ( self ) -> bool : return bool ( self . value )","title":"__bool__()"},{"location":"datastructures/#fastapi.datastructures.DefaultPlaceholder.__eq__","text":"__eq__ ( o ) Source code in fastapi/datastructures.py 42 43 def __eq__ ( self , o : object ) -> bool : return isinstance ( o , DefaultPlaceholder ) and o . value == self . value","title":"__eq__()"},{"location":"datastructures/#fastapi.datastructures.UploadFile","text":"Bases: StarletteUploadFile","title":"UploadFile"},{"location":"datastructures/#fastapi.datastructures.UploadFile.__get_validators__","text":"__get_validators__ () Source code in fastapi/datastructures.py 13 14 15 @classmethod def __get_validators__ ( cls : Type [ \"UploadFile\" ]) -> Iterable [ Callable [ ... , Any ]]: yield cls . validate","title":"__get_validators__()"},{"location":"datastructures/#fastapi.datastructures.UploadFile.__modify_schema__","text":"__modify_schema__ ( field_schema ) Source code in fastapi/datastructures.py 23 24 25 @classmethod def __modify_schema__ ( cls , field_schema : Dict [ str , Any ]) -> None : field_schema . update ({ \"type\" : \"string\" , \"format\" : \"binary\" })","title":"__modify_schema__()"},{"location":"datastructures/#fastapi.datastructures.UploadFile.validate","text":"validate ( v ) Source code in fastapi/datastructures.py 17 18 19 20 21 @classmethod def validate ( cls : Type [ \"UploadFile\" ], v : Any ) -> Any : if not isinstance ( v , StarletteUploadFile ): raise ValueError ( f \"Expected UploadFile, received: { type ( v ) } \" ) return v","title":"validate()"},{"location":"datastructures/#fastapi.datastructures.Default","text":"Default ( value ) You shouldn't use this function directly. It's used internally to recognize when a default value has been overwritten, even if the overridden default value was truthy. Source code in fastapi/datastructures.py 49 50 51 52 53 54 55 56 def Default ( value : DefaultType ) -> DefaultType : \"\"\" You shouldn't use this function directly. It's used internally to recognize when a default value has been overwritten, even if the overridden default value was truthy. \"\"\" return DefaultPlaceholder ( value ) # type: ignore","title":"Default()"},{"location":"encoders/","text":"DictIntStrAny module-attribute \u00b6 DictIntStrAny = Dict [ Union [ int , str ], Any ] SetIntStr module-attribute \u00b6 SetIntStr = Set [ Union [ int , str ]] encoders_by_class_tuples module-attribute \u00b6 encoders_by_class_tuples = ( generate_encoders_by_class_tuples ( ENCODERS_BY_TYPE ) ) generate_encoders_by_class_tuples \u00b6 generate_encoders_by_class_tuples ( type_encoder_map ) Source code in fastapi/encoders.py 15 16 17 18 19 20 21 22 23 def generate_encoders_by_class_tuples ( type_encoder_map : Dict [ Any , Callable [[ Any ], Any ]] ) -> Dict [ Callable [[ Any ], Any ], Tuple [ Any , ... ]]: encoders_by_class_tuples : Dict [ Callable [[ Any ], Any ], Tuple [ Any , ... ]] = defaultdict ( tuple ) for type_ , encoder in type_encoder_map . items (): encoders_by_class_tuples [ encoder ] += ( type_ ,) return encoders_by_class_tuples jsonable_encoder \u00b6 jsonable_encoder ( obj , include = None , exclude = None , by_alias = True , exclude_unset = False , exclude_defaults = False , exclude_none = False , custom_encoder = None , sqlalchemy_safe = True , ) Source code in fastapi/encoders.py 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 def jsonable_encoder ( obj : Any , include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , by_alias : bool = True , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , custom_encoder : Optional [ Dict [ Any , Callable [[ Any ], Any ]]] = None , sqlalchemy_safe : bool = True , ) -> Any : custom_encoder = custom_encoder or {} if custom_encoder : if type ( obj ) in custom_encoder : return custom_encoder [ type ( obj )]( obj ) else : for encoder_type , encoder_instance in custom_encoder . items (): if isinstance ( obj , encoder_type ): return encoder_instance ( obj ) if include is not None and not isinstance ( include , ( set , dict )): include = set ( include ) if exclude is not None and not isinstance ( exclude , ( set , dict )): exclude = set ( exclude ) if isinstance ( obj , BaseModel ): encoder = getattr ( obj . __config__ , \"json_encoders\" , {}) if custom_encoder : encoder . update ( custom_encoder ) obj_dict = obj . dict ( include = include , # type: ignore # in Pydantic exclude = exclude , # type: ignore # in Pydantic by_alias = by_alias , exclude_unset = exclude_unset , exclude_none = exclude_none , exclude_defaults = exclude_defaults , ) if \"__root__\" in obj_dict : obj_dict = obj_dict [ \"__root__\" ] return jsonable_encoder ( obj_dict , exclude_none = exclude_none , exclude_defaults = exclude_defaults , custom_encoder = encoder , sqlalchemy_safe = sqlalchemy_safe , ) if dataclasses . is_dataclass ( obj ): return dataclasses . asdict ( obj ) if isinstance ( obj , Enum ): return obj . value if isinstance ( obj , PurePath ): return str ( obj ) if isinstance ( obj , ( str , int , float , type ( None ))): return obj if isinstance ( obj , dict ): encoded_dict = {} for key , value in obj . items (): if ( ( not sqlalchemy_safe or ( not isinstance ( key , str )) or ( not key . startswith ( \"_sa\" )) ) and ( value is not None or not exclude_none ) and (( include and key in include ) or not exclude or key not in exclude ) ): encoded_key = jsonable_encoder ( key , by_alias = by_alias , exclude_unset = exclude_unset , exclude_none = exclude_none , custom_encoder = custom_encoder , sqlalchemy_safe = sqlalchemy_safe , ) encoded_value = jsonable_encoder ( value , by_alias = by_alias , exclude_unset = exclude_unset , exclude_none = exclude_none , custom_encoder = custom_encoder , sqlalchemy_safe = sqlalchemy_safe , ) encoded_dict [ encoded_key ] = encoded_value return encoded_dict if isinstance ( obj , ( list , set , frozenset , GeneratorType , tuple )): encoded_list = [] for item in obj : encoded_list . append ( jsonable_encoder ( item , include = include , exclude = exclude , by_alias = by_alias , exclude_unset = exclude_unset , exclude_defaults = exclude_defaults , exclude_none = exclude_none , custom_encoder = custom_encoder , sqlalchemy_safe = sqlalchemy_safe , ) ) return encoded_list if type ( obj ) in ENCODERS_BY_TYPE : return ENCODERS_BY_TYPE [ type ( obj )]( obj ) for encoder , classes_tuple in encoders_by_class_tuples . items (): if isinstance ( obj , classes_tuple ): return encoder ( obj ) errors : List [ Exception ] = [] try : data = dict ( obj ) except Exception as e : errors . append ( e ) try : data = vars ( obj ) except Exception as e : errors . append ( e ) raise ValueError ( errors ) return jsonable_encoder ( data , by_alias = by_alias , exclude_unset = exclude_unset , exclude_defaults = exclude_defaults , exclude_none = exclude_none , custom_encoder = custom_encoder , sqlalchemy_safe = sqlalchemy_safe , )","title":"encoders"},{"location":"encoders/#fastapi.encoders.DictIntStrAny","text":"DictIntStrAny = Dict [ Union [ int , str ], Any ]","title":"DictIntStrAny"},{"location":"encoders/#fastapi.encoders.SetIntStr","text":"SetIntStr = Set [ Union [ int , str ]]","title":"SetIntStr"},{"location":"encoders/#fastapi.encoders.encoders_by_class_tuples","text":"encoders_by_class_tuples = ( generate_encoders_by_class_tuples ( ENCODERS_BY_TYPE ) )","title":"encoders_by_class_tuples"},{"location":"encoders/#fastapi.encoders.generate_encoders_by_class_tuples","text":"generate_encoders_by_class_tuples ( type_encoder_map ) Source code in fastapi/encoders.py 15 16 17 18 19 20 21 22 23 def generate_encoders_by_class_tuples ( type_encoder_map : Dict [ Any , Callable [[ Any ], Any ]] ) -> Dict [ Callable [[ Any ], Any ], Tuple [ Any , ... ]]: encoders_by_class_tuples : Dict [ Callable [[ Any ], Any ], Tuple [ Any , ... ]] = defaultdict ( tuple ) for type_ , encoder in type_encoder_map . items (): encoders_by_class_tuples [ encoder ] += ( type_ ,) return encoders_by_class_tuples","title":"generate_encoders_by_class_tuples()"},{"location":"encoders/#fastapi.encoders.jsonable_encoder","text":"jsonable_encoder ( obj , include = None , exclude = None , by_alias = True , exclude_unset = False , exclude_defaults = False , exclude_none = False , custom_encoder = None , sqlalchemy_safe = True , ) Source code in fastapi/encoders.py 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 def jsonable_encoder ( obj : Any , include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , by_alias : bool = True , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , custom_encoder : Optional [ Dict [ Any , Callable [[ Any ], Any ]]] = None , sqlalchemy_safe : bool = True , ) -> Any : custom_encoder = custom_encoder or {} if custom_encoder : if type ( obj ) in custom_encoder : return custom_encoder [ type ( obj )]( obj ) else : for encoder_type , encoder_instance in custom_encoder . items (): if isinstance ( obj , encoder_type ): return encoder_instance ( obj ) if include is not None and not isinstance ( include , ( set , dict )): include = set ( include ) if exclude is not None and not isinstance ( exclude , ( set , dict )): exclude = set ( exclude ) if isinstance ( obj , BaseModel ): encoder = getattr ( obj . __config__ , \"json_encoders\" , {}) if custom_encoder : encoder . update ( custom_encoder ) obj_dict = obj . dict ( include = include , # type: ignore # in Pydantic exclude = exclude , # type: ignore # in Pydantic by_alias = by_alias , exclude_unset = exclude_unset , exclude_none = exclude_none , exclude_defaults = exclude_defaults , ) if \"__root__\" in obj_dict : obj_dict = obj_dict [ \"__root__\" ] return jsonable_encoder ( obj_dict , exclude_none = exclude_none , exclude_defaults = exclude_defaults , custom_encoder = encoder , sqlalchemy_safe = sqlalchemy_safe , ) if dataclasses . is_dataclass ( obj ): return dataclasses . asdict ( obj ) if isinstance ( obj , Enum ): return obj . value if isinstance ( obj , PurePath ): return str ( obj ) if isinstance ( obj , ( str , int , float , type ( None ))): return obj if isinstance ( obj , dict ): encoded_dict = {} for key , value in obj . items (): if ( ( not sqlalchemy_safe or ( not isinstance ( key , str )) or ( not key . startswith ( \"_sa\" )) ) and ( value is not None or not exclude_none ) and (( include and key in include ) or not exclude or key not in exclude ) ): encoded_key = jsonable_encoder ( key , by_alias = by_alias , exclude_unset = exclude_unset , exclude_none = exclude_none , custom_encoder = custom_encoder , sqlalchemy_safe = sqlalchemy_safe , ) encoded_value = jsonable_encoder ( value , by_alias = by_alias , exclude_unset = exclude_unset , exclude_none = exclude_none , custom_encoder = custom_encoder , sqlalchemy_safe = sqlalchemy_safe , ) encoded_dict [ encoded_key ] = encoded_value return encoded_dict if isinstance ( obj , ( list , set , frozenset , GeneratorType , tuple )): encoded_list = [] for item in obj : encoded_list . append ( jsonable_encoder ( item , include = include , exclude = exclude , by_alias = by_alias , exclude_unset = exclude_unset , exclude_defaults = exclude_defaults , exclude_none = exclude_none , custom_encoder = custom_encoder , sqlalchemy_safe = sqlalchemy_safe , ) ) return encoded_list if type ( obj ) in ENCODERS_BY_TYPE : return ENCODERS_BY_TYPE [ type ( obj )]( obj ) for encoder , classes_tuple in encoders_by_class_tuples . items (): if isinstance ( obj , classes_tuple ): return encoder ( obj ) errors : List [ Exception ] = [] try : data = dict ( obj ) except Exception as e : errors . append ( e ) try : data = vars ( obj ) except Exception as e : errors . append ( e ) raise ValueError ( errors ) return jsonable_encoder ( data , by_alias = by_alias , exclude_unset = exclude_unset , exclude_defaults = exclude_defaults , exclude_none = exclude_none , custom_encoder = custom_encoder , sqlalchemy_safe = sqlalchemy_safe , )","title":"jsonable_encoder()"},{"location":"exception_handlers/","text":"http_exception_handler async \u00b6 http_exception_handler ( request , exc ) Source code in fastapi/exception_handlers.py 9 10 11 12 13 14 15 16 async def http_exception_handler ( request : Request , exc : HTTPException ) -> JSONResponse : headers = getattr ( exc , \"headers\" , None ) if headers : return JSONResponse ( { \"detail\" : exc . detail }, status_code = exc . status_code , headers = headers ) else : return JSONResponse ({ \"detail\" : exc . detail }, status_code = exc . status_code ) request_validation_exception_handler async \u00b6 request_validation_exception_handler ( request , exc ) Source code in fastapi/exception_handlers.py 19 20 21 22 23 24 25 async def request_validation_exception_handler ( request : Request , exc : RequestValidationError ) -> JSONResponse : return JSONResponse ( status_code = HTTP_422_UNPROCESSABLE_ENTITY , content = { \"detail\" : jsonable_encoder ( exc . errors ())}, )","title":"exception_handlers"},{"location":"exception_handlers/#fastapi.exception_handlers.http_exception_handler","text":"http_exception_handler ( request , exc ) Source code in fastapi/exception_handlers.py 9 10 11 12 13 14 15 16 async def http_exception_handler ( request : Request , exc : HTTPException ) -> JSONResponse : headers = getattr ( exc , \"headers\" , None ) if headers : return JSONResponse ( { \"detail\" : exc . detail }, status_code = exc . status_code , headers = headers ) else : return JSONResponse ({ \"detail\" : exc . detail }, status_code = exc . status_code )","title":"http_exception_handler()"},{"location":"exception_handlers/#fastapi.exception_handlers.request_validation_exception_handler","text":"request_validation_exception_handler ( request , exc ) Source code in fastapi/exception_handlers.py 19 20 21 22 23 24 25 async def request_validation_exception_handler ( request : Request , exc : RequestValidationError ) -> JSONResponse : return JSONResponse ( status_code = HTTP_422_UNPROCESSABLE_ENTITY , content = { \"detail\" : jsonable_encoder ( exc . errors ())}, )","title":"request_validation_exception_handler()"},{"location":"exceptions/","text":"RequestErrorModel module-attribute \u00b6 RequestErrorModel : Type [ BaseModel ] = create_model ( \"Request\" ) WebSocketErrorModel module-attribute \u00b6 WebSocketErrorModel : Type [ BaseModel ] = create_model ( \"WebSocket\" ) FastAPIError \u00b6 Bases: RuntimeError A generic, FastAPI-specific error. HTTPException \u00b6 HTTPException ( status_code , detail = None , headers = None ) Bases: StarletteHTTPException Source code in fastapi/exceptions.py 9 10 11 12 13 14 15 def __init__ ( self , status_code : int , detail : Any = None , headers : Optional [ Dict [ str , Any ]] = None , ) -> None : super () . __init__ ( status_code = status_code , detail = detail , headers = headers ) RequestValidationError \u00b6 RequestValidationError ( errors , * , body = None ) Bases: ValidationError Source code in fastapi/exceptions.py 29 30 31 def __init__ ( self , errors : Sequence [ ErrorList ], * , body : Any = None ) -> None : self . body = body super () . __init__ ( errors , RequestErrorModel ) body instance-attribute \u00b6 body = body WebSocketRequestValidationError \u00b6 WebSocketRequestValidationError ( errors ) Bases: ValidationError Source code in fastapi/exceptions.py 35 36 def __init__ ( self , errors : Sequence [ ErrorList ]) -> None : super () . __init__ ( errors , WebSocketErrorModel )","title":"exceptions"},{"location":"exceptions/#fastapi.exceptions.RequestErrorModel","text":"RequestErrorModel : Type [ BaseModel ] = create_model ( \"Request\" )","title":"RequestErrorModel"},{"location":"exceptions/#fastapi.exceptions.WebSocketErrorModel","text":"WebSocketErrorModel : Type [ BaseModel ] = create_model ( \"WebSocket\" )","title":"WebSocketErrorModel"},{"location":"exceptions/#fastapi.exceptions.FastAPIError","text":"Bases: RuntimeError A generic, FastAPI-specific error.","title":"FastAPIError"},{"location":"exceptions/#fastapi.exceptions.HTTPException","text":"HTTPException ( status_code , detail = None , headers = None ) Bases: StarletteHTTPException Source code in fastapi/exceptions.py 9 10 11 12 13 14 15 def __init__ ( self , status_code : int , detail : Any = None , headers : Optional [ Dict [ str , Any ]] = None , ) -> None : super () . __init__ ( status_code = status_code , detail = detail , headers = headers )","title":"HTTPException"},{"location":"exceptions/#fastapi.exceptions.RequestValidationError","text":"RequestValidationError ( errors , * , body = None ) Bases: ValidationError Source code in fastapi/exceptions.py 29 30 31 def __init__ ( self , errors : Sequence [ ErrorList ], * , body : Any = None ) -> None : self . body = body super () . __init__ ( errors , RequestErrorModel )","title":"RequestValidationError"},{"location":"exceptions/#fastapi.exceptions.RequestValidationError.body","text":"body = body","title":"body"},{"location":"exceptions/#fastapi.exceptions.WebSocketRequestValidationError","text":"WebSocketRequestValidationError ( errors ) Bases: ValidationError Source code in fastapi/exceptions.py 35 36 def __init__ ( self , errors : Sequence [ ErrorList ]) -> None : super () . __init__ ( errors , WebSocketErrorModel )","title":"WebSocketRequestValidationError"},{"location":"logger/","text":"logger module-attribute \u00b6 logger = logging . getLogger ( 'fastapi' )","title":"logger"},{"location":"logger/#fastapi.logger.logger","text":"logger = logging . getLogger ( 'fastapi' )","title":"logger"},{"location":"param_functions/","text":"Body \u00b6 Body ( default = Undefined , * , embed = False , media_type = \"application/json\" , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , ** extra ) Source code in fastapi/param_functions.py 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 def Body ( # noqa: N802 default : Any = Undefined , * , embed : bool = False , media_type : str = \"application/json\" , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , ** extra : Any , ) -> Any : return params . Body ( default = default , embed = embed , media_type = media_type , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , ** extra , ) Cookie \u00b6 Cookie ( default = Undefined , * , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Source code in fastapi/param_functions.py 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 def Cookie ( # noqa: N802 default : Any = Undefined , * , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ) -> Any : return params . Cookie ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , deprecated = deprecated , include_in_schema = include_in_schema , ** extra , ) Depends \u00b6 Depends ( dependency = None , * , use_cache = True ) Source code in fastapi/param_functions.py 278 279 280 281 def Depends ( # noqa: N802 dependency : Optional [ Callable [ ... , Any ]] = None , * , use_cache : bool = True ) -> Any : return params . Depends ( dependency = dependency , use_cache = use_cache ) File \u00b6 File ( default = Undefined , * , media_type = \"multipart/form-data\" , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , ** extra ) Source code in fastapi/param_functions.py 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 def File ( # noqa: N802 default : Any = Undefined , * , media_type : str = \"multipart/form-data\" , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , ** extra : Any , ) -> Any : return params . File ( default = default , media_type = media_type , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , ** extra , ) Form \u00b6 Form ( default = Undefined , * , media_type = \"application/x-www-form-urlencoded\" , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , ** extra ) Source code in fastapi/param_functions.py 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 def Form ( # noqa: N802 default : Any = Undefined , * , media_type : str = \"application/x-www-form-urlencoded\" , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , ** extra : Any , ) -> Any : return params . Form ( default = default , media_type = media_type , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , ** extra , ) Header \u00b6 Header ( default = Undefined , * , alias = None , convert_underscores = True , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Source code in fastapi/param_functions.py 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 def Header ( # noqa: N802 default : Any = Undefined , * , alias : Optional [ str ] = None , convert_underscores : bool = True , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ) -> Any : return params . Header ( default = default , alias = alias , convert_underscores = convert_underscores , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , deprecated = deprecated , include_in_schema = include_in_schema , ** extra , ) Path \u00b6 Path ( default = Undefined , * , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Source code in fastapi/param_functions.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 def Path ( # noqa: N802 default : Any = Undefined , * , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ) -> Any : return params . Path ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , deprecated = deprecated , include_in_schema = include_in_schema , ** extra , ) Query \u00b6 Query ( default = Undefined , * , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Source code in fastapi/param_functions.py 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 def Query ( # noqa: N802 default : Any = Undefined , * , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ) -> Any : return params . Query ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , deprecated = deprecated , include_in_schema = include_in_schema , ** extra , ) Security \u00b6 Security ( dependency = None , * , scopes = None , use_cache = True ) Source code in fastapi/param_functions.py 284 285 286 287 288 289 290 def Security ( # noqa: N802 dependency : Optional [ Callable [ ... , Any ]] = None , * , scopes : Optional [ Sequence [ str ]] = None , use_cache : bool = True , ) -> Any : return params . Security ( dependency = dependency , scopes = scopes , use_cache = use_cache )","title":"param_functions"},{"location":"param_functions/#fastapi.param_functions.Body","text":"Body ( default = Undefined , * , embed = False , media_type = \"application/json\" , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , ** extra ) Source code in fastapi/param_functions.py 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 def Body ( # noqa: N802 default : Any = Undefined , * , embed : bool = False , media_type : str = \"application/json\" , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , ** extra : Any , ) -> Any : return params . Body ( default = default , embed = embed , media_type = media_type , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , ** extra , )","title":"Body()"},{"location":"param_functions/#fastapi.param_functions.Cookie","text":"Cookie ( default = Undefined , * , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Source code in fastapi/param_functions.py 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 def Cookie ( # noqa: N802 default : Any = Undefined , * , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ) -> Any : return params . Cookie ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , deprecated = deprecated , include_in_schema = include_in_schema , ** extra , )","title":"Cookie()"},{"location":"param_functions/#fastapi.param_functions.Depends","text":"Depends ( dependency = None , * , use_cache = True ) Source code in fastapi/param_functions.py 278 279 280 281 def Depends ( # noqa: N802 dependency : Optional [ Callable [ ... , Any ]] = None , * , use_cache : bool = True ) -> Any : return params . Depends ( dependency = dependency , use_cache = use_cache )","title":"Depends()"},{"location":"param_functions/#fastapi.param_functions.File","text":"File ( default = Undefined , * , media_type = \"multipart/form-data\" , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , ** extra ) Source code in fastapi/param_functions.py 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 def File ( # noqa: N802 default : Any = Undefined , * , media_type : str = \"multipart/form-data\" , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , ** extra : Any , ) -> Any : return params . File ( default = default , media_type = media_type , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , ** extra , )","title":"File()"},{"location":"param_functions/#fastapi.param_functions.Form","text":"Form ( default = Undefined , * , media_type = \"application/x-www-form-urlencoded\" , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , ** extra ) Source code in fastapi/param_functions.py 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 def Form ( # noqa: N802 default : Any = Undefined , * , media_type : str = \"application/x-www-form-urlencoded\" , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , ** extra : Any , ) -> Any : return params . Form ( default = default , media_type = media_type , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , ** extra , )","title":"Form()"},{"location":"param_functions/#fastapi.param_functions.Header","text":"Header ( default = Undefined , * , alias = None , convert_underscores = True , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Source code in fastapi/param_functions.py 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 def Header ( # noqa: N802 default : Any = Undefined , * , alias : Optional [ str ] = None , convert_underscores : bool = True , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ) -> Any : return params . Header ( default = default , alias = alias , convert_underscores = convert_underscores , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , deprecated = deprecated , include_in_schema = include_in_schema , ** extra , )","title":"Header()"},{"location":"param_functions/#fastapi.param_functions.Path","text":"Path ( default = Undefined , * , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Source code in fastapi/param_functions.py 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 def Path ( # noqa: N802 default : Any = Undefined , * , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ) -> Any : return params . Path ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , deprecated = deprecated , include_in_schema = include_in_schema , ** extra , )","title":"Path()"},{"location":"param_functions/#fastapi.param_functions.Query","text":"Query ( default = Undefined , * , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Source code in fastapi/param_functions.py 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 def Query ( # noqa: N802 default : Any = Undefined , * , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ) -> Any : return params . Query ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , deprecated = deprecated , include_in_schema = include_in_schema , ** extra , )","title":"Query()"},{"location":"param_functions/#fastapi.param_functions.Security","text":"Security ( dependency = None , * , scopes = None , use_cache = True ) Source code in fastapi/param_functions.py 284 285 286 287 288 289 290 def Security ( # noqa: N802 dependency : Optional [ Callable [ ... , Any ]] = None , * , scopes : Optional [ Sequence [ str ]] = None , use_cache : bool = True , ) -> Any : return params . Security ( dependency = dependency , scopes = scopes , use_cache = use_cache )","title":"Security()"},{"location":"params/","text":"Body \u00b6 Body ( default = Undefined , * , embed = False , media_type = \"application/json\" , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , ** extra ) Bases: FieldInfo Source code in fastapi/params.py 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 def __init__ ( self , default : Any = Undefined , * , embed : bool = False , media_type : str = \"application/json\" , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , ** extra : Any , ): self . embed = embed self . media_type = media_type self . example = example self . examples = examples super () . __init__ ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , ** extra , ) embed instance-attribute \u00b6 embed = embed example instance-attribute \u00b6 example = example examples instance-attribute \u00b6 examples = examples media_type instance-attribute \u00b6 media_type = media_type __repr__ \u00b6 __repr__ () Source code in fastapi/params.py 275 276 def __repr__ ( self ) -> str : return f \" { self . __class__ . __name__ } ( { self . default } )\" Cookie \u00b6 Cookie ( default = Undefined , * , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Bases: Param Source code in fastapi/params.py 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 def __init__ ( self , default : Any = Undefined , * , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ): super () . __init__ ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , deprecated = deprecated , example = example , examples = examples , include_in_schema = include_in_schema , ** extra , ) in_ class-attribute \u00b6 in_ = ParamTypes . cookie Depends \u00b6 Depends ( dependency = None , * , use_cache = True ) Source code in fastapi/params.py 359 360 361 362 363 def __init__ ( self , dependency : Optional [ Callable [ ... , Any ]] = None , * , use_cache : bool = True ): self . dependency = dependency self . use_cache = use_cache dependency instance-attribute \u00b6 dependency = dependency use_cache instance-attribute \u00b6 use_cache = use_cache __repr__ \u00b6 __repr__ () Source code in fastapi/params.py 365 366 367 368 def __repr__ ( self ) -> str : attr = getattr ( self . dependency , \"__name__\" , type ( self . dependency ) . __name__ ) cache = \"\" if self . use_cache else \", use_cache=False\" return f \" { self . __class__ . __name__ } ( { attr }{ cache } )\" File \u00b6 File ( default , * , media_type = \"multipart/form-data\" , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , ** extra ) Bases: Form Source code in fastapi/params.py 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 def __init__ ( self , default : Any , * , media_type : str = \"multipart/form-data\" , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , ** extra : Any , ): super () . __init__ ( default = default , media_type = media_type , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , ** extra , ) Form \u00b6 Form ( default , * , media_type = \"application/x-www-form-urlencoded\" , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , ** extra ) Bases: Body Source code in fastapi/params.py 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 def __init__ ( self , default : Any , * , media_type : str = \"application/x-www-form-urlencoded\" , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , ** extra : Any , ): super () . __init__ ( default = default , embed = True , media_type = media_type , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , ** extra , ) Header \u00b6 Header ( default = Undefined , * , alias = None , convert_underscores = True , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Bases: Param Source code in fastapi/params.py 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 def __init__ ( self , default : Any = Undefined , * , alias : Optional [ str ] = None , convert_underscores : bool = True , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ): self . convert_underscores = convert_underscores super () . __init__ ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , deprecated = deprecated , example = example , examples = examples , include_in_schema = include_in_schema , ** extra , ) convert_underscores instance-attribute \u00b6 convert_underscores = convert_underscores in_ class-attribute \u00b6 in_ = ParamTypes . header Param \u00b6 Param ( default = Undefined , * , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Bases: FieldInfo Source code in fastapi/params.py 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 def __init__ ( self , default : Any = Undefined , * , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ): self . deprecated = deprecated self . example = example self . examples = examples self . include_in_schema = include_in_schema super () . __init__ ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , ** extra , ) deprecated instance-attribute \u00b6 deprecated = deprecated example instance-attribute \u00b6 example = example examples instance-attribute \u00b6 examples = examples in_ class-attribute \u00b6 in_ : ParamTypes include_in_schema instance-attribute \u00b6 include_in_schema = include_in_schema __repr__ \u00b6 __repr__ () Source code in fastapi/params.py 56 57 def __repr__ ( self ) -> str : return f \" { self . __class__ . __name__ } ( { self . default } )\" ParamTypes \u00b6 Bases: Enum cookie class-attribute \u00b6 cookie = 'cookie' header class-attribute \u00b6 header = 'header' path class-attribute \u00b6 path = 'path' query class-attribute \u00b6 query = 'query' Path \u00b6 Path ( default = Undefined , * , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Bases: Param Source code in fastapi/params.py 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 def __init__ ( self , default : Any = Undefined , * , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ): self . in_ = self . in_ super () . __init__ ( default =... , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , deprecated = deprecated , example = example , examples = examples , include_in_schema = include_in_schema , ** extra , ) in_ instance-attribute \u00b6 in_ = self . in_ Query \u00b6 Query ( default = Undefined , * , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Bases: Param Source code in fastapi/params.py 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 def __init__ ( self , default : Any = Undefined , * , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ): super () . __init__ ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , deprecated = deprecated , example = example , examples = examples , include_in_schema = include_in_schema , ** extra , ) in_ class-attribute \u00b6 in_ = ParamTypes . query Security \u00b6 Security ( dependency = None , * , scopes = None , use_cache = True ) Bases: Depends Source code in fastapi/params.py 372 373 374 375 376 377 378 379 380 def __init__ ( self , dependency : Optional [ Callable [ ... , Any ]] = None , * , scopes : Optional [ Sequence [ str ]] = None , use_cache : bool = True , ): super () . __init__ ( dependency = dependency , use_cache = use_cache ) self . scopes = scopes or [] scopes instance-attribute \u00b6 scopes = scopes or []","title":"params"},{"location":"params/#fastapi.params.Body","text":"Body ( default = Undefined , * , embed = False , media_type = \"application/json\" , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , ** extra ) Bases: FieldInfo Source code in fastapi/params.py 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 def __init__ ( self , default : Any = Undefined , * , embed : bool = False , media_type : str = \"application/json\" , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , ** extra : Any , ): self . embed = embed self . media_type = media_type self . example = example self . examples = examples super () . __init__ ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , ** extra , )","title":"Body"},{"location":"params/#fastapi.params.Body.embed","text":"embed = embed","title":"embed"},{"location":"params/#fastapi.params.Body.example","text":"example = example","title":"example"},{"location":"params/#fastapi.params.Body.examples","text":"examples = examples","title":"examples"},{"location":"params/#fastapi.params.Body.media_type","text":"media_type = media_type","title":"media_type"},{"location":"params/#fastapi.params.Body.__repr__","text":"__repr__ () Source code in fastapi/params.py 275 276 def __repr__ ( self ) -> str : return f \" { self . __class__ . __name__ } ( { self . default } )\"","title":"__repr__()"},{"location":"params/#fastapi.params.Cookie","text":"Cookie ( default = Undefined , * , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Bases: Param Source code in fastapi/params.py 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 def __init__ ( self , default : Any = Undefined , * , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ): super () . __init__ ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , deprecated = deprecated , example = example , examples = examples , include_in_schema = include_in_schema , ** extra , )","title":"Cookie"},{"location":"params/#fastapi.params.Cookie.in_","text":"in_ = ParamTypes . cookie","title":"in_"},{"location":"params/#fastapi.params.Depends","text":"Depends ( dependency = None , * , use_cache = True ) Source code in fastapi/params.py 359 360 361 362 363 def __init__ ( self , dependency : Optional [ Callable [ ... , Any ]] = None , * , use_cache : bool = True ): self . dependency = dependency self . use_cache = use_cache","title":"Depends"},{"location":"params/#fastapi.params.Depends.dependency","text":"dependency = dependency","title":"dependency"},{"location":"params/#fastapi.params.Depends.use_cache","text":"use_cache = use_cache","title":"use_cache"},{"location":"params/#fastapi.params.Depends.__repr__","text":"__repr__ () Source code in fastapi/params.py 365 366 367 368 def __repr__ ( self ) -> str : attr = getattr ( self . dependency , \"__name__\" , type ( self . dependency ) . __name__ ) cache = \"\" if self . use_cache else \", use_cache=False\" return f \" { self . __class__ . __name__ } ( { attr }{ cache } )\"","title":"__repr__()"},{"location":"params/#fastapi.params.File","text":"File ( default , * , media_type = \"multipart/form-data\" , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , ** extra ) Bases: Form Source code in fastapi/params.py 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 def __init__ ( self , default : Any , * , media_type : str = \"multipart/form-data\" , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , ** extra : Any , ): super () . __init__ ( default = default , media_type = media_type , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , ** extra , )","title":"File"},{"location":"params/#fastapi.params.Form","text":"Form ( default , * , media_type = \"application/x-www-form-urlencoded\" , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , ** extra ) Bases: Body Source code in fastapi/params.py 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 def __init__ ( self , default : Any , * , media_type : str = \"application/x-www-form-urlencoded\" , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , ** extra : Any , ): super () . __init__ ( default = default , embed = True , media_type = media_type , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , example = example , examples = examples , ** extra , )","title":"Form"},{"location":"params/#fastapi.params.Header","text":"Header ( default = Undefined , * , alias = None , convert_underscores = True , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Bases: Param Source code in fastapi/params.py 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 def __init__ ( self , default : Any = Undefined , * , alias : Optional [ str ] = None , convert_underscores : bool = True , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ): self . convert_underscores = convert_underscores super () . __init__ ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , deprecated = deprecated , example = example , examples = examples , include_in_schema = include_in_schema , ** extra , )","title":"Header"},{"location":"params/#fastapi.params.Header.convert_underscores","text":"convert_underscores = convert_underscores","title":"convert_underscores"},{"location":"params/#fastapi.params.Header.in_","text":"in_ = ParamTypes . header","title":"in_"},{"location":"params/#fastapi.params.Param","text":"Param ( default = Undefined , * , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Bases: FieldInfo Source code in fastapi/params.py 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 def __init__ ( self , default : Any = Undefined , * , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ): self . deprecated = deprecated self . example = example self . examples = examples self . include_in_schema = include_in_schema super () . __init__ ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , ** extra , )","title":"Param"},{"location":"params/#fastapi.params.Param.deprecated","text":"deprecated = deprecated","title":"deprecated"},{"location":"params/#fastapi.params.Param.example","text":"example = example","title":"example"},{"location":"params/#fastapi.params.Param.examples","text":"examples = examples","title":"examples"},{"location":"params/#fastapi.params.Param.in_","text":"in_ : ParamTypes","title":"in_"},{"location":"params/#fastapi.params.Param.include_in_schema","text":"include_in_schema = include_in_schema","title":"include_in_schema"},{"location":"params/#fastapi.params.Param.__repr__","text":"__repr__ () Source code in fastapi/params.py 56 57 def __repr__ ( self ) -> str : return f \" { self . __class__ . __name__ } ( { self . default } )\"","title":"__repr__()"},{"location":"params/#fastapi.params.ParamTypes","text":"Bases: Enum","title":"ParamTypes"},{"location":"params/#fastapi.params.ParamTypes.cookie","text":"cookie = 'cookie'","title":"cookie"},{"location":"params/#fastapi.params.ParamTypes.header","text":"header = 'header'","title":"header"},{"location":"params/#fastapi.params.ParamTypes.path","text":"path = 'path'","title":"path"},{"location":"params/#fastapi.params.ParamTypes.query","text":"query = 'query'","title":"query"},{"location":"params/#fastapi.params.Path","text":"Path ( default = Undefined , * , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Bases: Param Source code in fastapi/params.py 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 def __init__ ( self , default : Any = Undefined , * , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ): self . in_ = self . in_ super () . __init__ ( default =... , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , deprecated = deprecated , example = example , examples = examples , include_in_schema = include_in_schema , ** extra , )","title":"Path"},{"location":"params/#fastapi.params.Path.in_","text":"in_ = self . in_","title":"in_"},{"location":"params/#fastapi.params.Query","text":"Query ( default = Undefined , * , alias = None , title = None , description = None , gt = None , ge = None , lt = None , le = None , min_length = None , max_length = None , regex = None , example = Undefined , examples = None , deprecated = None , include_in_schema = True , ** extra ) Bases: Param Source code in fastapi/params.py 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 def __init__ ( self , default : Any = Undefined , * , alias : Optional [ str ] = None , title : Optional [ str ] = None , description : Optional [ str ] = None , gt : Optional [ float ] = None , ge : Optional [ float ] = None , lt : Optional [ float ] = None , le : Optional [ float ] = None , min_length : Optional [ int ] = None , max_length : Optional [ int ] = None , regex : Optional [ str ] = None , example : Any = Undefined , examples : Optional [ Dict [ str , Any ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , ** extra : Any , ): super () . __init__ ( default = default , alias = alias , title = title , description = description , gt = gt , ge = ge , lt = lt , le = le , min_length = min_length , max_length = max_length , regex = regex , deprecated = deprecated , example = example , examples = examples , include_in_schema = include_in_schema , ** extra , )","title":"Query"},{"location":"params/#fastapi.params.Query.in_","text":"in_ = ParamTypes . query","title":"in_"},{"location":"params/#fastapi.params.Security","text":"Security ( dependency = None , * , scopes = None , use_cache = True ) Bases: Depends Source code in fastapi/params.py 372 373 374 375 376 377 378 379 380 def __init__ ( self , dependency : Optional [ Callable [ ... , Any ]] = None , * , scopes : Optional [ Sequence [ str ]] = None , use_cache : bool = True , ): super () . __init__ ( dependency = dependency , use_cache = use_cache ) self . scopes = scopes or []","title":"Security"},{"location":"params/#fastapi.params.Security.scopes","text":"scopes = scopes or []","title":"scopes"},{"location":"requests/","text":"","title":"requests"},{"location":"responses/","text":"ORJSONResponse \u00b6 Bases: JSONResponse media_type class-attribute \u00b6 media_type = 'application/json' render \u00b6 render ( content ) Source code in fastapi/responses.py 32 33 34 def render ( self , content : Any ) -> bytes : assert orjson is not None , \"orjson must be installed to use ORJSONResponse\" return orjson . dumps ( content ) UJSONResponse \u00b6 Bases: JSONResponse render \u00b6 render ( content ) Source code in fastapi/responses.py 24 25 26 def render ( self , content : Any ) -> bytes : assert ujson is not None , \"ujson must be installed to use UJSONResponse\" return ujson . dumps ( content , ensure_ascii = False ) . encode ( \"utf-8\" )","title":"responses"},{"location":"responses/#fastapi.responses.ORJSONResponse","text":"Bases: JSONResponse","title":"ORJSONResponse"},{"location":"responses/#fastapi.responses.ORJSONResponse.media_type","text":"media_type = 'application/json'","title":"media_type"},{"location":"responses/#fastapi.responses.ORJSONResponse.render","text":"render ( content ) Source code in fastapi/responses.py 32 33 34 def render ( self , content : Any ) -> bytes : assert orjson is not None , \"orjson must be installed to use ORJSONResponse\" return orjson . dumps ( content )","title":"render()"},{"location":"responses/#fastapi.responses.UJSONResponse","text":"Bases: JSONResponse","title":"UJSONResponse"},{"location":"responses/#fastapi.responses.UJSONResponse.render","text":"render ( content ) Source code in fastapi/responses.py 24 25 26 def render ( self , content : Any ) -> bytes : assert ujson is not None , \"ujson must be installed to use UJSONResponse\" return ujson . dumps ( content , ensure_ascii = False ) . encode ( \"utf-8\" )","title":"render()"},{"location":"routing/","text":"APIRoute \u00b6 APIRoute ( path , endpoint , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , name = None , methods = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), dependency_overrides_provider = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Bases: routing . Route Source code in fastapi/routing.pydef __init__ ( self , path : str , endpoint : Callable [ ... , Any ], * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , name : Optional [ str ] = None , methods : Optional [ Union [ Set [ str ], List [ str ]]] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Union [ Type [ Response ], DefaultPlaceholder ] = Default ( JSONResponse ), dependency_overrides_provider : Optional [ Any ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Union [ Callable [[ \"APIRoute\" ], str ], DefaultPlaceholder ] = Default ( generate_unique_id ), ) -> None : self . path = path self . endpoint = endpoint self . response_model = response_model self . summary = summary self . response_description = response_description self . deprecated = deprecated self . operation_id = operation_id self . response_model_include = response_model_include self . response_model_exclude = response_model_exclude self . response_model_by_alias = response_model_by_alias self . response_model_exclude_unset = response_model_exclude_unset self . response_model_exclude_defaults = response_model_exclude_defaults self . response_model_exclude_none = response_model_exclude_none self . include_in_schema = include_in_schema self . response_class = response_class self . dependency_overrides_provider = dependency_overrides_provider self . callbacks = callbacks self . openapi_extra = openapi_extra self . generate_unique_id_function = generate_unique_id_function self . tags = tags or [] self . responses = responses or {} self . name = get_name ( endpoint ) if name is None else name self . path_regex , self . path_format , self . param_convertors = compile_path ( path ) if methods is None : methods = [ \"GET\" ] self . methods : Set [ str ] = { method . upper () for method in methods } if isinstance ( generate_unique_id_function , DefaultPlaceholder ): current_generate_unique_id : Callable [ [ \"APIRoute\" ], str ] = generate_unique_id_function . value else : current_generate_unique_id = generate_unique_id_function self . unique_id = self . operation_id or current_generate_unique_id ( self ) # normalize enums e.g. http.HTTPStatus if isinstance ( status_code , IntEnum ): status_code = int ( status_code ) self . status_code = status_code if self . response_model : assert ( status_code not in STATUS_CODES_WITH_NO_BODY ), f \"Status code { status_code } must not have a response body\" response_name = \"Response_\" + self . unique_id self . response_field = create_response_field ( name = response_name , type_ = self . response_model ) # Create a clone of the field, so that a Pydantic submodel is not returned # as is just because it's an instance of a subclass of a more limited class # e.g. UserInDB (containing hashed_password) could be a subclass of User # that doesn't have the hashed_password. But because it's a subclass, it # would pass the validation and be returned as is. # By being a new field, no inheritance will be passed as is. A new model # will be always created. self . secure_cloned_response_field : Optional [ ModelField ] = create_cloned_field ( self . response_field ) else : self . response_field = None # type: ignore self . secure_cloned_response_field = None if dependencies : self . dependencies = list ( dependencies ) else : self . dependencies = [] self . description = description or inspect . cleandoc ( self . endpoint . __doc__ or \"\" ) # if a \"form feed\" character (page break) is found in the description text, # truncate description text to the content preceding the first \"form feed\" self . description = self . description . split ( \" \\f \" )[ 0 ] response_fields = {} for additional_status_code , response in self . responses . items (): assert isinstance ( response , dict ), \"An additional response must be a dict\" model = response . get ( \"model\" ) if model : assert ( additional_status_code not in STATUS_CODES_WITH_NO_BODY ), f \"Status code { additional_status_code } must not have a response body\" response_name = f \"Response_ { additional_status_code } _ { self . unique_id } \" response_field = create_response_field ( name = response_name , type_ = model ) response_fields [ additional_status_code ] = response_field if response_fields : self . response_fields : Dict [ Union [ int , str ], ModelField ] = response_fields else : self . response_fields = {} assert callable ( endpoint ), \"An endpoint must be a callable\" self . dependant = get_dependant ( path = self . path_format , call = self . endpoint ) for depends in self . dependencies [:: - 1 ]: self . dependant . dependencies . insert ( 0 , get_parameterless_sub_dependant ( depends = depends , path = self . path_format ), ) self . body_field = get_body_field ( dependant = self . dependant , name = self . unique_id ) self . app = request_response ( self . get_route_handler ()) app instance-attribute \u00b6 app = request_response ( self . get_route_handler ()) body_field instance-attribute \u00b6 body_field = get_body_field ( dependant = self . dependant , name = self . unique_id ) callbacks instance-attribute \u00b6 callbacks = callbacks dependant instance-attribute \u00b6 dependant = get_dependant ( path = self . path_format , call = self . endpoint ) dependencies instance-attribute \u00b6 dependencies = list ( dependencies ) dependency_overrides_provider instance-attribute \u00b6 dependency_overrides_provider = ( dependency_overrides_provider ) deprecated instance-attribute \u00b6 deprecated = deprecated description instance-attribute \u00b6 description = self . description . split ( ' \\x0c ' )[ 0 ] endpoint instance-attribute \u00b6 endpoint = endpoint generate_unique_id_function instance-attribute \u00b6 generate_unique_id_function = generate_unique_id_function include_in_schema instance-attribute \u00b6 include_in_schema = include_in_schema methods instance-attribute \u00b6 methods : Set [ str ] = { method . upper () for method in methods } name instance-attribute \u00b6 name = get_name ( endpoint ) if name is None else name openapi_extra instance-attribute \u00b6 openapi_extra = openapi_extra operation_id instance-attribute \u00b6 operation_id = operation_id path instance-attribute \u00b6 path = path response_class instance-attribute \u00b6 response_class = response_class response_description instance-attribute \u00b6 response_description = response_description response_field instance-attribute \u00b6 response_field = create_response_field ( name = response_name , type_ = self . response_model ) response_fields instance-attribute \u00b6 response_fields : Dict [ Union [ int , str ], ModelField ] = response_fields response_model instance-attribute \u00b6 response_model = response_model response_model_by_alias instance-attribute \u00b6 response_model_by_alias = response_model_by_alias response_model_exclude instance-attribute \u00b6 response_model_exclude = response_model_exclude response_model_exclude_defaults instance-attribute \u00b6 response_model_exclude_defaults = ( response_model_exclude_defaults ) response_model_exclude_none instance-attribute \u00b6 response_model_exclude_none = response_model_exclude_none response_model_exclude_unset instance-attribute \u00b6 response_model_exclude_unset = response_model_exclude_unset response_model_include instance-attribute \u00b6 response_model_include = response_model_include responses instance-attribute \u00b6 responses = responses or {} secure_cloned_response_field instance-attribute \u00b6 secure_cloned_response_field : Optional [ ModelField ] = create_cloned_field ( self . response_field ) status_code instance-attribute \u00b6 status_code = status_code summary instance-attribute \u00b6 summary = summary tags instance-attribute \u00b6 tags = tags or [] unique_id instance-attribute \u00b6 unique_id = self . operation_id or current_generate_unique_id ( self ) get_route_handler \u00b6 get_route_handler () Source code in fastapi/routing.py 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 def get_route_handler ( self ) -> Callable [[ Request ], Coroutine [ Any , Any , Response ]]: return get_request_handler ( dependant = self . dependant , body_field = self . body_field , status_code = self . status_code , response_class = self . response_class , response_field = self . secure_cloned_response_field , response_model_include = self . response_model_include , response_model_exclude = self . response_model_exclude , response_model_by_alias = self . response_model_by_alias , response_model_exclude_unset = self . response_model_exclude_unset , response_model_exclude_defaults = self . response_model_exclude_defaults , response_model_exclude_none = self . response_model_exclude_none , dependency_overrides_provider = self . dependency_overrides_provider , ) matches \u00b6 matches ( scope ) Source code in fastapi/routing.py 450 451 452 453 454 def matches ( self , scope : Scope ) -> Tuple [ Match , Scope ]: match , child_scope = super () . matches ( scope ) if match != Match . NONE : child_scope [ \"route\" ] = self return match , child_scope APIRouter \u00b6 APIRouter ( * , prefix = \"\" , tags = None , dependencies = None , default_response_class = Default ( JSONResponse ), responses = None , callbacks = None , routes = None , redirect_slashes = True , default = None , dependency_overrides_provider = None , route_class = APIRoute , on_startup = None , on_shutdown = None , deprecated = None , include_in_schema = True , generate_unique_id_function = Default ( generate_unique_id ) ) Bases: routing . Router Source code in fastapi/routing.py 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 def __init__ ( self , * , prefix : str = \"\" , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , default_response_class : Type [ Response ] = Default ( JSONResponse ), responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , callbacks : Optional [ List [ BaseRoute ]] = None , routes : Optional [ List [ routing . BaseRoute ]] = None , redirect_slashes : bool = True , default : Optional [ ASGIApp ] = None , dependency_overrides_provider : Optional [ Any ] = None , route_class : Type [ APIRoute ] = APIRoute , on_startup : Optional [ Sequence [ Callable [[], Any ]]] = None , on_shutdown : Optional [ Sequence [ Callable [[], Any ]]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> None : super () . __init__ ( routes = routes , redirect_slashes = redirect_slashes , default = default , on_startup = on_startup , on_shutdown = on_shutdown , ) if prefix : assert prefix . startswith ( \"/\" ), \"A path prefix must start with '/'\" assert not prefix . endswith ( \"/\" ), \"A path prefix must not end with '/', as the routes will start with '/'\" self . prefix = prefix self . tags : List [ Union [ str , Enum ]] = tags or [] self . dependencies = list ( dependencies or []) or [] self . deprecated = deprecated self . include_in_schema = include_in_schema self . responses = responses or {} self . callbacks = callbacks or [] self . dependency_overrides_provider = dependency_overrides_provider self . route_class = route_class self . default_response_class = default_response_class self . generate_unique_id_function = generate_unique_id_function callbacks instance-attribute \u00b6 callbacks = callbacks or [] default_response_class instance-attribute \u00b6 default_response_class = default_response_class dependencies instance-attribute \u00b6 dependencies = list ( dependencies or []) or [] dependency_overrides_provider instance-attribute \u00b6 dependency_overrides_provider = ( dependency_overrides_provider ) deprecated instance-attribute \u00b6 deprecated = deprecated generate_unique_id_function instance-attribute \u00b6 generate_unique_id_function = generate_unique_id_function include_in_schema instance-attribute \u00b6 include_in_schema = include_in_schema prefix instance-attribute \u00b6 prefix = prefix responses instance-attribute \u00b6 responses = responses or {} route_class instance-attribute \u00b6 route_class = route_class tags instance-attribute \u00b6 tags : List [ Union [ str , Enum ]] = tags or [] add_api_route \u00b6 add_api_route ( path , endpoint , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , methods = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , route_class_override = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 def add_api_route ( self , path : str , endpoint : Callable [ ... , Any ], * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , methods : Optional [ Union [ Set [ str ], List [ str ]]] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Union [ Type [ Response ], DefaultPlaceholder ] = Default ( JSONResponse ), name : Optional [ str ] = None , route_class_override : Optional [ Type [ APIRoute ]] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Union [ Callable [[ APIRoute ], str ], DefaultPlaceholder ] = Default ( generate_unique_id ), ) -> None : route_class = route_class_override or self . route_class responses = responses or {} combined_responses = { ** self . responses , ** responses } current_response_class = get_value_or_default ( response_class , self . default_response_class ) current_tags = self . tags . copy () if tags : current_tags . extend ( tags ) current_dependencies = self . dependencies . copy () if dependencies : current_dependencies . extend ( dependencies ) current_callbacks = self . callbacks . copy () if callbacks : current_callbacks . extend ( callbacks ) current_generate_unique_id = get_value_or_default ( generate_unique_id_function , self . generate_unique_id_function ) route = route_class ( self . prefix + path , endpoint = endpoint , response_model = response_model , status_code = status_code , tags = current_tags , dependencies = current_dependencies , summary = summary , description = description , response_description = response_description , responses = combined_responses , deprecated = deprecated or self . deprecated , methods = methods , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema and self . include_in_schema , response_class = current_response_class , name = name , dependency_overrides_provider = self . dependency_overrides_provider , callbacks = current_callbacks , openapi_extra = openapi_extra , generate_unique_id_function = current_generate_unique_id , ) self . routes . append ( route ) add_api_websocket_route \u00b6 add_api_websocket_route ( path , endpoint , name = None ) Source code in fastapi/routing.py 648 649 650 651 652 653 654 655 656 657 def add_api_websocket_route ( self , path : str , endpoint : Callable [ ... , Any ], name : Optional [ str ] = None ) -> None : route = APIWebSocketRoute ( self . prefix + path , endpoint = endpoint , name = name , dependency_overrides_provider = self . dependency_overrides_provider , ) self . routes . append ( route ) api_route \u00b6 api_route ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , methods = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 def api_route ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , methods : Optional [ List [ str ]] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: def decorator ( func : DecoratedCallable ) -> DecoratedCallable : self . add_api_route ( path , func , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = methods , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) return func return decorator delete \u00b6 delete ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 def delete ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"DELETE\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) get \u00b6 get ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 def get ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"GET\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) head \u00b6 head ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 def head ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"HEAD\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) include_router \u00b6 include_router ( router , * , prefix = \"\" , tags = None , dependencies = None , default_response_class = Default ( JSONResponse ), responses = None , callbacks = None , deprecated = None , include_in_schema = True , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 def include_router ( self , router : \"APIRouter\" , * , prefix : str = \"\" , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , default_response_class : Type [ Response ] = Default ( JSONResponse ), responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , callbacks : Optional [ List [ BaseRoute ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> None : if prefix : assert prefix . startswith ( \"/\" ), \"A path prefix must start with '/'\" assert not prefix . endswith ( \"/\" ), \"A path prefix must not end with '/', as the routes will start with '/'\" else : for r in router . routes : path = getattr ( r , \"path\" ) name = getattr ( r , \"name\" , \"unknown\" ) if path is not None and not path : raise Exception ( f \"Prefix and path cannot be both empty (path operation: { name } )\" ) if responses is None : responses = {} for route in router . routes : if isinstance ( route , APIRoute ): combined_responses = { ** responses , ** route . responses } use_response_class = get_value_or_default ( route . response_class , router . default_response_class , default_response_class , self . default_response_class , ) current_tags = [] if tags : current_tags . extend ( tags ) if route . tags : current_tags . extend ( route . tags ) current_dependencies : List [ params . Depends ] = [] if dependencies : current_dependencies . extend ( dependencies ) if route . dependencies : current_dependencies . extend ( route . dependencies ) current_callbacks = [] if callbacks : current_callbacks . extend ( callbacks ) if route . callbacks : current_callbacks . extend ( route . callbacks ) current_generate_unique_id = get_value_or_default ( route . generate_unique_id_function , router . generate_unique_id_function , generate_unique_id_function , self . generate_unique_id_function , ) self . add_api_route ( prefix + route . path , route . endpoint , response_model = route . response_model , status_code = route . status_code , tags = current_tags , dependencies = current_dependencies , summary = route . summary , description = route . description , response_description = route . response_description , responses = combined_responses , deprecated = route . deprecated or deprecated or self . deprecated , methods = route . methods , operation_id = route . operation_id , response_model_include = route . response_model_include , response_model_exclude = route . response_model_exclude , response_model_by_alias = route . response_model_by_alias , response_model_exclude_unset = route . response_model_exclude_unset , response_model_exclude_defaults = route . response_model_exclude_defaults , response_model_exclude_none = route . response_model_exclude_none , include_in_schema = route . include_in_schema and self . include_in_schema and include_in_schema , response_class = use_response_class , name = route . name , route_class_override = type ( route ), callbacks = current_callbacks , openapi_extra = route . openapi_extra , generate_unique_id_function = current_generate_unique_id , ) elif isinstance ( route , routing . Route ): methods = list ( route . methods or []) self . add_route ( prefix + route . path , route . endpoint , methods = methods , include_in_schema = route . include_in_schema , name = route . name , ) elif isinstance ( route , APIWebSocketRoute ): self . add_api_websocket_route ( prefix + route . path , route . endpoint , name = route . name ) elif isinstance ( route , routing . WebSocketRoute ): self . add_websocket_route ( prefix + route . path , route . endpoint , name = route . name ) for handler in router . on_startup : self . add_event_handler ( \"startup\" , handler ) for handler in router . on_shutdown : self . add_event_handler ( \"shutdown\" , handler ) options \u00b6 options ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 def options ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"OPTIONS\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) patch \u00b6 patch ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 def patch ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"PATCH\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) post \u00b6 post ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 def post ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"POST\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) put \u00b6 put ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 def put ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"PUT\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) trace \u00b6 trace ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 def trace ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"TRACE\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) websocket \u00b6 websocket ( path , name = None ) Source code in fastapi/routing.py 659 660 661 662 663 664 665 666 def websocket ( self , path : str , name : Optional [ str ] = None ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: def decorator ( func : DecoratedCallable ) -> DecoratedCallable : self . add_api_websocket_route ( path , func , name = name ) return func return decorator APIWebSocketRoute \u00b6 APIWebSocketRoute ( path , endpoint , * , name = None , dependency_overrides_provider = None ) Bases: routing . WebSocketRoute Source code in fastapi/routing.py 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 def __init__ ( self , path : str , endpoint : Callable [ ... , Any ], * , name : Optional [ str ] = None , dependency_overrides_provider : Optional [ Any ] = None , ) -> None : self . path = path self . endpoint = endpoint self . name = get_name ( endpoint ) if name is None else name self . dependant = get_dependant ( path = path , call = self . endpoint ) self . app = websocket_session ( get_websocket_app ( dependant = self . dependant , dependency_overrides_provider = dependency_overrides_provider , ) ) self . path_regex , self . path_format , self . param_convertors = compile_path ( path ) app instance-attribute \u00b6 app = websocket_session ( get_websocket_app ( dependant = self . dependant , dependency_overrides_provider = dependency_overrides_provider , ) ) dependant instance-attribute \u00b6 dependant = get_dependant ( path = path , call = self . endpoint ) endpoint instance-attribute \u00b6 endpoint = endpoint name instance-attribute \u00b6 name = get_name ( endpoint ) if name is None else name path instance-attribute \u00b6 path = path matches \u00b6 matches ( scope ) Source code in fastapi/routing.py 300 301 302 303 304 def matches ( self , scope : Scope ) -> Tuple [ Match , Scope ]: match , child_scope = super () . matches ( scope ) if match != Match . NONE : child_scope [ \"route\" ] = self return match , child_scope _prepare_response_content \u00b6 _prepare_response_content ( res , * , exclude_unset , exclude_defaults = False , exclude_none = False ) Source code in fastapi/routing.py 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 def _prepare_response_content ( res : Any , * , exclude_unset : bool , exclude_defaults : bool = False , exclude_none : bool = False , ) -> Any : if isinstance ( res , BaseModel ): read_with_orm_mode = getattr ( res . __config__ , \"read_with_orm_mode\" , None ) if read_with_orm_mode : # Let from_orm extract the data from this model instead of converting # it now to a dict. # Otherwise there's no way to extract lazy data that requires attribute # access instead of dict iteration, e.g. lazy relationships. return res return res . dict ( by_alias = True , exclude_unset = exclude_unset , exclude_defaults = exclude_defaults , exclude_none = exclude_none , ) elif isinstance ( res , list ): return [ _prepare_response_content ( item , exclude_unset = exclude_unset , exclude_defaults = exclude_defaults , exclude_none = exclude_none , ) for item in res ] elif isinstance ( res , dict ): return { k : _prepare_response_content ( v , exclude_unset = exclude_unset , exclude_defaults = exclude_defaults , exclude_none = exclude_none , ) for k , v in res . items () } elif dataclasses . is_dataclass ( res ): return dataclasses . asdict ( res ) return res get_request_handler \u00b6 get_request_handler ( dependant , body_field = None , status_code = None , response_class = Default ( JSONResponse ), response_field = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , dependency_overrides_provider = None , ) Source code in fastapi/routing.py 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 def get_request_handler ( dependant : Dependant , body_field : Optional [ ModelField ] = None , status_code : Optional [ int ] = None , response_class : Union [ Type [ Response ], DefaultPlaceholder ] = Default ( JSONResponse ), response_field : Optional [ ModelField ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , dependency_overrides_provider : Optional [ Any ] = None , ) -> Callable [[ Request ], Coroutine [ Any , Any , Response ]]: assert dependant . call is not None , \"dependant.call must be a function\" is_coroutine = asyncio . iscoroutinefunction ( dependant . call ) is_body_form = body_field and isinstance ( body_field . field_info , params . Form ) if isinstance ( response_class , DefaultPlaceholder ): actual_response_class : Type [ Response ] = response_class . value else : actual_response_class = response_class async def app ( request : Request ) -> Response : try : body : Any = None if body_field : if is_body_form : body = await request . form () else : body_bytes = await request . body () if body_bytes : json_body : Any = Undefined content_type_value = request . headers . get ( \"content-type\" ) if not content_type_value : json_body = await request . json () else : message = email . message . Message () message [ \"content-type\" ] = content_type_value if message . get_content_maintype () == \"application\" : subtype = message . get_content_subtype () if subtype == \"json\" or subtype . endswith ( \"+json\" ): json_body = await request . json () if json_body != Undefined : body = json_body else : body = body_bytes except json . JSONDecodeError as e : raise RequestValidationError ([ ErrorWrapper ( e , ( \"body\" , e . pos ))], body = e . doc ) except Exception as e : raise HTTPException ( status_code = 400 , detail = \"There was an error parsing the body\" ) from e solved_result = await solve_dependencies ( request = request , dependant = dependant , body = body , dependency_overrides_provider = dependency_overrides_provider , ) values , errors , background_tasks , sub_response , _ = solved_result if errors : raise RequestValidationError ( errors , body = body ) else : raw_response = await run_endpoint_function ( dependant = dependant , values = values , is_coroutine = is_coroutine ) if isinstance ( raw_response , Response ): if raw_response . background is None : raw_response . background = background_tasks return raw_response response_data = await serialize_response ( field = response_field , response_content = raw_response , include = response_model_include , exclude = response_model_exclude , by_alias = response_model_by_alias , exclude_unset = response_model_exclude_unset , exclude_defaults = response_model_exclude_defaults , exclude_none = response_model_exclude_none , is_coroutine = is_coroutine , ) response_args : Dict [ str , Any ] = { \"background\" : background_tasks } # If status_code was set, use it, otherwise use the default from the # response class, in the case of redirect it's 307 if status_code is not None : response_args [ \"status_code\" ] = status_code response = actual_response_class ( response_data , ** response_args ) response . headers . raw . extend ( sub_response . headers . raw ) if sub_response . status_code : response . status_code = sub_response . status_code return response return app get_websocket_app \u00b6 get_websocket_app ( dependant , dependency_overrides_provider = None ) Source code in fastapi/routing.py 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 def get_websocket_app ( dependant : Dependant , dependency_overrides_provider : Optional [ Any ] = None ) -> Callable [[ WebSocket ], Coroutine [ Any , Any , Any ]]: async def app ( websocket : WebSocket ) -> None : solved_result = await solve_dependencies ( request = websocket , dependant = dependant , dependency_overrides_provider = dependency_overrides_provider , ) values , errors , _ , _2 , _3 = solved_result if errors : await websocket . close ( code = WS_1008_POLICY_VIOLATION ) raise WebSocketRequestValidationError ( errors ) assert dependant . call is not None , \"dependant.call must be a function\" await dependant . call ( ** values ) return app run_endpoint_function async \u00b6 run_endpoint_function ( * , dependant , values , is_coroutine ) Source code in fastapi/routing.py 152 153 154 155 156 157 158 159 160 161 162 async def run_endpoint_function ( * , dependant : Dependant , values : Dict [ str , Any ], is_coroutine : bool ) -> Any : # Only called by get_request_handler. Has been split into its own function to # facilitate profiling endpoints, since inner functions are harder to profile. assert dependant . call is not None , \"dependant.call must be a function\" if is_coroutine : return await dependant . call ( ** values ) else : return await run_in_threadpool ( dependant . call , ** values ) serialize_response async \u00b6 serialize_response ( * , field = None , response_content , include = None , exclude = None , by_alias = True , exclude_unset = False , exclude_defaults = False , exclude_none = False , is_coroutine = True ) Source code in fastapi/routing.py 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 async def serialize_response ( * , field : Optional [ ModelField ] = None , response_content : Any , include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , by_alias : bool = True , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , is_coroutine : bool = True , ) -> Any : if field : errors = [] response_content = _prepare_response_content ( response_content , exclude_unset = exclude_unset , exclude_defaults = exclude_defaults , exclude_none = exclude_none , ) if is_coroutine : value , errors_ = field . validate ( response_content , {}, loc = ( \"response\" ,)) else : value , errors_ = await run_in_threadpool ( # type: ignore[misc] field . validate , response_content , {}, loc = ( \"response\" ,) ) if isinstance ( errors_ , ErrorWrapper ): errors . append ( errors_ ) elif isinstance ( errors_ , list ): errors . extend ( errors_ ) if errors : raise ValidationError ( errors , field . type_ ) return jsonable_encoder ( value , include = include , exclude = exclude , by_alias = by_alias , exclude_unset = exclude_unset , exclude_defaults = exclude_defaults , exclude_none = exclude_none , ) else : return jsonable_encoder ( response_content )","title":"routing"},{"location":"routing/#fastapi.routing.APIRoute","text":"APIRoute ( path , endpoint , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , name = None , methods = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), dependency_overrides_provider = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Bases: routing . Route Source code in fastapi/routing.py 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 def __init__ ( self , path : str , endpoint : Callable [ ... , Any ], * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , name : Optional [ str ] = None , methods : Optional [ Union [ Set [ str ], List [ str ]]] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Union [ Type [ Response ], DefaultPlaceholder ] = Default ( JSONResponse ), dependency_overrides_provider : Optional [ Any ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Union [ Callable [[ \"APIRoute\" ], str ], DefaultPlaceholder ] = Default ( generate_unique_id ), ) -> None : self . path = path self . endpoint = endpoint self . response_model = response_model self . summary = summary self . response_description = response_description self . deprecated = deprecated self . operation_id = operation_id self . response_model_include = response_model_include self . response_model_exclude = response_model_exclude self . response_model_by_alias = response_model_by_alias self . response_model_exclude_unset = response_model_exclude_unset self . response_model_exclude_defaults = response_model_exclude_defaults self . response_model_exclude_none = response_model_exclude_none self . include_in_schema = include_in_schema self . response_class = response_class self . dependency_overrides_provider = dependency_overrides_provider self . callbacks = callbacks self . openapi_extra = openapi_extra self . generate_unique_id_function = generate_unique_id_function self . tags = tags or [] self . responses = responses or {} self . name = get_name ( endpoint ) if name is None else name self . path_regex , self . path_format , self . param_convertors = compile_path ( path ) if methods is None : methods = [ \"GET\" ] self . methods : Set [ str ] = { method . upper () for method in methods } if isinstance ( generate_unique_id_function , DefaultPlaceholder ): current_generate_unique_id : Callable [ [ \"APIRoute\" ], str ] = generate_unique_id_function . value else : current_generate_unique_id = generate_unique_id_function self . unique_id = self . operation_id or current_generate_unique_id ( self ) # normalize enums e.g. http.HTTPStatus if isinstance ( status_code , IntEnum ): status_code = int ( status_code ) self . status_code = status_code if self . response_model : assert ( status_code not in STATUS_CODES_WITH_NO_BODY ), f \"Status code { status_code } must not have a response body\" response_name = \"Response_\" + self . unique_id self . response_field = create_response_field ( name = response_name , type_ = self . response_model ) # Create a clone of the field, so that a Pydantic submodel is not returned # as is just because it's an instance of a subclass of a more limited class # e.g. UserInDB (containing hashed_password) could be a subclass of User # that doesn't have the hashed_password. But because it's a subclass, it # would pass the validation and be returned as is. # By being a new field, no inheritance will be passed as is. A new model # will be always created. self . secure_cloned_response_field : Optional [ ModelField ] = create_cloned_field ( self . response_field ) else : self . response_field = None # type: ignore self . secure_cloned_response_field = None if dependencies : self . dependencies = list ( dependencies ) else : self . dependencies = [] self . description = description or inspect . cleandoc ( self . endpoint . __doc__ or \"\" ) # if a \"form feed\" character (page break) is found in the description text, # truncate description text to the content preceding the first \"form feed\" self . description = self . description . split ( \" \\f \" )[ 0 ] response_fields = {} for additional_status_code , response in self . responses . items (): assert isinstance ( response , dict ), \"An additional response must be a dict\" model = response . get ( \"model\" ) if model : assert ( additional_status_code not in STATUS_CODES_WITH_NO_BODY ), f \"Status code { additional_status_code } must not have a response body\" response_name = f \"Response_ { additional_status_code } _ { self . unique_id } \" response_field = create_response_field ( name = response_name , type_ = model ) response_fields [ additional_status_code ] = response_field if response_fields : self . response_fields : Dict [ Union [ int , str ], ModelField ] = response_fields else : self . response_fields = {} assert callable ( endpoint ), \"An endpoint must be a callable\" self . dependant = get_dependant ( path = self . path_format , call = self . endpoint ) for depends in self . dependencies [:: - 1 ]: self . dependant . dependencies . insert ( 0 , get_parameterless_sub_dependant ( depends = depends , path = self . path_format ), ) self . body_field = get_body_field ( dependant = self . dependant , name = self . unique_id ) self . app = request_response ( self . get_route_handler ())","title":"APIRoute"},{"location":"routing/#fastapi.routing.APIRoute.app","text":"app = request_response ( self . get_route_handler ())","title":"app"},{"location":"routing/#fastapi.routing.APIRoute.body_field","text":"body_field = get_body_field ( dependant = self . dependant , name = self . unique_id )","title":"body_field"},{"location":"routing/#fastapi.routing.APIRoute.callbacks","text":"callbacks = callbacks","title":"callbacks"},{"location":"routing/#fastapi.routing.APIRoute.dependant","text":"dependant = get_dependant ( path = self . path_format , call = self . endpoint )","title":"dependant"},{"location":"routing/#fastapi.routing.APIRoute.dependencies","text":"dependencies = list ( dependencies )","title":"dependencies"},{"location":"routing/#fastapi.routing.APIRoute.dependency_overrides_provider","text":"dependency_overrides_provider = ( dependency_overrides_provider )","title":"dependency_overrides_provider"},{"location":"routing/#fastapi.routing.APIRoute.deprecated","text":"deprecated = deprecated","title":"deprecated"},{"location":"routing/#fastapi.routing.APIRoute.description","text":"description = self . description . split ( ' \\x0c ' )[ 0 ]","title":"description"},{"location":"routing/#fastapi.routing.APIRoute.endpoint","text":"endpoint = endpoint","title":"endpoint"},{"location":"routing/#fastapi.routing.APIRoute.generate_unique_id_function","text":"generate_unique_id_function = generate_unique_id_function","title":"generate_unique_id_function"},{"location":"routing/#fastapi.routing.APIRoute.include_in_schema","text":"include_in_schema = include_in_schema","title":"include_in_schema"},{"location":"routing/#fastapi.routing.APIRoute.methods","text":"methods : Set [ str ] = { method . upper () for method in methods }","title":"methods"},{"location":"routing/#fastapi.routing.APIRoute.name","text":"name = get_name ( endpoint ) if name is None else name","title":"name"},{"location":"routing/#fastapi.routing.APIRoute.openapi_extra","text":"openapi_extra = openapi_extra","title":"openapi_extra"},{"location":"routing/#fastapi.routing.APIRoute.operation_id","text":"operation_id = operation_id","title":"operation_id"},{"location":"routing/#fastapi.routing.APIRoute.path","text":"path = path","title":"path"},{"location":"routing/#fastapi.routing.APIRoute.response_class","text":"response_class = response_class","title":"response_class"},{"location":"routing/#fastapi.routing.APIRoute.response_description","text":"response_description = response_description","title":"response_description"},{"location":"routing/#fastapi.routing.APIRoute.response_field","text":"response_field = create_response_field ( name = response_name , type_ = self . response_model )","title":"response_field"},{"location":"routing/#fastapi.routing.APIRoute.response_fields","text":"response_fields : Dict [ Union [ int , str ], ModelField ] = response_fields","title":"response_fields"},{"location":"routing/#fastapi.routing.APIRoute.response_model","text":"response_model = response_model","title":"response_model"},{"location":"routing/#fastapi.routing.APIRoute.response_model_by_alias","text":"response_model_by_alias = response_model_by_alias","title":"response_model_by_alias"},{"location":"routing/#fastapi.routing.APIRoute.response_model_exclude","text":"response_model_exclude = response_model_exclude","title":"response_model_exclude"},{"location":"routing/#fastapi.routing.APIRoute.response_model_exclude_defaults","text":"response_model_exclude_defaults = ( response_model_exclude_defaults )","title":"response_model_exclude_defaults"},{"location":"routing/#fastapi.routing.APIRoute.response_model_exclude_none","text":"response_model_exclude_none = response_model_exclude_none","title":"response_model_exclude_none"},{"location":"routing/#fastapi.routing.APIRoute.response_model_exclude_unset","text":"response_model_exclude_unset = response_model_exclude_unset","title":"response_model_exclude_unset"},{"location":"routing/#fastapi.routing.APIRoute.response_model_include","text":"response_model_include = response_model_include","title":"response_model_include"},{"location":"routing/#fastapi.routing.APIRoute.responses","text":"responses = responses or {}","title":"responses"},{"location":"routing/#fastapi.routing.APIRoute.secure_cloned_response_field","text":"secure_cloned_response_field : Optional [ ModelField ] = create_cloned_field ( self . response_field )","title":"secure_cloned_response_field"},{"location":"routing/#fastapi.routing.APIRoute.status_code","text":"status_code = status_code","title":"status_code"},{"location":"routing/#fastapi.routing.APIRoute.summary","text":"summary = summary","title":"summary"},{"location":"routing/#fastapi.routing.APIRoute.tags","text":"tags = tags or []","title":"tags"},{"location":"routing/#fastapi.routing.APIRoute.unique_id","text":"unique_id = self . operation_id or current_generate_unique_id ( self )","title":"unique_id"},{"location":"routing/#fastapi.routing.APIRoute.get_route_handler","text":"get_route_handler () Source code in fastapi/routing.py 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 def get_route_handler ( self ) -> Callable [[ Request ], Coroutine [ Any , Any , Response ]]: return get_request_handler ( dependant = self . dependant , body_field = self . body_field , status_code = self . status_code , response_class = self . response_class , response_field = self . secure_cloned_response_field , response_model_include = self . response_model_include , response_model_exclude = self . response_model_exclude , response_model_by_alias = self . response_model_by_alias , response_model_exclude_unset = self . response_model_exclude_unset , response_model_exclude_defaults = self . response_model_exclude_defaults , response_model_exclude_none = self . response_model_exclude_none , dependency_overrides_provider = self . dependency_overrides_provider , )","title":"get_route_handler()"},{"location":"routing/#fastapi.routing.APIRoute.matches","text":"matches ( scope ) Source code in fastapi/routing.py 450 451 452 453 454 def matches ( self , scope : Scope ) -> Tuple [ Match , Scope ]: match , child_scope = super () . matches ( scope ) if match != Match . NONE : child_scope [ \"route\" ] = self return match , child_scope","title":"matches()"},{"location":"routing/#fastapi.routing.APIRouter","text":"APIRouter ( * , prefix = \"\" , tags = None , dependencies = None , default_response_class = Default ( JSONResponse ), responses = None , callbacks = None , routes = None , redirect_slashes = True , default = None , dependency_overrides_provider = None , route_class = APIRoute , on_startup = None , on_shutdown = None , deprecated = None , include_in_schema = True , generate_unique_id_function = Default ( generate_unique_id ) ) Bases: routing . Router Source code in fastapi/routing.py 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 def __init__ ( self , * , prefix : str = \"\" , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , default_response_class : Type [ Response ] = Default ( JSONResponse ), responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , callbacks : Optional [ List [ BaseRoute ]] = None , routes : Optional [ List [ routing . BaseRoute ]] = None , redirect_slashes : bool = True , default : Optional [ ASGIApp ] = None , dependency_overrides_provider : Optional [ Any ] = None , route_class : Type [ APIRoute ] = APIRoute , on_startup : Optional [ Sequence [ Callable [[], Any ]]] = None , on_shutdown : Optional [ Sequence [ Callable [[], Any ]]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> None : super () . __init__ ( routes = routes , redirect_slashes = redirect_slashes , default = default , on_startup = on_startup , on_shutdown = on_shutdown , ) if prefix : assert prefix . startswith ( \"/\" ), \"A path prefix must start with '/'\" assert not prefix . endswith ( \"/\" ), \"A path prefix must not end with '/', as the routes will start with '/'\" self . prefix = prefix self . tags : List [ Union [ str , Enum ]] = tags or [] self . dependencies = list ( dependencies or []) or [] self . deprecated = deprecated self . include_in_schema = include_in_schema self . responses = responses or {} self . callbacks = callbacks or [] self . dependency_overrides_provider = dependency_overrides_provider self . route_class = route_class self . default_response_class = default_response_class self . generate_unique_id_function = generate_unique_id_function","title":"APIRouter"},{"location":"routing/#fastapi.routing.APIRouter.callbacks","text":"callbacks = callbacks or []","title":"callbacks"},{"location":"routing/#fastapi.routing.APIRouter.default_response_class","text":"default_response_class = default_response_class","title":"default_response_class"},{"location":"routing/#fastapi.routing.APIRouter.dependencies","text":"dependencies = list ( dependencies or []) or []","title":"dependencies"},{"location":"routing/#fastapi.routing.APIRouter.dependency_overrides_provider","text":"dependency_overrides_provider = ( dependency_overrides_provider )","title":"dependency_overrides_provider"},{"location":"routing/#fastapi.routing.APIRouter.deprecated","text":"deprecated = deprecated","title":"deprecated"},{"location":"routing/#fastapi.routing.APIRouter.generate_unique_id_function","text":"generate_unique_id_function = generate_unique_id_function","title":"generate_unique_id_function"},{"location":"routing/#fastapi.routing.APIRouter.include_in_schema","text":"include_in_schema = include_in_schema","title":"include_in_schema"},{"location":"routing/#fastapi.routing.APIRouter.prefix","text":"prefix = prefix","title":"prefix"},{"location":"routing/#fastapi.routing.APIRouter.responses","text":"responses = responses or {}","title":"responses"},{"location":"routing/#fastapi.routing.APIRouter.route_class","text":"route_class = route_class","title":"route_class"},{"location":"routing/#fastapi.routing.APIRouter.tags","text":"tags : List [ Union [ str , Enum ]] = tags or []","title":"tags"},{"location":"routing/#fastapi.routing.APIRouter.add_api_route","text":"add_api_route ( path , endpoint , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , methods = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , route_class_override = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 def add_api_route ( self , path : str , endpoint : Callable [ ... , Any ], * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , methods : Optional [ Union [ Set [ str ], List [ str ]]] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Union [ Type [ Response ], DefaultPlaceholder ] = Default ( JSONResponse ), name : Optional [ str ] = None , route_class_override : Optional [ Type [ APIRoute ]] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Union [ Callable [[ APIRoute ], str ], DefaultPlaceholder ] = Default ( generate_unique_id ), ) -> None : route_class = route_class_override or self . route_class responses = responses or {} combined_responses = { ** self . responses , ** responses } current_response_class = get_value_or_default ( response_class , self . default_response_class ) current_tags = self . tags . copy () if tags : current_tags . extend ( tags ) current_dependencies = self . dependencies . copy () if dependencies : current_dependencies . extend ( dependencies ) current_callbacks = self . callbacks . copy () if callbacks : current_callbacks . extend ( callbacks ) current_generate_unique_id = get_value_or_default ( generate_unique_id_function , self . generate_unique_id_function ) route = route_class ( self . prefix + path , endpoint = endpoint , response_model = response_model , status_code = status_code , tags = current_tags , dependencies = current_dependencies , summary = summary , description = description , response_description = response_description , responses = combined_responses , deprecated = deprecated or self . deprecated , methods = methods , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema and self . include_in_schema , response_class = current_response_class , name = name , dependency_overrides_provider = self . dependency_overrides_provider , callbacks = current_callbacks , openapi_extra = openapi_extra , generate_unique_id_function = current_generate_unique_id , ) self . routes . append ( route )","title":"add_api_route()"},{"location":"routing/#fastapi.routing.APIRouter.add_api_websocket_route","text":"add_api_websocket_route ( path , endpoint , name = None ) Source code in fastapi/routing.py 648 649 650 651 652 653 654 655 656 657 def add_api_websocket_route ( self , path : str , endpoint : Callable [ ... , Any ], name : Optional [ str ] = None ) -> None : route = APIWebSocketRoute ( self . prefix + path , endpoint = endpoint , name = name , dependency_overrides_provider = self . dependency_overrides_provider , ) self . routes . append ( route )","title":"add_api_websocket_route()"},{"location":"routing/#fastapi.routing.APIRouter.api_route","text":"api_route ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , methods = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 def api_route ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , methods : Optional [ List [ str ]] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: def decorator ( func : DecoratedCallable ) -> DecoratedCallable : self . add_api_route ( path , func , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = methods , operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , ) return func return decorator","title":"api_route()"},{"location":"routing/#fastapi.routing.APIRouter.delete","text":"delete ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 def delete ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"DELETE\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"delete()"},{"location":"routing/#fastapi.routing.APIRouter.get","text":"get ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 def get ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"GET\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"get()"},{"location":"routing/#fastapi.routing.APIRouter.head","text":"head ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 def head ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"HEAD\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"head()"},{"location":"routing/#fastapi.routing.APIRouter.include_router","text":"include_router ( router , * , prefix = \"\" , tags = None , dependencies = None , default_response_class = Default ( JSONResponse ), responses = None , callbacks = None , deprecated = None , include_in_schema = True , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 def include_router ( self , router : \"APIRouter\" , * , prefix : str = \"\" , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , default_response_class : Type [ Response ] = Default ( JSONResponse ), responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , callbacks : Optional [ List [ BaseRoute ]] = None , deprecated : Optional [ bool ] = None , include_in_schema : bool = True , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> None : if prefix : assert prefix . startswith ( \"/\" ), \"A path prefix must start with '/'\" assert not prefix . endswith ( \"/\" ), \"A path prefix must not end with '/', as the routes will start with '/'\" else : for r in router . routes : path = getattr ( r , \"path\" ) name = getattr ( r , \"name\" , \"unknown\" ) if path is not None and not path : raise Exception ( f \"Prefix and path cannot be both empty (path operation: { name } )\" ) if responses is None : responses = {} for route in router . routes : if isinstance ( route , APIRoute ): combined_responses = { ** responses , ** route . responses } use_response_class = get_value_or_default ( route . response_class , router . default_response_class , default_response_class , self . default_response_class , ) current_tags = [] if tags : current_tags . extend ( tags ) if route . tags : current_tags . extend ( route . tags ) current_dependencies : List [ params . Depends ] = [] if dependencies : current_dependencies . extend ( dependencies ) if route . dependencies : current_dependencies . extend ( route . dependencies ) current_callbacks = [] if callbacks : current_callbacks . extend ( callbacks ) if route . callbacks : current_callbacks . extend ( route . callbacks ) current_generate_unique_id = get_value_or_default ( route . generate_unique_id_function , router . generate_unique_id_function , generate_unique_id_function , self . generate_unique_id_function , ) self . add_api_route ( prefix + route . path , route . endpoint , response_model = route . response_model , status_code = route . status_code , tags = current_tags , dependencies = current_dependencies , summary = route . summary , description = route . description , response_description = route . response_description , responses = combined_responses , deprecated = route . deprecated or deprecated or self . deprecated , methods = route . methods , operation_id = route . operation_id , response_model_include = route . response_model_include , response_model_exclude = route . response_model_exclude , response_model_by_alias = route . response_model_by_alias , response_model_exclude_unset = route . response_model_exclude_unset , response_model_exclude_defaults = route . response_model_exclude_defaults , response_model_exclude_none = route . response_model_exclude_none , include_in_schema = route . include_in_schema and self . include_in_schema and include_in_schema , response_class = use_response_class , name = route . name , route_class_override = type ( route ), callbacks = current_callbacks , openapi_extra = route . openapi_extra , generate_unique_id_function = current_generate_unique_id , ) elif isinstance ( route , routing . Route ): methods = list ( route . methods or []) self . add_route ( prefix + route . path , route . endpoint , methods = methods , include_in_schema = route . include_in_schema , name = route . name , ) elif isinstance ( route , APIWebSocketRoute ): self . add_api_websocket_route ( prefix + route . path , route . endpoint , name = route . name ) elif isinstance ( route , routing . WebSocketRoute ): self . add_websocket_route ( prefix + route . path , route . endpoint , name = route . name ) for handler in router . on_startup : self . add_event_handler ( \"startup\" , handler ) for handler in router . on_shutdown : self . add_event_handler ( \"shutdown\" , handler )","title":"include_router()"},{"location":"routing/#fastapi.routing.APIRouter.options","text":"options ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 def options ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"OPTIONS\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"options()"},{"location":"routing/#fastapi.routing.APIRouter.patch","text":"patch ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 def patch ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"PATCH\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"patch()"},{"location":"routing/#fastapi.routing.APIRouter.post","text":"post ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 def post ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"POST\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"post()"},{"location":"routing/#fastapi.routing.APIRouter.put","text":"put ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 def put ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"PUT\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"put()"},{"location":"routing/#fastapi.routing.APIRouter.trace","text":"trace ( path , * , response_model = None , status_code = None , tags = None , dependencies = None , summary = None , description = None , response_description = \"Successful Response\" , responses = None , deprecated = None , operation_id = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , include_in_schema = True , response_class = Default ( JSONResponse ), name = None , callbacks = None , openapi_extra = None , generate_unique_id_function = Default ( generate_unique_id ) ) Source code in fastapi/routing.py 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 1186 1187 1188 1189 1190 1191 1192 1193 1194 1195 1196 1197 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 def trace ( self , path : str , * , response_model : Optional [ Type [ Any ]] = None , status_code : Optional [ int ] = None , tags : Optional [ List [ Union [ str , Enum ]]] = None , dependencies : Optional [ Sequence [ params . Depends ]] = None , summary : Optional [ str ] = None , description : Optional [ str ] = None , response_description : str = \"Successful Response\" , responses : Optional [ Dict [ Union [ int , str ], Dict [ str , Any ]]] = None , deprecated : Optional [ bool ] = None , operation_id : Optional [ str ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , include_in_schema : bool = True , response_class : Type [ Response ] = Default ( JSONResponse ), name : Optional [ str ] = None , callbacks : Optional [ List [ BaseRoute ]] = None , openapi_extra : Optional [ Dict [ str , Any ]] = None , generate_unique_id_function : Callable [[ APIRoute ], str ] = Default ( generate_unique_id ), ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: return self . api_route ( path = path , response_model = response_model , status_code = status_code , tags = tags , dependencies = dependencies , summary = summary , description = description , response_description = response_description , responses = responses , deprecated = deprecated , methods = [ \"TRACE\" ], operation_id = operation_id , response_model_include = response_model_include , response_model_exclude = response_model_exclude , response_model_by_alias = response_model_by_alias , response_model_exclude_unset = response_model_exclude_unset , response_model_exclude_defaults = response_model_exclude_defaults , response_model_exclude_none = response_model_exclude_none , include_in_schema = include_in_schema , response_class = response_class , name = name , callbacks = callbacks , openapi_extra = openapi_extra , generate_unique_id_function = generate_unique_id_function , )","title":"trace()"},{"location":"routing/#fastapi.routing.APIRouter.websocket","text":"websocket ( path , name = None ) Source code in fastapi/routing.py 659 660 661 662 663 664 665 666 def websocket ( self , path : str , name : Optional [ str ] = None ) -> Callable [[ DecoratedCallable ], DecoratedCallable ]: def decorator ( func : DecoratedCallable ) -> DecoratedCallable : self . add_api_websocket_route ( path , func , name = name ) return func return decorator","title":"websocket()"},{"location":"routing/#fastapi.routing.APIWebSocketRoute","text":"APIWebSocketRoute ( path , endpoint , * , name = None , dependency_overrides_provider = None ) Bases: routing . WebSocketRoute Source code in fastapi/routing.py 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 def __init__ ( self , path : str , endpoint : Callable [ ... , Any ], * , name : Optional [ str ] = None , dependency_overrides_provider : Optional [ Any ] = None , ) -> None : self . path = path self . endpoint = endpoint self . name = get_name ( endpoint ) if name is None else name self . dependant = get_dependant ( path = path , call = self . endpoint ) self . app = websocket_session ( get_websocket_app ( dependant = self . dependant , dependency_overrides_provider = dependency_overrides_provider , ) ) self . path_regex , self . path_format , self . param_convertors = compile_path ( path )","title":"APIWebSocketRoute"},{"location":"routing/#fastapi.routing.APIWebSocketRoute.app","text":"app = websocket_session ( get_websocket_app ( dependant = self . dependant , dependency_overrides_provider = dependency_overrides_provider , ) )","title":"app"},{"location":"routing/#fastapi.routing.APIWebSocketRoute.dependant","text":"dependant = get_dependant ( path = path , call = self . endpoint )","title":"dependant"},{"location":"routing/#fastapi.routing.APIWebSocketRoute.endpoint","text":"endpoint = endpoint","title":"endpoint"},{"location":"routing/#fastapi.routing.APIWebSocketRoute.name","text":"name = get_name ( endpoint ) if name is None else name","title":"name"},{"location":"routing/#fastapi.routing.APIWebSocketRoute.path","text":"path = path","title":"path"},{"location":"routing/#fastapi.routing.APIWebSocketRoute.matches","text":"matches ( scope ) Source code in fastapi/routing.py 300 301 302 303 304 def matches ( self , scope : Scope ) -> Tuple [ Match , Scope ]: match , child_scope = super () . matches ( scope ) if match != Match . NONE : child_scope [ \"route\" ] = self return match , child_scope","title":"matches()"},{"location":"routing/#fastapi.routing._prepare_response_content","text":"_prepare_response_content ( res , * , exclude_unset , exclude_defaults = False , exclude_none = False ) Source code in fastapi/routing.py 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 def _prepare_response_content ( res : Any , * , exclude_unset : bool , exclude_defaults : bool = False , exclude_none : bool = False , ) -> Any : if isinstance ( res , BaseModel ): read_with_orm_mode = getattr ( res . __config__ , \"read_with_orm_mode\" , None ) if read_with_orm_mode : # Let from_orm extract the data from this model instead of converting # it now to a dict. # Otherwise there's no way to extract lazy data that requires attribute # access instead of dict iteration, e.g. lazy relationships. return res return res . dict ( by_alias = True , exclude_unset = exclude_unset , exclude_defaults = exclude_defaults , exclude_none = exclude_none , ) elif isinstance ( res , list ): return [ _prepare_response_content ( item , exclude_unset = exclude_unset , exclude_defaults = exclude_defaults , exclude_none = exclude_none , ) for item in res ] elif isinstance ( res , dict ): return { k : _prepare_response_content ( v , exclude_unset = exclude_unset , exclude_defaults = exclude_defaults , exclude_none = exclude_none , ) for k , v in res . items () } elif dataclasses . is_dataclass ( res ): return dataclasses . asdict ( res ) return res","title":"_prepare_response_content()"},{"location":"routing/#fastapi.routing.get_request_handler","text":"get_request_handler ( dependant , body_field = None , status_code = None , response_class = Default ( JSONResponse ), response_field = None , response_model_include = None , response_model_exclude = None , response_model_by_alias = True , response_model_exclude_unset = False , response_model_exclude_defaults = False , response_model_exclude_none = False , dependency_overrides_provider = None , ) Source code in fastapi/routing.py 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 def get_request_handler ( dependant : Dependant , body_field : Optional [ ModelField ] = None , status_code : Optional [ int ] = None , response_class : Union [ Type [ Response ], DefaultPlaceholder ] = Default ( JSONResponse ), response_field : Optional [ ModelField ] = None , response_model_include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , response_model_by_alias : bool = True , response_model_exclude_unset : bool = False , response_model_exclude_defaults : bool = False , response_model_exclude_none : bool = False , dependency_overrides_provider : Optional [ Any ] = None , ) -> Callable [[ Request ], Coroutine [ Any , Any , Response ]]: assert dependant . call is not None , \"dependant.call must be a function\" is_coroutine = asyncio . iscoroutinefunction ( dependant . call ) is_body_form = body_field and isinstance ( body_field . field_info , params . Form ) if isinstance ( response_class , DefaultPlaceholder ): actual_response_class : Type [ Response ] = response_class . value else : actual_response_class = response_class async def app ( request : Request ) -> Response : try : body : Any = None if body_field : if is_body_form : body = await request . form () else : body_bytes = await request . body () if body_bytes : json_body : Any = Undefined content_type_value = request . headers . get ( \"content-type\" ) if not content_type_value : json_body = await request . json () else : message = email . message . Message () message [ \"content-type\" ] = content_type_value if message . get_content_maintype () == \"application\" : subtype = message . get_content_subtype () if subtype == \"json\" or subtype . endswith ( \"+json\" ): json_body = await request . json () if json_body != Undefined : body = json_body else : body = body_bytes except json . JSONDecodeError as e : raise RequestValidationError ([ ErrorWrapper ( e , ( \"body\" , e . pos ))], body = e . doc ) except Exception as e : raise HTTPException ( status_code = 400 , detail = \"There was an error parsing the body\" ) from e solved_result = await solve_dependencies ( request = request , dependant = dependant , body = body , dependency_overrides_provider = dependency_overrides_provider , ) values , errors , background_tasks , sub_response , _ = solved_result if errors : raise RequestValidationError ( errors , body = body ) else : raw_response = await run_endpoint_function ( dependant = dependant , values = values , is_coroutine = is_coroutine ) if isinstance ( raw_response , Response ): if raw_response . background is None : raw_response . background = background_tasks return raw_response response_data = await serialize_response ( field = response_field , response_content = raw_response , include = response_model_include , exclude = response_model_exclude , by_alias = response_model_by_alias , exclude_unset = response_model_exclude_unset , exclude_defaults = response_model_exclude_defaults , exclude_none = response_model_exclude_none , is_coroutine = is_coroutine , ) response_args : Dict [ str , Any ] = { \"background\" : background_tasks } # If status_code was set, use it, otherwise use the default from the # response class, in the case of redirect it's 307 if status_code is not None : response_args [ \"status_code\" ] = status_code response = actual_response_class ( response_data , ** response_args ) response . headers . raw . extend ( sub_response . headers . raw ) if sub_response . status_code : response . status_code = sub_response . status_code return response return app","title":"get_request_handler()"},{"location":"routing/#fastapi.routing.get_websocket_app","text":"get_websocket_app ( dependant , dependency_overrides_provider = None ) Source code in fastapi/routing.py 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 def get_websocket_app ( dependant : Dependant , dependency_overrides_provider : Optional [ Any ] = None ) -> Callable [[ WebSocket ], Coroutine [ Any , Any , Any ]]: async def app ( websocket : WebSocket ) -> None : solved_result = await solve_dependencies ( request = websocket , dependant = dependant , dependency_overrides_provider = dependency_overrides_provider , ) values , errors , _ , _2 , _3 = solved_result if errors : await websocket . close ( code = WS_1008_POLICY_VIOLATION ) raise WebSocketRequestValidationError ( errors ) assert dependant . call is not None , \"dependant.call must be a function\" await dependant . call ( ** values ) return app","title":"get_websocket_app()"},{"location":"routing/#fastapi.routing.run_endpoint_function","text":"run_endpoint_function ( * , dependant , values , is_coroutine ) Source code in fastapi/routing.py 152 153 154 155 156 157 158 159 160 161 162 async def run_endpoint_function ( * , dependant : Dependant , values : Dict [ str , Any ], is_coroutine : bool ) -> Any : # Only called by get_request_handler. Has been split into its own function to # facilitate profiling endpoints, since inner functions are harder to profile. assert dependant . call is not None , \"dependant.call must be a function\" if is_coroutine : return await dependant . call ( ** values ) else : return await run_in_threadpool ( dependant . call , ** values )","title":"run_endpoint_function()"},{"location":"routing/#fastapi.routing.serialize_response","text":"serialize_response ( * , field = None , response_content , include = None , exclude = None , by_alias = True , exclude_unset = False , exclude_defaults = False , exclude_none = False , is_coroutine = True ) Source code in fastapi/routing.py 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 async def serialize_response ( * , field : Optional [ ModelField ] = None , response_content : Any , include : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , exclude : Optional [ Union [ SetIntStr , DictIntStrAny ]] = None , by_alias : bool = True , exclude_unset : bool = False , exclude_defaults : bool = False , exclude_none : bool = False , is_coroutine : bool = True , ) -> Any : if field : errors = [] response_content = _prepare_response_content ( response_content , exclude_unset = exclude_unset , exclude_defaults = exclude_defaults , exclude_none = exclude_none , ) if is_coroutine : value , errors_ = field . validate ( response_content , {}, loc = ( \"response\" ,)) else : value , errors_ = await run_in_threadpool ( # type: ignore[misc] field . validate , response_content , {}, loc = ( \"response\" ,) ) if isinstance ( errors_ , ErrorWrapper ): errors . append ( errors_ ) elif isinstance ( errors_ , list ): errors . extend ( errors_ ) if errors : raise ValidationError ( errors , field . type_ ) return jsonable_encoder ( value , include = include , exclude = exclude , by_alias = by_alias , exclude_unset = exclude_unset , exclude_defaults = exclude_defaults , exclude_none = exclude_none , ) else : return jsonable_encoder ( response_content )","title":"serialize_response()"},{"location":"staticfiles/","text":"","title":"staticfiles"},{"location":"templating/","text":"","title":"templating"},{"location":"testclient/","text":"","title":"testclient"},{"location":"types/","text":"DecoratedCallable module-attribute \u00b6 DecoratedCallable = TypeVar ( \"DecoratedCallable\" , bound = Callable [ Ellipsis , Any ] )","title":"types"},{"location":"types/#fastapi.types.DecoratedCallable","text":"DecoratedCallable = TypeVar ( \"DecoratedCallable\" , bound = Callable [ Ellipsis , Any ] )","title":"DecoratedCallable"},{"location":"utils/","text":"create_cloned_field \u00b6 create_cloned_field ( field , * , cloned_types = None ) Source code in fastapi/utils.py 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 def create_cloned_field ( field : ModelField , * , cloned_types : Optional [ Dict [ Type [ BaseModel ], Type [ BaseModel ]]] = None , ) -> ModelField : # _cloned_types has already cloned types, to support recursive models if cloned_types is None : cloned_types = dict () original_type = field . type_ if is_dataclass ( original_type ) and hasattr ( original_type , \"__pydantic_model__\" ): original_type = original_type . __pydantic_model__ use_type = original_type if lenient_issubclass ( original_type , BaseModel ): original_type = cast ( Type [ BaseModel ], original_type ) use_type = cloned_types . get ( original_type ) if use_type is None : use_type = create_model ( original_type . __name__ , __base__ = original_type ) cloned_types [ original_type ] = use_type for f in original_type . __fields__ . values (): use_type . __fields__ [ f . name ] = create_cloned_field ( f , cloned_types = cloned_types ) new_field = create_response_field ( name = field . name , type_ = use_type ) new_field . has_alias = field . has_alias new_field . alias = field . alias new_field . class_validators = field . class_validators new_field . default = field . default new_field . required = field . required new_field . model_config = field . model_config new_field . field_info = field . field_info new_field . allow_none = field . allow_none new_field . validate_always = field . validate_always if field . sub_fields : new_field . sub_fields = [ create_cloned_field ( sub_field , cloned_types = cloned_types ) for sub_field in field . sub_fields ] if field . key_field : new_field . key_field = create_cloned_field ( field . key_field , cloned_types = cloned_types ) new_field . validators = field . validators new_field . pre_validators = field . pre_validators new_field . post_validators = field . post_validators new_field . parse_json = field . parse_json new_field . shape = field . shape new_field . populate_validators () return new_field create_response_field \u00b6 create_response_field ( name , type_ , class_validators = None , default = None , required = False , model_config = BaseConfig , field_info = None , alias = None , ) Create a new response field. Raises if type_ is invalid. Source code in fastapi/utils.py 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 def create_response_field ( name : str , type_ : Type [ Any ], class_validators : Optional [ Dict [ str , Validator ]] = None , default : Optional [ Any ] = None , required : Union [ bool , UndefinedType ] = False , model_config : Type [ BaseConfig ] = BaseConfig , field_info : Optional [ FieldInfo ] = None , alias : Optional [ str ] = None , ) -> ModelField : \"\"\" Create a new response field. Raises if type_ is invalid. \"\"\" class_validators = class_validators or {} field_info = field_info or FieldInfo () response_field = functools . partial ( ModelField , name = name , type_ = type_ , class_validators = class_validators , default = default , required = required , model_config = model_config , alias = alias , ) try : return response_field ( field_info = field_info ) except RuntimeError : raise fastapi . exceptions . FastAPIError ( f \"Invalid args for response field! Hint: check that { type_ } is a valid pydantic field type\" ) deep_dict_update \u00b6 deep_dict_update ( main_dict , update_dict ) Source code in fastapi/utils.py 149 150 151 152 153 154 155 156 157 158 def deep_dict_update ( main_dict : Dict [ Any , Any ], update_dict : Dict [ Any , Any ]) -> None : for key , value in update_dict . items (): if ( key in main_dict and isinstance ( main_dict [ key ], dict ) and isinstance ( value , dict ) ): deep_dict_update ( main_dict [ key ], value ) else : main_dict [ key ] = value generate_operation_id_for_path \u00b6 generate_operation_id_for_path ( * , name , path , method ) Source code in fastapi/utils.py 126 127 128 129 130 131 132 133 134 135 136 137 138 def generate_operation_id_for_path ( * , name : str , path : str , method : str ) -> str : # pragma: nocover warnings . warn ( \"fastapi.utils.generate_operation_id_for_path() was deprecated, \" \"it is not used internally, and will be removed soon\" , DeprecationWarning , stacklevel = 2 , ) operation_id = name + path operation_id = re . sub ( \"[^0-9a-zA-Z_]\" , \"_\" , operation_id ) operation_id = operation_id + \"_\" + method . lower () return operation_id generate_unique_id \u00b6 generate_unique_id ( route ) Source code in fastapi/utils.py 141 142 143 144 145 146 def generate_unique_id ( route : \"APIRoute\" ) -> str : operation_id = route . name + route . path_format operation_id = re . sub ( \"[^0-9a-zA-Z_]\" , \"_\" , operation_id ) assert route . methods operation_id = operation_id + \"_\" + list ( route . methods )[ 0 ] . lower () return operation_id get_model_definitions \u00b6 get_model_definitions ( * , flat_models , model_name_map ) Source code in fastapi/utils.py 21 22 23 24 25 26 27 28 29 30 31 32 33 34 def get_model_definitions ( * , flat_models : Set [ Union [ Type [ BaseModel ], Type [ Enum ]]], model_name_map : Dict [ Union [ Type [ BaseModel ], Type [ Enum ]], str ], ) -> Dict [ str , Any ]: definitions : Dict [ str , Dict [ str , Any ]] = {} for model in flat_models : m_schema , m_definitions , m_nested_models = model_process_schema ( model , model_name_map = model_name_map , ref_prefix = REF_PREFIX ) definitions . update ( m_definitions ) model_name = model_name_map [ model ] definitions [ model_name ] = m_schema return definitions get_path_param_names \u00b6 get_path_param_names ( path ) Source code in fastapi/utils.py 37 38 def get_path_param_names ( path : str ) -> Set [ str ]: return set ( re . findall ( \"{(.*?)}\" , path )) get_value_or_default \u00b6 get_value_or_default ( first_item , * extra_items ) Pass items or DefaultPlaceholder s by descending priority. The first one to not be a DefaultPlaceholder will be returned. Otherwise, the first item (a DefaultPlaceholder ) will be returned. Source code in fastapi/utils.py 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 def get_value_or_default ( first_item : Union [ DefaultPlaceholder , DefaultType ], * extra_items : Union [ DefaultPlaceholder , DefaultType ], ) -> Union [ DefaultPlaceholder , DefaultType ]: \"\"\" Pass items or `DefaultPlaceholder`s by descending priority. The first one to _not_ be a `DefaultPlaceholder` will be returned. Otherwise, the first item (a `DefaultPlaceholder`) will be returned. \"\"\" items = ( first_item ,) + extra_items for item in items : if not isinstance ( item , DefaultPlaceholder ): return item return first_item","title":"utils"},{"location":"utils/#fastapi.utils.create_cloned_field","text":"create_cloned_field ( field , * , cloned_types = None ) Source code in fastapi/utils.py 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 def create_cloned_field ( field : ModelField , * , cloned_types : Optional [ Dict [ Type [ BaseModel ], Type [ BaseModel ]]] = None , ) -> ModelField : # _cloned_types has already cloned types, to support recursive models if cloned_types is None : cloned_types = dict () original_type = field . type_ if is_dataclass ( original_type ) and hasattr ( original_type , \"__pydantic_model__\" ): original_type = original_type . __pydantic_model__ use_type = original_type if lenient_issubclass ( original_type , BaseModel ): original_type = cast ( Type [ BaseModel ], original_type ) use_type = cloned_types . get ( original_type ) if use_type is None : use_type = create_model ( original_type . __name__ , __base__ = original_type ) cloned_types [ original_type ] = use_type for f in original_type . __fields__ . values (): use_type . __fields__ [ f . name ] = create_cloned_field ( f , cloned_types = cloned_types ) new_field = create_response_field ( name = field . name , type_ = use_type ) new_field . has_alias = field . has_alias new_field . alias = field . alias new_field . class_validators = field . class_validators new_field . default = field . default new_field . required = field . required new_field . model_config = field . model_config new_field . field_info = field . field_info new_field . allow_none = field . allow_none new_field . validate_always = field . validate_always if field . sub_fields : new_field . sub_fields = [ create_cloned_field ( sub_field , cloned_types = cloned_types ) for sub_field in field . sub_fields ] if field . key_field : new_field . key_field = create_cloned_field ( field . key_field , cloned_types = cloned_types ) new_field . validators = field . validators new_field . pre_validators = field . pre_validators new_field . post_validators = field . post_validators new_field . parse_json = field . parse_json new_field . shape = field . shape new_field . populate_validators () return new_field","title":"create_cloned_field()"},{"location":"utils/#fastapi.utils.create_response_field","text":"create_response_field ( name , type_ , class_validators = None , default = None , required = False , model_config = BaseConfig , field_info = None , alias = None , ) Create a new response field. Raises if type_ is invalid. Source code in fastapi/utils.py 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 def create_response_field ( name : str , type_ : Type [ Any ], class_validators : Optional [ Dict [ str , Validator ]] = None , default : Optional [ Any ] = None , required : Union [ bool , UndefinedType ] = False , model_config : Type [ BaseConfig ] = BaseConfig , field_info : Optional [ FieldInfo ] = None , alias : Optional [ str ] = None , ) -> ModelField : \"\"\" Create a new response field. Raises if type_ is invalid. \"\"\" class_validators = class_validators or {} field_info = field_info or FieldInfo () response_field = functools . partial ( ModelField , name = name , type_ = type_ , class_validators = class_validators , default = default , required = required , model_config = model_config , alias = alias , ) try : return response_field ( field_info = field_info ) except RuntimeError : raise fastapi . exceptions . FastAPIError ( f \"Invalid args for response field! Hint: check that { type_ } is a valid pydantic field type\" )","title":"create_response_field()"},{"location":"utils/#fastapi.utils.deep_dict_update","text":"deep_dict_update ( main_dict , update_dict ) Source code in fastapi/utils.py 149 150 151 152 153 154 155 156 157 158 def deep_dict_update ( main_dict : Dict [ Any , Any ], update_dict : Dict [ Any , Any ]) -> None : for key , value in update_dict . items (): if ( key in main_dict and isinstance ( main_dict [ key ], dict ) and isinstance ( value , dict ) ): deep_dict_update ( main_dict [ key ], value ) else : main_dict [ key ] = value","title":"deep_dict_update()"},{"location":"utils/#fastapi.utils.generate_operation_id_for_path","text":"generate_operation_id_for_path ( * , name , path , method ) Source code in fastapi/utils.py 126 127 128 129 130 131 132 133 134 135 136 137 138 def generate_operation_id_for_path ( * , name : str , path : str , method : str ) -> str : # pragma: nocover warnings . warn ( \"fastapi.utils.generate_operation_id_for_path() was deprecated, \" \"it is not used internally, and will be removed soon\" , DeprecationWarning , stacklevel = 2 , ) operation_id = name + path operation_id = re . sub ( \"[^0-9a-zA-Z_]\" , \"_\" , operation_id ) operation_id = operation_id + \"_\" + method . lower () return operation_id","title":"generate_operation_id_for_path()"},{"location":"utils/#fastapi.utils.generate_unique_id","text":"generate_unique_id ( route ) Source code in fastapi/utils.py 141 142 143 144 145 146 def generate_unique_id ( route : \"APIRoute\" ) -> str : operation_id = route . name + route . path_format operation_id = re . sub ( \"[^0-9a-zA-Z_]\" , \"_\" , operation_id ) assert route . methods operation_id = operation_id + \"_\" + list ( route . methods )[ 0 ] . lower () return operation_id","title":"generate_unique_id()"},{"location":"utils/#fastapi.utils.get_model_definitions","text":"get_model_definitions ( * , flat_models , model_name_map ) Source code in fastapi/utils.py 21 22 23 24 25 26 27 28 29 30 31 32 33 34 def get_model_definitions ( * , flat_models : Set [ Union [ Type [ BaseModel ], Type [ Enum ]]], model_name_map : Dict [ Union [ Type [ BaseModel ], Type [ Enum ]], str ], ) -> Dict [ str , Any ]: definitions : Dict [ str , Dict [ str , Any ]] = {} for model in flat_models : m_schema , m_definitions , m_nested_models = model_process_schema ( model , model_name_map = model_name_map , ref_prefix = REF_PREFIX ) definitions . update ( m_definitions ) model_name = model_name_map [ model ] definitions [ model_name ] = m_schema return definitions","title":"get_model_definitions()"},{"location":"utils/#fastapi.utils.get_path_param_names","text":"get_path_param_names ( path ) Source code in fastapi/utils.py 37 38 def get_path_param_names ( path : str ) -> Set [ str ]: return set ( re . findall ( \"{(.*?)}\" , path ))","title":"get_path_param_names()"},{"location":"utils/#fastapi.utils.get_value_or_default","text":"get_value_or_default ( first_item , * extra_items ) Pass items or DefaultPlaceholder s by descending priority. The first one to not be a DefaultPlaceholder will be returned. Otherwise, the first item (a DefaultPlaceholder ) will be returned. Source code in fastapi/utils.py 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 def get_value_or_default ( first_item : Union [ DefaultPlaceholder , DefaultType ], * extra_items : Union [ DefaultPlaceholder , DefaultType ], ) -> Union [ DefaultPlaceholder , DefaultType ]: \"\"\" Pass items or `DefaultPlaceholder`s by descending priority. The first one to _not_ be a `DefaultPlaceholder` will be returned. Otherwise, the first item (a `DefaultPlaceholder`) will be returned. \"\"\" items = ( first_item ,) + extra_items for item in items : if not isinstance ( item , DefaultPlaceholder ): return item return first_item","title":"get_value_or_default()"},{"location":"websockets/","text":"","title":"websockets"},{"location":"dependencies/","text":"","title":"dependencies"},{"location":"dependencies/models/","text":"Dependant \u00b6 Dependant ( * , path_params = None , query_params = None , header_params = None , cookie_params = None , body_params = None , dependencies = None , security_schemes = None , name = None , call = None , request_param_name = None , websocket_param_name = None , http_connection_param_name = None , response_param_name = None , background_tasks_param_name = None , security_scopes_param_name = None , security_scopes = None , use_cache = True , path = None ) Source code in fastapi/dependencies/models.py 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 def __init__ ( self , * , path_params : Optional [ List [ ModelField ]] = None , query_params : Optional [ List [ ModelField ]] = None , header_params : Optional [ List [ ModelField ]] = None , cookie_params : Optional [ List [ ModelField ]] = None , body_params : Optional [ List [ ModelField ]] = None , dependencies : Optional [ List [ \"Dependant\" ]] = None , security_schemes : Optional [ List [ SecurityRequirement ]] = None , name : Optional [ str ] = None , call : Optional [ Callable [ ... , Any ]] = None , request_param_name : Optional [ str ] = None , websocket_param_name : Optional [ str ] = None , http_connection_param_name : Optional [ str ] = None , response_param_name : Optional [ str ] = None , background_tasks_param_name : Optional [ str ] = None , security_scopes_param_name : Optional [ str ] = None , security_scopes : Optional [ List [ str ]] = None , use_cache : bool = True , path : Optional [ str ] = None , ) -> None : self . path_params = path_params or [] self . query_params = query_params or [] self . header_params = header_params or [] self . cookie_params = cookie_params or [] self . body_params = body_params or [] self . dependencies = dependencies or [] self . security_requirements = security_schemes or [] self . request_param_name = request_param_name self . websocket_param_name = websocket_param_name self . http_connection_param_name = http_connection_param_name self . response_param_name = response_param_name self . background_tasks_param_name = background_tasks_param_name self . security_scopes = security_scopes self . security_scopes_param_name = security_scopes_param_name self . name = name self . call = call self . use_cache = use_cache # Store the path to be able to re-generate a dependable from it in overrides self . path = path # Save the cache key at creation to optimize performance self . cache_key = ( self . call , tuple ( sorted ( set ( self . security_scopes or [])))) background_tasks_param_name instance-attribute \u00b6 background_tasks_param_name = background_tasks_param_name body_params instance-attribute \u00b6 body_params = body_params or [] cache_key instance-attribute \u00b6 cache_key = ( self . call , tuple ( sorted ( set ( self . security_scopes or []))), ) call instance-attribute \u00b6 call = call cookie_params instance-attribute \u00b6 cookie_params = cookie_params or [] dependencies instance-attribute \u00b6 dependencies = dependencies or [] header_params instance-attribute \u00b6 header_params = header_params or [] http_connection_param_name instance-attribute \u00b6 http_connection_param_name = http_connection_param_name name instance-attribute \u00b6 name = name path instance-attribute \u00b6 path = path path_params instance-attribute \u00b6 path_params = path_params or [] query_params instance-attribute \u00b6 query_params = query_params or [] request_param_name instance-attribute \u00b6 request_param_name = request_param_name response_param_name instance-attribute \u00b6 response_param_name = response_param_name security_requirements instance-attribute \u00b6 security_requirements = security_schemes or [] security_scopes instance-attribute \u00b6 security_scopes = security_scopes security_scopes_param_name instance-attribute \u00b6 security_scopes_param_name = security_scopes_param_name use_cache instance-attribute \u00b6 use_cache = use_cache websocket_param_name instance-attribute \u00b6 websocket_param_name = websocket_param_name SecurityRequirement \u00b6 SecurityRequirement ( security_scheme , scopes = None ) Source code in fastapi/dependencies/models.py 8 9 10 11 12 def __init__ ( self , security_scheme : SecurityBase , scopes : Optional [ Sequence [ str ]] = None ): self . security_scheme = security_scheme self . scopes = scopes scopes instance-attribute \u00b6 scopes = scopes security_scheme instance-attribute \u00b6 security_scheme = security_scheme","title":"models"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant","text":"Dependant ( * , path_params = None , query_params = None , header_params = None , cookie_params = None , body_params = None , dependencies = None , security_schemes = None , name = None , call = None , request_param_name = None , websocket_param_name = None , http_connection_param_name = None , response_param_name = None , background_tasks_param_name = None , security_scopes_param_name = None , security_scopes = None , use_cache = True , path = None ) Source code in fastapi/dependencies/models.py 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 def __init__ ( self , * , path_params : Optional [ List [ ModelField ]] = None , query_params : Optional [ List [ ModelField ]] = None , header_params : Optional [ List [ ModelField ]] = None , cookie_params : Optional [ List [ ModelField ]] = None , body_params : Optional [ List [ ModelField ]] = None , dependencies : Optional [ List [ \"Dependant\" ]] = None , security_schemes : Optional [ List [ SecurityRequirement ]] = None , name : Optional [ str ] = None , call : Optional [ Callable [ ... , Any ]] = None , request_param_name : Optional [ str ] = None , websocket_param_name : Optional [ str ] = None , http_connection_param_name : Optional [ str ] = None , response_param_name : Optional [ str ] = None , background_tasks_param_name : Optional [ str ] = None , security_scopes_param_name : Optional [ str ] = None , security_scopes : Optional [ List [ str ]] = None , use_cache : bool = True , path : Optional [ str ] = None , ) -> None : self . path_params = path_params or [] self . query_params = query_params or [] self . header_params = header_params or [] self . cookie_params = cookie_params or [] self . body_params = body_params or [] self . dependencies = dependencies or [] self . security_requirements = security_schemes or [] self . request_param_name = request_param_name self . websocket_param_name = websocket_param_name self . http_connection_param_name = http_connection_param_name self . response_param_name = response_param_name self . background_tasks_param_name = background_tasks_param_name self . security_scopes = security_scopes self . security_scopes_param_name = security_scopes_param_name self . name = name self . call = call self . use_cache = use_cache # Store the path to be able to re-generate a dependable from it in overrides self . path = path # Save the cache key at creation to optimize performance self . cache_key = ( self . call , tuple ( sorted ( set ( self . security_scopes or []))))","title":"Dependant"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.background_tasks_param_name","text":"background_tasks_param_name = background_tasks_param_name","title":"background_tasks_param_name"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.body_params","text":"body_params = body_params or []","title":"body_params"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.cache_key","text":"cache_key = ( self . call , tuple ( sorted ( set ( self . security_scopes or []))), )","title":"cache_key"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.call","text":"call = call","title":"call"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.cookie_params","text":"cookie_params = cookie_params or []","title":"cookie_params"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.dependencies","text":"dependencies = dependencies or []","title":"dependencies"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.header_params","text":"header_params = header_params or []","title":"header_params"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.http_connection_param_name","text":"http_connection_param_name = http_connection_param_name","title":"http_connection_param_name"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.name","text":"name = name","title":"name"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.path","text":"path = path","title":"path"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.path_params","text":"path_params = path_params or []","title":"path_params"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.query_params","text":"query_params = query_params or []","title":"query_params"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.request_param_name","text":"request_param_name = request_param_name","title":"request_param_name"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.response_param_name","text":"response_param_name = response_param_name","title":"response_param_name"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.security_requirements","text":"security_requirements = security_schemes or []","title":"security_requirements"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.security_scopes","text":"security_scopes = security_scopes","title":"security_scopes"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.security_scopes_param_name","text":"security_scopes_param_name = security_scopes_param_name","title":"security_scopes_param_name"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.use_cache","text":"use_cache = use_cache","title":"use_cache"},{"location":"dependencies/models/#fastapi.dependencies.models.Dependant.websocket_param_name","text":"websocket_param_name = websocket_param_name","title":"websocket_param_name"},{"location":"dependencies/models/#fastapi.dependencies.models.SecurityRequirement","text":"SecurityRequirement ( security_scheme , scopes = None ) Source code in fastapi/dependencies/models.py 8 9 10 11 12 def __init__ ( self , security_scheme : SecurityBase , scopes : Optional [ Sequence [ str ]] = None ): self . security_scheme = security_scheme self . scopes = scopes","title":"SecurityRequirement"},{"location":"dependencies/models/#fastapi.dependencies.models.SecurityRequirement.scopes","text":"scopes = scopes","title":"scopes"},{"location":"dependencies/models/#fastapi.dependencies.models.SecurityRequirement.security_scheme","text":"security_scheme = security_scheme","title":"security_scheme"},{"location":"dependencies/utils/","text":"CacheKey module-attribute \u00b6 CacheKey = Tuple [ Optional [ Callable [ Ellipsis , Any ]], Tuple [ str , Ellipsis ] ] multipart_incorrect_install_error module-attribute \u00b6 multipart_incorrect_install_error = 'Form data requires \"python-multipart\" to be installed. It seems you installed \"multipart\" instead. \\n You can remove \"multipart\" with: \\n\\n pip uninstall multipart \\n\\n And then install \"python-multipart\" with: \\n\\n pip install python-multipart \\n ' multipart_not_installed_error module-attribute \u00b6 multipart_not_installed_error = 'Form data requires \"python-multipart\" to be installed. \\n You can install \"python-multipart\" with: \\n\\n pip install python-multipart \\n ' sequence_shape_to_type module-attribute \u00b6 sequence_shape_to_type = { SHAPE_LIST : list , SHAPE_SET : set , SHAPE_TUPLE : tuple , SHAPE_SEQUENCE : list , SHAPE_TUPLE_ELLIPSIS : list , } sequence_shapes module-attribute \u00b6 sequence_shapes = { SHAPE_LIST , SHAPE_SET , SHAPE_TUPLE , SHAPE_SEQUENCE , SHAPE_TUPLE_ELLIPSIS , } sequence_types module-attribute \u00b6 sequence_types = ( list , set , tuple ) add_non_field_param_to_dependency \u00b6 add_non_field_param_to_dependency ( * , param , dependant ) Source code in fastapi/dependencies/utils.py 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 def add_non_field_param_to_dependency ( * , param : inspect . Parameter , dependant : Dependant ) -> Optional [ bool ]: if lenient_issubclass ( param . annotation , Request ): dependant . request_param_name = param . name return True elif lenient_issubclass ( param . annotation , WebSocket ): dependant . websocket_param_name = param . name return True elif lenient_issubclass ( param . annotation , HTTPConnection ): dependant . http_connection_param_name = param . name return True elif lenient_issubclass ( param . annotation , Response ): dependant . response_param_name = param . name return True elif lenient_issubclass ( param . annotation , BackgroundTasks ): dependant . background_tasks_param_name = param . name return True elif lenient_issubclass ( param . annotation , SecurityScopes ): dependant . security_scopes_param_name = param . name return True return None add_param_to_fields \u00b6 add_param_to_fields ( * , field , dependant ) Source code in fastapi/dependencies/utils.py 404 405 406 407 408 409 410 411 412 413 414 415 416 def add_param_to_fields ( * , field : ModelField , dependant : Dependant ) -> None : field_info = cast ( params . Param , field . field_info ) if field_info . in_ == params . ParamTypes . path : dependant . path_params . append ( field ) elif field_info . in_ == params . ParamTypes . query : dependant . query_params . append ( field ) elif field_info . in_ == params . ParamTypes . header : dependant . header_params . append ( field ) else : assert ( field_info . in_ == params . ParamTypes . cookie ), f \"non-body parameters must be in path, query, header or cookie: { field . name } \" dependant . cookie_params . append ( field ) check_file_field \u00b6 check_file_field ( field ) Source code in fastapi/dependencies/utils.py 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 def check_file_field ( field : ModelField ) -> None : field_info = field . field_info if isinstance ( field_info , params . Form ): try : # __version__ is available in both multiparts, and can be mocked from multipart import __version__ # type: ignore assert __version__ try : # parse_options_header is only available in the right multipart from multipart.multipart import parse_options_header # type: ignore assert parse_options_header except ImportError : logger . error ( multipart_incorrect_install_error ) raise RuntimeError ( multipart_incorrect_install_error ) except ImportError : logger . error ( multipart_not_installed_error ) raise RuntimeError ( multipart_not_installed_error ) get_body_field \u00b6 get_body_field ( * , dependant , name ) Source code in fastapi/dependencies/utils.py 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 def get_body_field ( * , dependant : Dependant , name : str ) -> Optional [ ModelField ]: flat_dependant = get_flat_dependant ( dependant ) if not flat_dependant . body_params : return None first_param = flat_dependant . body_params [ 0 ] field_info = first_param . field_info embed = getattr ( field_info , \"embed\" , None ) body_param_names_set = { param . name for param in flat_dependant . body_params } if len ( body_param_names_set ) == 1 and not embed : check_file_field ( first_param ) return first_param # If one field requires to embed, all have to be embedded # in case a sub-dependency is evaluated with a single unique body field # That is combined (embedded) with other body fields for param in flat_dependant . body_params : setattr ( param . field_info , \"embed\" , True ) model_name = \"Body_\" + name BodyModel : Type [ BaseModel ] = create_model ( model_name ) for f in flat_dependant . body_params : BodyModel . __fields__ [ f . name ] = f required = any ( True for f in flat_dependant . body_params if f . required ) BodyFieldInfo_kwargs : Dict [ str , Any ] = dict ( default = None ) if any ( isinstance ( f . field_info , params . File ) for f in flat_dependant . body_params ): BodyFieldInfo : Type [ params . Body ] = params . File elif any ( isinstance ( f . field_info , params . Form ) for f in flat_dependant . body_params ): BodyFieldInfo = params . Form else : BodyFieldInfo = params . Body body_param_media_types = [ getattr ( f . field_info , \"media_type\" ) for f in flat_dependant . body_params if isinstance ( f . field_info , params . Body ) ] if len ( set ( body_param_media_types )) == 1 : BodyFieldInfo_kwargs [ \"media_type\" ] = body_param_media_types [ 0 ] final_field = create_response_field ( name = \"body\" , type_ = BodyModel , required = required , alias = \"body\" , field_info = BodyFieldInfo ( ** BodyFieldInfo_kwargs ), ) check_file_field ( final_field ) return final_field get_dependant \u00b6 get_dependant ( * , path , call , name = None , security_scopes = None , use_cache = True ) Source code in fastapi/dependencies/utils.py 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 def get_dependant ( * , path : str , call : Callable [ ... , Any ], name : Optional [ str ] = None , security_scopes : Optional [ List [ str ]] = None , use_cache : bool = True , ) -> Dependant : path_param_names = get_path_param_names ( path ) endpoint_signature = get_typed_signature ( call ) signature_params = endpoint_signature . parameters dependant = Dependant ( call = call , name = name , path = path , use_cache = use_cache ) for param_name , param in signature_params . items (): if isinstance ( param . default , params . Depends ): sub_dependant = get_param_sub_dependant ( param = param , path = path , security_scopes = security_scopes ) dependant . dependencies . append ( sub_dependant ) continue if add_non_field_param_to_dependency ( param = param , dependant = dependant ): continue param_field = get_param_field ( param = param , default_field_info = params . Query , param_name = param_name ) if param_name in path_param_names : assert is_scalar_field ( field = param_field ), \"Path params must be of one of the supported types\" if isinstance ( param . default , params . Path ): ignore_default = False else : ignore_default = True param_field = get_param_field ( param = param , param_name = param_name , default_field_info = params . Path , force_type = params . ParamTypes . path , ignore_default = ignore_default , ) add_param_to_fields ( field = param_field , dependant = dependant ) elif is_scalar_field ( field = param_field ): add_param_to_fields ( field = param_field , dependant = dependant ) elif isinstance ( param . default , ( params . Query , params . Header ) ) and is_scalar_sequence_field ( param_field ): add_param_to_fields ( field = param_field , dependant = dependant ) else : field_info = param_field . field_info assert isinstance ( field_info , params . Body ), f \"Param: { param_field . name } can only be a request body, using Body()\" dependant . body_params . append ( param_field ) return dependant get_flat_dependant \u00b6 get_flat_dependant ( dependant , * , skip_repeats = False , visited = None ) Source code in fastapi/dependencies/utils.py 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 def get_flat_dependant ( dependant : Dependant , * , skip_repeats : bool = False , visited : Optional [ List [ CacheKey ]] = None , ) -> Dependant : if visited is None : visited = [] visited . append ( dependant . cache_key ) flat_dependant = Dependant ( path_params = dependant . path_params . copy (), query_params = dependant . query_params . copy (), header_params = dependant . header_params . copy (), cookie_params = dependant . cookie_params . copy (), body_params = dependant . body_params . copy (), security_schemes = dependant . security_requirements . copy (), use_cache = dependant . use_cache , path = dependant . path , ) for sub_dependant in dependant . dependencies : if skip_repeats and sub_dependant . cache_key in visited : continue flat_sub = get_flat_dependant ( sub_dependant , skip_repeats = skip_repeats , visited = visited ) flat_dependant . path_params . extend ( flat_sub . path_params ) flat_dependant . query_params . extend ( flat_sub . query_params ) flat_dependant . header_params . extend ( flat_sub . header_params ) flat_dependant . cookie_params . extend ( flat_sub . cookie_params ) flat_dependant . body_params . extend ( flat_sub . body_params ) flat_dependant . security_requirements . extend ( flat_sub . security_requirements ) return flat_dependant get_flat_params \u00b6 get_flat_params ( dependant ) Source code in fastapi/dependencies/utils.py 206 207 208 209 210 211 212 213 def get_flat_params ( dependant : Dependant ) -> List [ ModelField ]: flat_dependant = get_flat_dependant ( dependant , skip_repeats = True ) return ( flat_dependant . path_params + flat_dependant . query_params + flat_dependant . header_params + flat_dependant . cookie_params ) get_missing_field_error \u00b6 get_missing_field_error ( loc ) Source code in fastapi/dependencies/utils.py 703 704 705 def get_missing_field_error ( loc : Tuple [ str , ... ]) -> ErrorWrapper : missing_field_error = ErrorWrapper ( MissingError (), loc = loc ) return missing_field_error get_param_field \u00b6 get_param_field ( * , param , param_name , default_field_info = params . Param , force_type = None , ignore_default = False ) Source code in fastapi/dependencies/utils.py 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 def get_param_field ( * , param : inspect . Parameter , param_name : str , default_field_info : Type [ params . Param ] = params . Param , force_type : Optional [ params . ParamTypes ] = None , ignore_default : bool = False , ) -> ModelField : default_value : Any = Undefined had_schema = False if not param . default == param . empty and ignore_default is False : default_value = param . default if isinstance ( default_value , FieldInfo ): had_schema = True field_info = default_value default_value = field_info . default if ( isinstance ( field_info , params . Param ) and getattr ( field_info , \"in_\" , None ) is None ): field_info . in_ = default_field_info . in_ if force_type : field_info . in_ = force_type # type: ignore else : field_info = default_field_info ( default = default_value ) required = True if default_value is Required or ignore_default : required = True default_value = None elif default_value is not Undefined : required = False annotation : Any = Any if not param . annotation == param . empty : annotation = param . annotation annotation = get_annotation_from_field_info ( annotation , field_info , param_name ) if not field_info . alias and getattr ( field_info , \"convert_underscores\" , None ): alias = param . name . replace ( \"_\" , \"-\" ) else : alias = field_info . alias or param . name field = create_response_field ( name = param . name , type_ = annotation , default = default_value , alias = alias , required = required , field_info = field_info , ) if not had_schema and not is_scalar_field ( field = field ): field . field_info = params . Body ( field_info . default ) if not had_schema and lenient_issubclass ( field . type_ , UploadFile ): field . field_info = params . File ( field_info . default ) return field get_param_sub_dependant \u00b6 get_param_sub_dependant ( * , param , path , security_scopes = None ) Source code in fastapi/dependencies/utils.py 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 def get_param_sub_dependant ( * , param : inspect . Parameter , path : str , security_scopes : Optional [ List [ str ]] = None ) -> Dependant : depends : params . Depends = param . default if depends . dependency : dependency = depends . dependency else : dependency = param . annotation return get_sub_dependant ( depends = depends , dependency = dependency , path = path , name = param . name , security_scopes = security_scopes , ) get_parameterless_sub_dependant \u00b6 get_parameterless_sub_dependant ( * , depends , path ) Source code in fastapi/dependencies/utils.py 128 129 130 131 132 def get_parameterless_sub_dependant ( * , depends : params . Depends , path : str ) -> Dependant : assert callable ( depends . dependency ), \"A parameter-less dependency must have a callable dependency\" return get_sub_dependant ( depends = depends , dependency = depends . dependency , path = path ) get_sub_dependant \u00b6 get_sub_dependant ( * , depends , dependency , path , name = None , security_scopes = None ) Source code in fastapi/dependencies/utils.py 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 def get_sub_dependant ( * , depends : params . Depends , dependency : Callable [ ... , Any ], path : str , name : Optional [ str ] = None , security_scopes : Optional [ List [ str ]] = None , ) -> Dependant : security_requirement = None security_scopes = security_scopes or [] if isinstance ( depends , params . Security ): dependency_scopes = depends . scopes security_scopes . extend ( dependency_scopes ) if isinstance ( dependency , SecurityBase ): use_scopes : List [ str ] = [] if isinstance ( dependency , ( OAuth2 , OpenIdConnect )): use_scopes = security_scopes security_requirement = SecurityRequirement ( security_scheme = dependency , scopes = use_scopes ) sub_dependant = get_dependant ( path = path , call = dependency , name = name , security_scopes = security_scopes , use_cache = depends . use_cache , ) if security_requirement : sub_dependant . security_requirements . append ( security_requirement ) sub_dependant . security_scopes = security_scopes return sub_dependant get_typed_annotation \u00b6 get_typed_annotation ( param , globalns ) Source code in fastapi/dependencies/utils.py 262 263 264 265 266 267 def get_typed_annotation ( param : inspect . Parameter , globalns : Dict [ str , Any ]) -> Any : annotation = param . annotation if isinstance ( annotation , str ): annotation = ForwardRef ( annotation ) annotation = evaluate_forwardref ( annotation , globalns , globalns ) return annotation get_typed_signature \u00b6 get_typed_signature ( call ) Source code in fastapi/dependencies/utils.py 246 247 248 249 250 251 252 253 254 255 256 257 258 259 def get_typed_signature ( call : Callable [ ... , Any ]) -> inspect . Signature : signature = inspect . signature ( call ) globalns = getattr ( call , \"__globals__\" , {}) typed_params = [ inspect . Parameter ( name = param . name , kind = param . kind , default = param . default , annotation = get_typed_annotation ( param , globalns ), ) for param in signature . parameters . values () ] typed_signature = inspect . Signature ( typed_params ) return typed_signature is_async_gen_callable \u00b6 is_async_gen_callable ( call ) Source code in fastapi/dependencies/utils.py 428 429 430 431 432 def is_async_gen_callable ( call : Callable [ ... , Any ]) -> bool : if inspect . isasyncgenfunction ( call ): return True call = getattr ( call , \"__call__\" , None ) return inspect . isasyncgenfunction ( call ) is_coroutine_callable \u00b6 is_coroutine_callable ( call ) Source code in fastapi/dependencies/utils.py 419 420 421 422 423 424 425 def is_coroutine_callable ( call : Callable [ ... , Any ]) -> bool : if inspect . isroutine ( call ): return inspect . iscoroutinefunction ( call ) if inspect . isclass ( call ): return False call = getattr ( call , \"__call__\" , None ) return inspect . iscoroutinefunction ( call ) is_gen_callable \u00b6 is_gen_callable ( call ) Source code in fastapi/dependencies/utils.py 435 436 437 438 439 def is_gen_callable ( call : Callable [ ... , Any ]) -> bool : if inspect . isgeneratorfunction ( call ): return True call = getattr ( call , \"__call__\" , None ) return inspect . isgeneratorfunction ( call ) is_scalar_field \u00b6 is_scalar_field ( field ) Source code in fastapi/dependencies/utils.py 216 217 218 219 220 221 222 223 224 225 226 227 228 229 def is_scalar_field ( field : ModelField ) -> bool : field_info = field . field_info if not ( field . shape == SHAPE_SINGLETON and not lenient_issubclass ( field . type_ , BaseModel ) and not lenient_issubclass ( field . type_ , sequence_types + ( dict ,)) and not dataclasses . is_dataclass ( field . type_ ) and not isinstance ( field_info , params . Body ) ): return False if field . sub_fields : if not all ( is_scalar_field ( f ) for f in field . sub_fields ): return False return True is_scalar_sequence_field \u00b6 is_scalar_sequence_field ( field ) Source code in fastapi/dependencies/utils.py 232 233 234 235 236 237 238 239 240 241 242 243 def is_scalar_sequence_field ( field : ModelField ) -> bool : if ( field . shape in sequence_shapes ) and not lenient_issubclass ( field . type_ , BaseModel ): if field . sub_fields is not None : for sub_field in field . sub_fields : if not is_scalar_field ( sub_field ): return False return True if lenient_issubclass ( field . type_ , sequence_types ): return True return False request_body_to_args async \u00b6 request_body_to_args ( required_params , received_body ) Source code in fastapi/dependencies/utils.py 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 async def request_body_to_args ( required_params : List [ ModelField ], received_body : Optional [ Union [ Dict [ str , Any ], FormData ]], ) -> Tuple [ Dict [ str , Any ], List [ ErrorWrapper ]]: values = {} errors = [] if required_params : field = required_params [ 0 ] field_info = field . field_info embed = getattr ( field_info , \"embed\" , None ) field_alias_omitted = len ( required_params ) == 1 and not embed if field_alias_omitted : received_body = { field . alias : received_body } for field in required_params : loc : Tuple [ str , ... ] if field_alias_omitted : loc = ( \"body\" ,) else : loc = ( \"body\" , field . alias ) value : Optional [ Any ] = None if received_body is not None : if ( field . shape in sequence_shapes or field . type_ in sequence_types ) and isinstance ( received_body , FormData ): value = received_body . getlist ( field . alias ) else : try : value = received_body . get ( field . alias ) except AttributeError : errors . append ( get_missing_field_error ( loc )) continue if ( value is None or ( isinstance ( field_info , params . Form ) and value == \"\" ) or ( isinstance ( field_info , params . Form ) and field . shape in sequence_shapes and len ( value ) == 0 ) ): if field . required : errors . append ( get_missing_field_error ( loc )) else : values [ field . name ] = deepcopy ( field . default ) continue if ( isinstance ( field_info , params . File ) and lenient_issubclass ( field . type_ , bytes ) and isinstance ( value , UploadFile ) ): value = await value . read () elif ( field . shape in sequence_shapes and isinstance ( field_info , params . File ) and lenient_issubclass ( field . type_ , bytes ) and isinstance ( value , sequence_types ) ): results : List [ Union [ bytes , str ]] = [] async def process_fn ( fn : Callable [[], Coroutine [ Any , Any , Any ]] ) -> None : result = await fn () results . append ( result ) async with anyio . create_task_group () as tg : for sub_value in value : tg . start_soon ( process_fn , sub_value . read ) value = sequence_shape_to_type [ field . shape ]( results ) v_ , errors_ = field . validate ( value , values , loc = loc ) if isinstance ( errors_ , ErrorWrapper ): errors . append ( errors_ ) elif isinstance ( errors_ , list ): errors . extend ( errors_ ) else : values [ field . name ] = v_ return values , errors request_params_to_args \u00b6 request_params_to_args ( required_params , received_params ) Source code in fastapi/dependencies/utils.py 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 def request_params_to_args ( required_params : Sequence [ ModelField ], received_params : Union [ Mapping [ str , Any ], QueryParams , Headers ], ) -> Tuple [ Dict [ str , Any ], List [ ErrorWrapper ]]: values = {} errors = [] for field in required_params : if is_scalar_sequence_field ( field ) and isinstance ( received_params , ( QueryParams , Headers ) ): value = received_params . getlist ( field . alias ) or field . default else : value = received_params . get ( field . alias ) field_info = field . field_info assert isinstance ( field_info , params . Param ), \"Params must be subclasses of Param\" if value is None : if field . required : errors . append ( ErrorWrapper ( MissingError (), loc = ( field_info . in_ . value , field . alias ) ) ) else : values [ field . name ] = deepcopy ( field . default ) continue v_ , errors_ = field . validate ( value , values , loc = ( field_info . in_ . value , field . alias ) ) if isinstance ( errors_ , ErrorWrapper ): errors . append ( errors_ ) elif isinstance ( errors_ , list ): errors . extend ( errors_ ) else : values [ field . name ] = v_ return values , errors solve_dependencies async \u00b6 solve_dependencies ( * , request , dependant , body = None , background_tasks = None , response = None , dependency_overrides_provider = None , dependency_cache = None ) Source code in fastapi/dependencies/utils.pyasync def solve_dependencies ( * , request : Union [ Request , WebSocket ], dependant : Dependant , body : Optional [ Union [ Dict [ str , Any ], FormData ]] = None , background_tasks : Optional [ BackgroundTasks ] = None , response : Optional [ Response ] = None , dependency_overrides_provider : Optional [ Any ] = None , dependency_cache : Optional [ Dict [ Tuple [ Callable [ ... , Any ], Tuple [ str ]], Any ]] = None , ) -> Tuple [ Dict [ str , Any ], List [ ErrorWrapper ], Optional [ BackgroundTasks ], Response , Dict [ Tuple [ Callable [ ... , Any ], Tuple [ str ]], Any ], ]: values : Dict [ str , Any ] = {} errors : List [ ErrorWrapper ] = [] if response is None : response = Response () del response . headers [ \"content-length\" ] response . status_code = None # type: ignore dependency_cache = dependency_cache or {} sub_dependant : Dependant for sub_dependant in dependant . dependencies : sub_dependant . call = cast ( Callable [ ... , Any ], sub_dependant . call ) sub_dependant . cache_key = cast ( Tuple [ Callable [ ... , Any ], Tuple [ str ]], sub_dependant . cache_key ) call = sub_dependant . call use_sub_dependant = sub_dependant if ( dependency_overrides_provider and dependency_overrides_provider . dependency_overrides ): original_call = sub_dependant . call call = getattr ( dependency_overrides_provider , \"dependency_overrides\" , {} ) . get ( original_call , original_call ) use_path : str = sub_dependant . path # type: ignore use_sub_dependant = get_dependant ( path = use_path , call = call , name = sub_dependant . name , security_scopes = sub_dependant . security_scopes , ) use_sub_dependant . security_scopes = sub_dependant . security_scopes solved_result = await solve_dependencies ( request = request , dependant = use_sub_dependant , body = body , background_tasks = background_tasks , response = response , dependency_overrides_provider = dependency_overrides_provider , dependency_cache = dependency_cache , ) ( sub_values , sub_errors , background_tasks , _ , # the subdependency returns the same response we have sub_dependency_cache , ) = solved_result dependency_cache . update ( sub_dependency_cache ) if sub_errors : errors . extend ( sub_errors ) continue if sub_dependant . use_cache and sub_dependant . cache_key in dependency_cache : solved = dependency_cache [ sub_dependant . cache_key ] elif is_gen_callable ( call ) or is_async_gen_callable ( call ): stack = request . scope . get ( \"fastapi_astack\" ) assert isinstance ( stack , AsyncExitStack ) solved = await solve_generator ( call = call , stack = stack , sub_values = sub_values ) elif is_coroutine_callable ( call ): solved = await call ( ** sub_values ) else : solved = await run_in_threadpool ( call , ** sub_values ) if sub_dependant . name is not None : values [ sub_dependant . name ] = solved if sub_dependant . cache_key not in dependency_cache : dependency_cache [ sub_dependant . cache_key ] = solved path_values , path_errors = request_params_to_args ( dependant . path_params , request . path_params ) query_values , query_errors = request_params_to_args ( dependant . query_params , request . query_params ) header_values , header_errors = request_params_to_args ( dependant . header_params , request . headers ) cookie_values , cookie_errors = request_params_to_args ( dependant . cookie_params , request . cookies ) values . update ( path_values ) values . update ( query_values ) values . update ( header_values ) values . update ( cookie_values ) errors += path_errors + query_errors + header_errors + cookie_errors if dependant . body_params : ( body_values , body_errors , ) = await request_body_to_args ( # body_params checked above required_params = dependant . body_params , received_body = body ) values . update ( body_values ) errors . extend ( body_errors ) if dependant . http_connection_param_name : values [ dependant . http_connection_param_name ] = request if dependant . request_param_name and isinstance ( request , Request ): values [ dependant . request_param_name ] = request elif dependant . websocket_param_name and isinstance ( request , WebSocket ): values [ dependant . websocket_param_name ] = request if dependant . background_tasks_param_name : if background_tasks is None : background_tasks = BackgroundTasks () values [ dependant . background_tasks_param_name ] = background_tasks if dependant . response_param_name : values [ dependant . response_param_name ] = response if dependant . security_scopes_param_name : values [ dependant . security_scopes_param_name ] = SecurityScopes ( scopes = dependant . security_scopes ) return values , errors , background_tasks , response , dependency_cache solve_generator async \u00b6 solve_generator ( * , call , stack , sub_values ) Source code in fastapi/dependencies/utils.py 442 443 444 445 446 447 448 449 async def solve_generator ( * , call : Callable [ ... , Any ], stack : AsyncExitStack , sub_values : Dict [ str , Any ] ) -> Any : if is_gen_callable ( call ): cm = contextmanager_in_threadpool ( contextmanager ( call )( ** sub_values )) elif is_async_gen_callable ( call ): cm = asynccontextmanager ( call )( ** sub_values ) return await stack . enter_async_context ( cm )","title":"utils"},{"location":"dependencies/utils/#fastapi.dependencies.utils.CacheKey","text":"CacheKey = Tuple [ Optional [ Callable [ Ellipsis , Any ]], Tuple [ str , Ellipsis ] ]","title":"CacheKey"},{"location":"dependencies/utils/#fastapi.dependencies.utils.multipart_incorrect_install_error","text":"multipart_incorrect_install_error = 'Form data requires \"python-multipart\" to be installed. It seems you installed \"multipart\" instead. \\n You can remove \"multipart\" with: \\n\\n pip uninstall multipart \\n\\n And then install \"python-multipart\" with: \\n\\n pip install python-multipart \\n '","title":"multipart_incorrect_install_error"},{"location":"dependencies/utils/#fastapi.dependencies.utils.multipart_not_installed_error","text":"multipart_not_installed_error = 'Form data requires \"python-multipart\" to be installed. \\n You can install \"python-multipart\" with: \\n\\n pip install python-multipart \\n '","title":"multipart_not_installed_error"},{"location":"dependencies/utils/#fastapi.dependencies.utils.sequence_shape_to_type","text":"sequence_shape_to_type = { SHAPE_LIST : list , SHAPE_SET : set , SHAPE_TUPLE : tuple , SHAPE_SEQUENCE : list , SHAPE_TUPLE_ELLIPSIS : list , }","title":"sequence_shape_to_type"},{"location":"dependencies/utils/#fastapi.dependencies.utils.sequence_shapes","text":"sequence_shapes = { SHAPE_LIST , SHAPE_SET , SHAPE_TUPLE , SHAPE_SEQUENCE , SHAPE_TUPLE_ELLIPSIS , }","title":"sequence_shapes"},{"location":"dependencies/utils/#fastapi.dependencies.utils.sequence_types","text":"sequence_types = ( list , set , tuple )","title":"sequence_types"},{"location":"dependencies/utils/#fastapi.dependencies.utils.add_non_field_param_to_dependency","text":"add_non_field_param_to_dependency ( * , param , dependant ) Source code in fastapi/dependencies/utils.py 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 def add_non_field_param_to_dependency ( * , param : inspect . Parameter , dependant : Dependant ) -> Optional [ bool ]: if lenient_issubclass ( param . annotation , Request ): dependant . request_param_name = param . name return True elif lenient_issubclass ( param . annotation , WebSocket ): dependant . websocket_param_name = param . name return True elif lenient_issubclass ( param . annotation , HTTPConnection ): dependant . http_connection_param_name = param . name return True elif lenient_issubclass ( param . annotation , Response ): dependant . response_param_name = param . name return True elif lenient_issubclass ( param . annotation , BackgroundTasks ): dependant . background_tasks_param_name = param . name return True elif lenient_issubclass ( param . annotation , SecurityScopes ): dependant . security_scopes_param_name = param . name return True return None","title":"add_non_field_param_to_dependency()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.add_param_to_fields","text":"add_param_to_fields ( * , field , dependant ) Source code in fastapi/dependencies/utils.py 404 405 406 407 408 409 410 411 412 413 414 415 416 def add_param_to_fields ( * , field : ModelField , dependant : Dependant ) -> None : field_info = cast ( params . Param , field . field_info ) if field_info . in_ == params . ParamTypes . path : dependant . path_params . append ( field ) elif field_info . in_ == params . ParamTypes . query : dependant . query_params . append ( field ) elif field_info . in_ == params . ParamTypes . header : dependant . header_params . append ( field ) else : assert ( field_info . in_ == params . ParamTypes . cookie ), f \"non-body parameters must be in path, query, header or cookie: { field . name } \" dependant . cookie_params . append ( field )","title":"add_param_to_fields()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.check_file_field","text":"check_file_field ( field ) Source code in fastapi/dependencies/utils.py 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 def check_file_field ( field : ModelField ) -> None : field_info = field . field_info if isinstance ( field_info , params . Form ): try : # __version__ is available in both multiparts, and can be mocked from multipart import __version__ # type: ignore assert __version__ try : # parse_options_header is only available in the right multipart from multipart.multipart import parse_options_header # type: ignore assert parse_options_header except ImportError : logger . error ( multipart_incorrect_install_error ) raise RuntimeError ( multipart_incorrect_install_error ) except ImportError : logger . error ( multipart_not_installed_error ) raise RuntimeError ( multipart_not_installed_error )","title":"check_file_field()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.get_body_field","text":"get_body_field ( * , dependant , name ) Source code in fastapi/dependencies/utils.py 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 def get_body_field ( * , dependant : Dependant , name : str ) -> Optional [ ModelField ]: flat_dependant = get_flat_dependant ( dependant ) if not flat_dependant . body_params : return None first_param = flat_dependant . body_params [ 0 ] field_info = first_param . field_info embed = getattr ( field_info , \"embed\" , None ) body_param_names_set = { param . name for param in flat_dependant . body_params } if len ( body_param_names_set ) == 1 and not embed : check_file_field ( first_param ) return first_param # If one field requires to embed, all have to be embedded # in case a sub-dependency is evaluated with a single unique body field # That is combined (embedded) with other body fields for param in flat_dependant . body_params : setattr ( param . field_info , \"embed\" , True ) model_name = \"Body_\" + name BodyModel : Type [ BaseModel ] = create_model ( model_name ) for f in flat_dependant . body_params : BodyModel . __fields__ [ f . name ] = f required = any ( True for f in flat_dependant . body_params if f . required ) BodyFieldInfo_kwargs : Dict [ str , Any ] = dict ( default = None ) if any ( isinstance ( f . field_info , params . File ) for f in flat_dependant . body_params ): BodyFieldInfo : Type [ params . Body ] = params . File elif any ( isinstance ( f . field_info , params . Form ) for f in flat_dependant . body_params ): BodyFieldInfo = params . Form else : BodyFieldInfo = params . Body body_param_media_types = [ getattr ( f . field_info , \"media_type\" ) for f in flat_dependant . body_params if isinstance ( f . field_info , params . Body ) ] if len ( set ( body_param_media_types )) == 1 : BodyFieldInfo_kwargs [ \"media_type\" ] = body_param_media_types [ 0 ] final_field = create_response_field ( name = \"body\" , type_ = BodyModel , required = required , alias = \"body\" , field_info = BodyFieldInfo ( ** BodyFieldInfo_kwargs ), ) check_file_field ( final_field ) return final_field","title":"get_body_field()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.get_dependant","text":"get_dependant ( * , path , call , name = None , security_scopes = None , use_cache = True ) Source code in fastapi/dependencies/utils.py 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 def get_dependant ( * , path : str , call : Callable [ ... , Any ], name : Optional [ str ] = None , security_scopes : Optional [ List [ str ]] = None , use_cache : bool = True , ) -> Dependant : path_param_names = get_path_param_names ( path ) endpoint_signature = get_typed_signature ( call ) signature_params = endpoint_signature . parameters dependant = Dependant ( call = call , name = name , path = path , use_cache = use_cache ) for param_name , param in signature_params . items (): if isinstance ( param . default , params . Depends ): sub_dependant = get_param_sub_dependant ( param = param , path = path , security_scopes = security_scopes ) dependant . dependencies . append ( sub_dependant ) continue if add_non_field_param_to_dependency ( param = param , dependant = dependant ): continue param_field = get_param_field ( param = param , default_field_info = params . Query , param_name = param_name ) if param_name in path_param_names : assert is_scalar_field ( field = param_field ), \"Path params must be of one of the supported types\" if isinstance ( param . default , params . Path ): ignore_default = False else : ignore_default = True param_field = get_param_field ( param = param , param_name = param_name , default_field_info = params . Path , force_type = params . ParamTypes . path , ignore_default = ignore_default , ) add_param_to_fields ( field = param_field , dependant = dependant ) elif is_scalar_field ( field = param_field ): add_param_to_fields ( field = param_field , dependant = dependant ) elif isinstance ( param . default , ( params . Query , params . Header ) ) and is_scalar_sequence_field ( param_field ): add_param_to_fields ( field = param_field , dependant = dependant ) else : field_info = param_field . field_info assert isinstance ( field_info , params . Body ), f \"Param: { param_field . name } can only be a request body, using Body()\" dependant . body_params . append ( param_field ) return dependant","title":"get_dependant()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.get_flat_dependant","text":"get_flat_dependant ( dependant , * , skip_repeats = False , visited = None ) Source code in fastapi/dependencies/utils.py 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 def get_flat_dependant ( dependant : Dependant , * , skip_repeats : bool = False , visited : Optional [ List [ CacheKey ]] = None , ) -> Dependant : if visited is None : visited = [] visited . append ( dependant . cache_key ) flat_dependant = Dependant ( path_params = dependant . path_params . copy (), query_params = dependant . query_params . copy (), header_params = dependant . header_params . copy (), cookie_params = dependant . cookie_params . copy (), body_params = dependant . body_params . copy (), security_schemes = dependant . security_requirements . copy (), use_cache = dependant . use_cache , path = dependant . path , ) for sub_dependant in dependant . dependencies : if skip_repeats and sub_dependant . cache_key in visited : continue flat_sub = get_flat_dependant ( sub_dependant , skip_repeats = skip_repeats , visited = visited ) flat_dependant . path_params . extend ( flat_sub . path_params ) flat_dependant . query_params . extend ( flat_sub . query_params ) flat_dependant . header_params . extend ( flat_sub . header_params ) flat_dependant . cookie_params . extend ( flat_sub . cookie_params ) flat_dependant . body_params . extend ( flat_sub . body_params ) flat_dependant . security_requirements . extend ( flat_sub . security_requirements ) return flat_dependant","title":"get_flat_dependant()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.get_flat_params","text":"get_flat_params ( dependant ) Source code in fastapi/dependencies/utils.py 206 207 208 209 210 211 212 213 def get_flat_params ( dependant : Dependant ) -> List [ ModelField ]: flat_dependant = get_flat_dependant ( dependant , skip_repeats = True ) return ( flat_dependant . path_params + flat_dependant . query_params + flat_dependant . header_params + flat_dependant . cookie_params )","title":"get_flat_params()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.get_missing_field_error","text":"get_missing_field_error ( loc ) Source code in fastapi/dependencies/utils.py 703 704 705 def get_missing_field_error ( loc : Tuple [ str , ... ]) -> ErrorWrapper : missing_field_error = ErrorWrapper ( MissingError (), loc = loc ) return missing_field_error","title":"get_missing_field_error()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.get_param_field","text":"get_param_field ( * , param , param_name , default_field_info = params . Param , force_type = None , ignore_default = False ) Source code in fastapi/dependencies/utils.py 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 def get_param_field ( * , param : inspect . Parameter , param_name : str , default_field_info : Type [ params . Param ] = params . Param , force_type : Optional [ params . ParamTypes ] = None , ignore_default : bool = False , ) -> ModelField : default_value : Any = Undefined had_schema = False if not param . default == param . empty and ignore_default is False : default_value = param . default if isinstance ( default_value , FieldInfo ): had_schema = True field_info = default_value default_value = field_info . default if ( isinstance ( field_info , params . Param ) and getattr ( field_info , \"in_\" , None ) is None ): field_info . in_ = default_field_info . in_ if force_type : field_info . in_ = force_type # type: ignore else : field_info = default_field_info ( default = default_value ) required = True if default_value is Required or ignore_default : required = True default_value = None elif default_value is not Undefined : required = False annotation : Any = Any if not param . annotation == param . empty : annotation = param . annotation annotation = get_annotation_from_field_info ( annotation , field_info , param_name ) if not field_info . alias and getattr ( field_info , \"convert_underscores\" , None ): alias = param . name . replace ( \"_\" , \"-\" ) else : alias = field_info . alias or param . name field = create_response_field ( name = param . name , type_ = annotation , default = default_value , alias = alias , required = required , field_info = field_info , ) if not had_schema and not is_scalar_field ( field = field ): field . field_info = params . Body ( field_info . default ) if not had_schema and lenient_issubclass ( field . type_ , UploadFile ): field . field_info = params . File ( field_info . default ) return field","title":"get_param_field()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.get_param_sub_dependant","text":"get_param_sub_dependant ( * , param , path , security_scopes = None ) Source code in fastapi/dependencies/utils.py 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 def get_param_sub_dependant ( * , param : inspect . Parameter , path : str , security_scopes : Optional [ List [ str ]] = None ) -> Dependant : depends : params . Depends = param . default if depends . dependency : dependency = depends . dependency else : dependency = param . annotation return get_sub_dependant ( depends = depends , dependency = dependency , path = path , name = param . name , security_scopes = security_scopes , )","title":"get_param_sub_dependant()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.get_parameterless_sub_dependant","text":"get_parameterless_sub_dependant ( * , depends , path ) Source code in fastapi/dependencies/utils.py 128 129 130 131 132 def get_parameterless_sub_dependant ( * , depends : params . Depends , path : str ) -> Dependant : assert callable ( depends . dependency ), \"A parameter-less dependency must have a callable dependency\" return get_sub_dependant ( depends = depends , dependency = depends . dependency , path = path )","title":"get_parameterless_sub_dependant()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.get_sub_dependant","text":"get_sub_dependant ( * , depends , dependency , path , name = None , security_scopes = None ) Source code in fastapi/dependencies/utils.py 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 def get_sub_dependant ( * , depends : params . Depends , dependency : Callable [ ... , Any ], path : str , name : Optional [ str ] = None , security_scopes : Optional [ List [ str ]] = None , ) -> Dependant : security_requirement = None security_scopes = security_scopes or [] if isinstance ( depends , params . Security ): dependency_scopes = depends . scopes security_scopes . extend ( dependency_scopes ) if isinstance ( dependency , SecurityBase ): use_scopes : List [ str ] = [] if isinstance ( dependency , ( OAuth2 , OpenIdConnect )): use_scopes = security_scopes security_requirement = SecurityRequirement ( security_scheme = dependency , scopes = use_scopes ) sub_dependant = get_dependant ( path = path , call = dependency , name = name , security_scopes = security_scopes , use_cache = depends . use_cache , ) if security_requirement : sub_dependant . security_requirements . append ( security_requirement ) sub_dependant . security_scopes = security_scopes return sub_dependant","title":"get_sub_dependant()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.get_typed_annotation","text":"get_typed_annotation ( param , globalns ) Source code in fastapi/dependencies/utils.py 262 263 264 265 266 267 def get_typed_annotation ( param : inspect . Parameter , globalns : Dict [ str , Any ]) -> Any : annotation = param . annotation if isinstance ( annotation , str ): annotation = ForwardRef ( annotation ) annotation = evaluate_forwardref ( annotation , globalns , globalns ) return annotation","title":"get_typed_annotation()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.get_typed_signature","text":"get_typed_signature ( call ) Source code in fastapi/dependencies/utils.py 246 247 248 249 250 251 252 253 254 255 256 257 258 259 def get_typed_signature ( call : Callable [ ... , Any ]) -> inspect . Signature : signature = inspect . signature ( call ) globalns = getattr ( call , \"__globals__\" , {}) typed_params = [ inspect . Parameter ( name = param . name , kind = param . kind , default = param . default , annotation = get_typed_annotation ( param , globalns ), ) for param in signature . parameters . values () ] typed_signature = inspect . Signature ( typed_params ) return typed_signature","title":"get_typed_signature()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.is_async_gen_callable","text":"is_async_gen_callable ( call ) Source code in fastapi/dependencies/utils.py 428 429 430 431 432 def is_async_gen_callable ( call : Callable [ ... , Any ]) -> bool : if inspect . isasyncgenfunction ( call ): return True call = getattr ( call , \"__call__\" , None ) return inspect . isasyncgenfunction ( call )","title":"is_async_gen_callable()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.is_coroutine_callable","text":"is_coroutine_callable ( call ) Source code in fastapi/dependencies/utils.py 419 420 421 422 423 424 425 def is_coroutine_callable ( call : Callable [ ... , Any ]) -> bool : if inspect . isroutine ( call ): return inspect . iscoroutinefunction ( call ) if inspect . isclass ( call ): return False call = getattr ( call , \"__call__\" , None ) return inspect . iscoroutinefunction ( call )","title":"is_coroutine_callable()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.is_gen_callable","text":"is_gen_callable ( call ) Source code in fastapi/dependencies/utils.py 435 436 437 438 439 def is_gen_callable ( call : Callable [ ... , Any ]) -> bool : if inspect . isgeneratorfunction ( call ): return True call = getattr ( call , \"__call__\" , None ) return inspect . isgeneratorfunction ( call )","title":"is_gen_callable()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.is_scalar_field","text":"is_scalar_field ( field ) Source code in fastapi/dependencies/utils.py 216 217 218 219 220 221 222 223 224 225 226 227 228 229 def is_scalar_field ( field : ModelField ) -> bool : field_info = field . field_info if not ( field . shape == SHAPE_SINGLETON and not lenient_issubclass ( field . type_ , BaseModel ) and not lenient_issubclass ( field . type_ , sequence_types + ( dict ,)) and not dataclasses . is_dataclass ( field . type_ ) and not isinstance ( field_info , params . Body ) ): return False if field . sub_fields : if not all ( is_scalar_field ( f ) for f in field . sub_fields ): return False return True","title":"is_scalar_field()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.is_scalar_sequence_field","text":"is_scalar_sequence_field ( field ) Source code in fastapi/dependencies/utils.py 232 233 234 235 236 237 238 239 240 241 242 243 def is_scalar_sequence_field ( field : ModelField ) -> bool : if ( field . shape in sequence_shapes ) and not lenient_issubclass ( field . type_ , BaseModel ): if field . sub_fields is not None : for sub_field in field . sub_fields : if not is_scalar_field ( sub_field ): return False return True if lenient_issubclass ( field . type_ , sequence_types ): return True return False","title":"is_scalar_sequence_field()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.request_body_to_args","text":"request_body_to_args ( required_params , received_body ) Source code in fastapi/dependencies/utils.py 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 async def request_body_to_args ( required_params : List [ ModelField ], received_body : Optional [ Union [ Dict [ str , Any ], FormData ]], ) -> Tuple [ Dict [ str , Any ], List [ ErrorWrapper ]]: values = {} errors = [] if required_params : field = required_params [ 0 ] field_info = field . field_info embed = getattr ( field_info , \"embed\" , None ) field_alias_omitted = len ( required_params ) == 1 and not embed if field_alias_omitted : received_body = { field . alias : received_body } for field in required_params : loc : Tuple [ str , ... ] if field_alias_omitted : loc = ( \"body\" ,) else : loc = ( \"body\" , field . alias ) value : Optional [ Any ] = None if received_body is not None : if ( field . shape in sequence_shapes or field . type_ in sequence_types ) and isinstance ( received_body , FormData ): value = received_body . getlist ( field . alias ) else : try : value = received_body . get ( field . alias ) except AttributeError : errors . append ( get_missing_field_error ( loc )) continue if ( value is None or ( isinstance ( field_info , params . Form ) and value == \"\" ) or ( isinstance ( field_info , params . Form ) and field . shape in sequence_shapes and len ( value ) == 0 ) ): if field . required : errors . append ( get_missing_field_error ( loc )) else : values [ field . name ] = deepcopy ( field . default ) continue if ( isinstance ( field_info , params . File ) and lenient_issubclass ( field . type_ , bytes ) and isinstance ( value , UploadFile ) ): value = await value . read () elif ( field . shape in sequence_shapes and isinstance ( field_info , params . File ) and lenient_issubclass ( field . type_ , bytes ) and isinstance ( value , sequence_types ) ): results : List [ Union [ bytes , str ]] = [] async def process_fn ( fn : Callable [[], Coroutine [ Any , Any , Any ]] ) -> None : result = await fn () results . append ( result ) async with anyio . create_task_group () as tg : for sub_value in value : tg . start_soon ( process_fn , sub_value . read ) value = sequence_shape_to_type [ field . shape ]( results ) v_ , errors_ = field . validate ( value , values , loc = loc ) if isinstance ( errors_ , ErrorWrapper ): errors . append ( errors_ ) elif isinstance ( errors_ , list ): errors . extend ( errors_ ) else : values [ field . name ] = v_ return values , errors","title":"request_body_to_args()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.request_params_to_args","text":"request_params_to_args ( required_params , received_params ) Source code in fastapi/dependencies/utils.py 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 def request_params_to_args ( required_params : Sequence [ ModelField ], received_params : Union [ Mapping [ str , Any ], QueryParams , Headers ], ) -> Tuple [ Dict [ str , Any ], List [ ErrorWrapper ]]: values = {} errors = [] for field in required_params : if is_scalar_sequence_field ( field ) and isinstance ( received_params , ( QueryParams , Headers ) ): value = received_params . getlist ( field . alias ) or field . default else : value = received_params . get ( field . alias ) field_info = field . field_info assert isinstance ( field_info , params . Param ), \"Params must be subclasses of Param\" if value is None : if field . required : errors . append ( ErrorWrapper ( MissingError (), loc = ( field_info . in_ . value , field . alias ) ) ) else : values [ field . name ] = deepcopy ( field . default ) continue v_ , errors_ = field . validate ( value , values , loc = ( field_info . in_ . value , field . alias ) ) if isinstance ( errors_ , ErrorWrapper ): errors . append ( errors_ ) elif isinstance ( errors_ , list ): errors . extend ( errors_ ) else : values [ field . name ] = v_ return values , errors","title":"request_params_to_args()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.solve_dependencies","text":"solve_dependencies ( * , request , dependant , body = None , background_tasks = None , response = None , dependency_overrides_provider = None , dependency_cache = None ) Source code in fastapi/dependencies/utils.pyasync def solve_dependencies ( * , request : Union [ Request , WebSocket ], dependant : Dependant , body : Optional [ Union [ Dict [ str , Any ], FormData ]] = None , background_tasks : Optional [ BackgroundTasks ] = None , response : Optional [ Response ] = None , dependency_overrides_provider : Optional [ Any ] = None , dependency_cache : Optional [ Dict [ Tuple [ Callable [ ... , Any ], Tuple [ str ]], Any ]] = None , ) -> Tuple [ Dict [ str , Any ], List [ ErrorWrapper ], Optional [ BackgroundTasks ], Response , Dict [ Tuple [ Callable [ ... , Any ], Tuple [ str ]], Any ], ]: values : Dict [ str , Any ] = {} errors : List [ ErrorWrapper ] = [] if response is None : response = Response () del response . headers [ \"content-length\" ] response . status_code = None # type: ignore dependency_cache = dependency_cache or {} sub_dependant : Dependant for sub_dependant in dependant . dependencies : sub_dependant . call = cast ( Callable [ ... , Any ], sub_dependant . call ) sub_dependant . cache_key = cast ( Tuple [ Callable [ ... , Any ], Tuple [ str ]], sub_dependant . cache_key ) call = sub_dependant . call use_sub_dependant = sub_dependant if ( dependency_overrides_provider and dependency_overrides_provider . dependency_overrides ): original_call = sub_dependant . call call = getattr ( dependency_overrides_provider , \"dependency_overrides\" , {} ) . get ( original_call , original_call ) use_path : str = sub_dependant . path # type: ignore use_sub_dependant = get_dependant ( path = use_path , call = call , name = sub_dependant . name , security_scopes = sub_dependant . security_scopes , ) use_sub_dependant . security_scopes = sub_dependant . security_scopes solved_result = await solve_dependencies ( request = request , dependant = use_sub_dependant , body = body , background_tasks = background_tasks , response = response , dependency_overrides_provider = dependency_overrides_provider , dependency_cache = dependency_cache , ) ( sub_values , sub_errors , background_tasks , _ , # the subdependency returns the same response we have sub_dependency_cache , ) = solved_result dependency_cache . update ( sub_dependency_cache ) if sub_errors : errors . extend ( sub_errors ) continue if sub_dependant . use_cache and sub_dependant . cache_key in dependency_cache : solved = dependency_cache [ sub_dependant . cache_key ] elif is_gen_callable ( call ) or is_async_gen_callable ( call ): stack = request . scope . get ( \"fastapi_astack\" ) assert isinstance ( stack , AsyncExitStack ) solved = await solve_generator ( call = call , stack = stack , sub_values = sub_values ) elif is_coroutine_callable ( call ): solved = await call ( ** sub_values ) else : solved = await run_in_threadpool ( call , ** sub_values ) if sub_dependant . name is not None : values [ sub_dependant . name ] = solved if sub_dependant . cache_key not in dependency_cache : dependency_cache [ sub_dependant . cache_key ] = solved path_values , path_errors = request_params_to_args ( dependant . path_params , request . path_params ) query_values , query_errors = request_params_to_args ( dependant . query_params , request . query_params ) header_values , header_errors = request_params_to_args ( dependant . header_params , request . headers ) cookie_values , cookie_errors = request_params_to_args ( dependant . cookie_params , request . cookies ) values . update ( path_values ) values . update ( query_values ) values . update ( header_values ) values . update ( cookie_values ) errors += path_errors + query_errors + header_errors + cookie_errors if dependant . body_params : ( body_values , body_errors , ) = await request_body_to_args ( # body_params checked above required_params = dependant . body_params , received_body = body ) values . update ( body_values ) errors . extend ( body_errors ) if dependant . http_connection_param_name : values [ dependant . http_connection_param_name ] = request if dependant . request_param_name and isinstance ( request , Request ): values [ dependant . request_param_name ] = request elif dependant . websocket_param_name and isinstance ( request , WebSocket ): values [ dependant . websocket_param_name ] = request if dependant . background_tasks_param_name : if background_tasks is None : background_tasks = BackgroundTasks () values [ dependant . background_tasks_param_name ] = background_tasks if dependant . response_param_name : values [ dependant . response_param_name ] = response if dependant . security_scopes_param_name : values [ dependant . security_scopes_param_name ] = SecurityScopes ( scopes = dependant . security_scopes ) return values , errors , background_tasks , response , dependency_cache","title":"solve_dependencies()"},{"location":"dependencies/utils/#fastapi.dependencies.utils.solve_generator","text":"solve_generator ( * , call , stack , sub_values ) Source code in fastapi/dependencies/utils.py 442 443 444 445 446 447 448 449 async def solve_generator ( * , call : Callable [ ... , Any ], stack : AsyncExitStack , sub_values : Dict [ str , Any ] ) -> Any : if is_gen_callable ( call ): cm = contextmanager_in_threadpool ( contextmanager ( call )( ** sub_values )) elif is_async_gen_callable ( call ): cm = asynccontextmanager ( call )( ** sub_values ) return await stack . enter_async_context ( cm )","title":"solve_generator()"},{"location":"middleware/","text":"","title":"middleware"},{"location":"middleware/asyncexitstack/","text":"AsyncExitStackMiddleware \u00b6 AsyncExitStackMiddleware ( app , context_name = \"fastapi_astack\" ) Source code in fastapi/middleware/asyncexitstack.py 8 9 10 def __init__ ( self , app : ASGIApp , context_name : str = \"fastapi_astack\" ) -> None : self . app = app self . context_name = context_name app instance-attribute \u00b6 app = app context_name instance-attribute \u00b6 context_name = context_name __call__ async \u00b6 __call__ ( scope , receive , send ) Source code in fastapi/middleware/asyncexitstack.py 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 async def __call__ ( self , scope : Scope , receive : Receive , send : Send ) -> None : if AsyncExitStack : dependency_exception : Optional [ Exception ] = None async with AsyncExitStack () as stack : scope [ self . context_name ] = stack try : await self . app ( scope , receive , send ) except Exception as e : dependency_exception = e raise e if dependency_exception : # This exception was possibly handled by the dependency but it should # still bubble up so that the ServerErrorMiddleware can return a 500 # or the ExceptionMiddleware can catch and handle any other exceptions raise dependency_exception else : await self . app ( scope , receive , send ) # pragma: no cover","title":"asyncexitstack"},{"location":"middleware/asyncexitstack/#fastapi.middleware.asyncexitstack.AsyncExitStackMiddleware","text":"AsyncExitStackMiddleware ( app , context_name = \"fastapi_astack\" ) Source code in fastapi/middleware/asyncexitstack.py 8 9 10 def __init__ ( self , app : ASGIApp , context_name : str = \"fastapi_astack\" ) -> None : self . app = app self . context_name = context_name","title":"AsyncExitStackMiddleware"},{"location":"middleware/asyncexitstack/#fastapi.middleware.asyncexitstack.AsyncExitStackMiddleware.app","text":"app = app","title":"app"},{"location":"middleware/asyncexitstack/#fastapi.middleware.asyncexitstack.AsyncExitStackMiddleware.context_name","text":"context_name = context_name","title":"context_name"},{"location":"middleware/asyncexitstack/#fastapi.middleware.asyncexitstack.AsyncExitStackMiddleware.__call__","text":"__call__ ( scope , receive , send ) Source code in fastapi/middleware/asyncexitstack.py 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 async def __call__ ( self , scope : Scope , receive : Receive , send : Send ) -> None : if AsyncExitStack : dependency_exception : Optional [ Exception ] = None async with AsyncExitStack () as stack : scope [ self . context_name ] = stack try : await self . app ( scope , receive , send ) except Exception as e : dependency_exception = e raise e if dependency_exception : # This exception was possibly handled by the dependency but it should # still bubble up so that the ServerErrorMiddleware can return a 500 # or the ExceptionMiddleware can catch and handle any other exceptions raise dependency_exception else : await self . app ( scope , receive , send ) # pragma: no cover","title":"__call__()"},{"location":"middleware/cors/","text":"","title":"cors"},{"location":"middleware/gzip/","text":"","title":"gzip"},{"location":"middleware/httpsredirect/","text":"","title":"httpsredirect"},{"location":"middleware/trustedhost/","text":"","title":"trustedhost"},{"location":"middleware/wsgi/","text":"","title":"wsgi"},{"location":"openapi/","text":"","title":"openapi"},{"location":"openapi/constants/","text":"METHODS_WITH_BODY module-attribute \u00b6 METHODS_WITH_BODY = { \"GET\" , \"HEAD\" , \"POST\" , \"PUT\" , \"DELETE\" , \"PATCH\" , } REF_PREFIX module-attribute \u00b6 REF_PREFIX = '#/components/schemas/' STATUS_CODES_WITH_NO_BODY module-attribute \u00b6 STATUS_CODES_WITH_NO_BODY = { 100 , 101 , 102 , 103 , 204 , 304 }","title":"constants"},{"location":"openapi/constants/#fastapi.openapi.constants.METHODS_WITH_BODY","text":"METHODS_WITH_BODY = { \"GET\" , \"HEAD\" , \"POST\" , \"PUT\" , \"DELETE\" , \"PATCH\" , }","title":"METHODS_WITH_BODY"},{"location":"openapi/constants/#fastapi.openapi.constants.REF_PREFIX","text":"REF_PREFIX = '#/components/schemas/'","title":"REF_PREFIX"},{"location":"openapi/constants/#fastapi.openapi.constants.STATUS_CODES_WITH_NO_BODY","text":"STATUS_CODES_WITH_NO_BODY = { 100 , 101 , 102 , 103 , 204 , 304 }","title":"STATUS_CODES_WITH_NO_BODY"},{"location":"openapi/docs/","text":"swagger_ui_default_parameters module-attribute \u00b6 swagger_ui_default_parameters = { \"dom_id\" : \"#swagger-ui\" , \"layout\" : \"BaseLayout\" , \"deepLinking\" : True , \"showExtensions\" : True , \"showCommonExtensions\" : True , } get_redoc_html \u00b6 get_redoc_html ( * , openapi_url , title , redoc_js_url = \"https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js\" , redoc_favicon_url = \"https://fastapi.tiangolo.com/img/favicon.png\" , with_google_fonts = True ) Source code in fastapi/openapi/docs.py 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 def get_redoc_html ( * , openapi_url : str , title : str , redoc_js_url : str = \"https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js\" , redoc_favicon_url : str = \"https://fastapi.tiangolo.com/img/favicon.png\" , with_google_fonts : bool = True , ) -> HTMLResponse : html = f \"\"\" <!DOCTYPE html> <html> <head> <title> { title } </title> <!-- needed for adaptive design --> <meta charset=\"utf-8\"/> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> \"\"\" if with_google_fonts : html += \"\"\" <link href=\"https://fonts.googleapis.com/css?family=Montserrat:300,400,700|Roboto:300,400,700\" rel=\"stylesheet\"> \"\"\" html += f \"\"\" <link rel=\"shortcut icon\" href=\" { redoc_favicon_url } \"> <!-- ReDoc doesn't change outer page styles --> <style> body {{ margin: 0; padding: 0; }} </style> </head> <body> <redoc spec-url=\" { openapi_url } \"></redoc> <script src=\" { redoc_js_url } \"> </script> </body> </html> \"\"\" return HTMLResponse ( html ) get_swagger_ui_html \u00b6 get_swagger_ui_html ( * , openapi_url , title , swagger_js_url = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\" , swagger_css_url = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\" , swagger_favicon_url = \"https://fastapi.tiangolo.com/img/favicon.png\" , oauth2_redirect_url = None , init_oauth = None , swagger_ui_parameters = None ) Source code in fastapi/openapi/docs.py 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 def get_swagger_ui_html ( * , openapi_url : str , title : str , swagger_js_url : str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\" , swagger_css_url : str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\" , swagger_favicon_url : str = \"https://fastapi.tiangolo.com/img/favicon.png\" , oauth2_redirect_url : Optional [ str ] = None , init_oauth : Optional [ Dict [ str , Any ]] = None , swagger_ui_parameters : Optional [ Dict [ str , Any ]] = None , ) -> HTMLResponse : current_swagger_ui_parameters = swagger_ui_default_parameters . copy () if swagger_ui_parameters : current_swagger_ui_parameters . update ( swagger_ui_parameters ) html = f \"\"\" <!DOCTYPE html> <html> <head> <link type=\"text/css\" rel=\"stylesheet\" href=\" { swagger_css_url } \"> <link rel=\"shortcut icon\" href=\" { swagger_favicon_url } \"> <title> { title } </title> </head> <body> <div id=\"swagger-ui\"> </div> <script src=\" { swagger_js_url } \"></script> <!-- `SwaggerUIBundle` is now available on the page --> <script> const ui = SwaggerUIBundle( {{ url: ' { openapi_url } ', \"\"\" for key , value in current_swagger_ui_parameters . items (): html += f \" { json . dumps ( key ) } : { json . dumps ( jsonable_encoder ( value )) } , \\n \" if oauth2_redirect_url : html += f \"oauth2RedirectUrl: window.location.origin + ' { oauth2_redirect_url } ',\" html += \"\"\" presets: [ SwaggerUIBundle.presets.apis, SwaggerUIBundle.SwaggerUIStandalonePreset ], })\"\"\" if init_oauth : html += f \"\"\" ui.initOAuth( { json . dumps ( jsonable_encoder ( init_oauth )) } ) \"\"\" html += \"\"\" </script> </body> </html> \"\"\" return HTMLResponse ( html ) get_swagger_ui_oauth2_redirect_html \u00b6 get_swagger_ui_oauth2_redirect_html () Source code in fastapi/openapi/docs.py 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 def get_swagger_ui_oauth2_redirect_html () -> HTMLResponse : html = \"\"\" <!DOCTYPE html> <html lang=\"en-US\"> <body onload=\"run()\"> </body> </html> <script> 'use strict'; function run () { var oauth2 = window.opener.swaggerUIRedirectOauth2; var sentState = oauth2.state; var redirectUrl = oauth2.redirectUrl; var isValid, qp, arr; if (/code|token|error/.test(window.location.hash)) { qp = window.location.hash.substring(1); } else { qp = location.search.substring(1); } arr = qp.split(\"&\") arr.forEach(function (v,i,_arr) { _arr[i] = '\"' + v.replace('=', '\":\"') + '\"';}) qp = qp ? JSON.parse('{' + arr.join() + '}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) } ) : {} isValid = qp.state === sentState if (( oauth2.auth.schema.get(\"flow\") === \"accessCode\"|| oauth2.auth.schema.get(\"flow\") === \"authorizationCode\" ) && !oauth2.auth.code) { if (!isValid) { oauth2.errCb({ authId: oauth2.auth.name, source: \"auth\", level: \"warning\", message: \"Authorization may be unsafe, passed state was changed in server Passed state wasn't returned from auth server\" }); } if (qp.code) { delete oauth2.state; oauth2.auth.code = qp.code; oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl}); } else { let oauthErrorMsg if (qp.error) { oauthErrorMsg = \"[\"+qp.error+\"]: \" + (qp.error_description ? qp.error_description+ \". \" : \"no accessCode received from the server. \") + (qp.error_uri ? \"More info: \"+qp.error_uri : \"\"); } oauth2.errCb({ authId: oauth2.auth.name, source: \"auth\", level: \"error\", message: oauthErrorMsg || \"[Authorization failed]: no accessCode received from the server\" }); } } else { oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl}); } window.close(); } </script> \"\"\" return HTMLResponse ( content = html )","title":"docs"},{"location":"openapi/docs/#fastapi.openapi.docs.swagger_ui_default_parameters","text":"swagger_ui_default_parameters = { \"dom_id\" : \"#swagger-ui\" , \"layout\" : \"BaseLayout\" , \"deepLinking\" : True , \"showExtensions\" : True , \"showCommonExtensions\" : True , }","title":"swagger_ui_default_parameters"},{"location":"openapi/docs/#fastapi.openapi.docs.get_redoc_html","text":"get_redoc_html ( * , openapi_url , title , redoc_js_url = \"https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js\" , redoc_favicon_url = \"https://fastapi.tiangolo.com/img/favicon.png\" , with_google_fonts = True ) Source code in fastapi/openapi/docs.py 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 def get_redoc_html ( * , openapi_url : str , title : str , redoc_js_url : str = \"https://cdn.jsdelivr.net/npm/redoc@next/bundles/redoc.standalone.js\" , redoc_favicon_url : str = \"https://fastapi.tiangolo.com/img/favicon.png\" , with_google_fonts : bool = True , ) -> HTMLResponse : html = f \"\"\" <!DOCTYPE html> <html> <head> <title> { title } </title> <!-- needed for adaptive design --> <meta charset=\"utf-8\"/> <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> \"\"\" if with_google_fonts : html += \"\"\" <link href=\"https://fonts.googleapis.com/css?family=Montserrat:300,400,700|Roboto:300,400,700\" rel=\"stylesheet\"> \"\"\" html += f \"\"\" <link rel=\"shortcut icon\" href=\" { redoc_favicon_url } \"> <!-- ReDoc doesn't change outer page styles --> <style> body {{ margin: 0; padding: 0; }} </style> </head> <body> <redoc spec-url=\" { openapi_url } \"></redoc> <script src=\" { redoc_js_url } \"> </script> </body> </html> \"\"\" return HTMLResponse ( html )","title":"get_redoc_html()"},{"location":"openapi/docs/#fastapi.openapi.docs.get_swagger_ui_html","text":"get_swagger_ui_html ( * , openapi_url , title , swagger_js_url = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\" , swagger_css_url = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\" , swagger_favicon_url = \"https://fastapi.tiangolo.com/img/favicon.png\" , oauth2_redirect_url = None , init_oauth = None , swagger_ui_parameters = None ) Source code in fastapi/openapi/docs.py 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 def get_swagger_ui_html ( * , openapi_url : str , title : str , swagger_js_url : str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui-bundle.js\" , swagger_css_url : str = \"https://cdn.jsdelivr.net/npm/swagger-ui-dist@4/swagger-ui.css\" , swagger_favicon_url : str = \"https://fastapi.tiangolo.com/img/favicon.png\" , oauth2_redirect_url : Optional [ str ] = None , init_oauth : Optional [ Dict [ str , Any ]] = None , swagger_ui_parameters : Optional [ Dict [ str , Any ]] = None , ) -> HTMLResponse : current_swagger_ui_parameters = swagger_ui_default_parameters . copy () if swagger_ui_parameters : current_swagger_ui_parameters . update ( swagger_ui_parameters ) html = f \"\"\" <!DOCTYPE html> <html> <head> <link type=\"text/css\" rel=\"stylesheet\" href=\" { swagger_css_url } \"> <link rel=\"shortcut icon\" href=\" { swagger_favicon_url } \"> <title> { title } </title> </head> <body> <div id=\"swagger-ui\"> </div> <script src=\" { swagger_js_url } \"></script> <!-- `SwaggerUIBundle` is now available on the page --> <script> const ui = SwaggerUIBundle( {{ url: ' { openapi_url } ', \"\"\" for key , value in current_swagger_ui_parameters . items (): html += f \" { json . dumps ( key ) } : { json . dumps ( jsonable_encoder ( value )) } , \\n \" if oauth2_redirect_url : html += f \"oauth2RedirectUrl: window.location.origin + ' { oauth2_redirect_url } ',\" html += \"\"\" presets: [ SwaggerUIBundle.presets.apis, SwaggerUIBundle.SwaggerUIStandalonePreset ], })\"\"\" if init_oauth : html += f \"\"\" ui.initOAuth( { json . dumps ( jsonable_encoder ( init_oauth )) } ) \"\"\" html += \"\"\" </script> </body> </html> \"\"\" return HTMLResponse ( html )","title":"get_swagger_ui_html()"},{"location":"openapi/docs/#fastapi.openapi.docs.get_swagger_ui_oauth2_redirect_html","text":"get_swagger_ui_oauth2_redirect_html () Source code in fastapi/openapi/docs.py 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 def get_swagger_ui_oauth2_redirect_html () -> HTMLResponse : html = \"\"\" <!DOCTYPE html> <html lang=\"en-US\"> <body onload=\"run()\"> </body> </html> <script> 'use strict'; function run () { var oauth2 = window.opener.swaggerUIRedirectOauth2; var sentState = oauth2.state; var redirectUrl = oauth2.redirectUrl; var isValid, qp, arr; if (/code|token|error/.test(window.location.hash)) { qp = window.location.hash.substring(1); } else { qp = location.search.substring(1); } arr = qp.split(\"&\") arr.forEach(function (v,i,_arr) { _arr[i] = '\"' + v.replace('=', '\":\"') + '\"';}) qp = qp ? JSON.parse('{' + arr.join() + '}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) } ) : {} isValid = qp.state === sentState if (( oauth2.auth.schema.get(\"flow\") === \"accessCode\"|| oauth2.auth.schema.get(\"flow\") === \"authorizationCode\" ) && !oauth2.auth.code) { if (!isValid) { oauth2.errCb({ authId: oauth2.auth.name, source: \"auth\", level: \"warning\", message: \"Authorization may be unsafe, passed state was changed in server Passed state wasn't returned from auth server\" }); } if (qp.code) { delete oauth2.state; oauth2.auth.code = qp.code; oauth2.callback({auth: oauth2.auth, redirectUrl: redirectUrl}); } else { let oauthErrorMsg if (qp.error) { oauthErrorMsg = \"[\"+qp.error+\"]: \" + (qp.error_description ? qp.error_description+ \". \" : \"no accessCode received from the server. \") + (qp.error_uri ? \"More info: \"+qp.error_uri : \"\"); } oauth2.errCb({ authId: oauth2.auth.name, source: \"auth\", level: \"error\", message: oauthErrorMsg || \"[Authorization failed]: no accessCode received from the server\" }); } } else { oauth2.callback({auth: oauth2.auth, token: qp, isValid: isValid, redirectUrl: redirectUrl}); } window.close(); } </script> \"\"\" return HTMLResponse ( content = html )","title":"get_swagger_ui_oauth2_redirect_html()"},{"location":"openapi/models/","text":"SecurityScheme module-attribute \u00b6 SecurityScheme = Union [ APIKey , HTTPBase , OAuth2 , OpenIdConnect , HTTPBearer ] APIKey \u00b6 Bases: SecurityBase in_ class-attribute \u00b6 in_ : APIKeyIn = Field ( alias = 'in' ) name class-attribute \u00b6 name : str type_ class-attribute \u00b6 type_ = Field ( SecuritySchemeType . apiKey , alias = 'type' ) APIKeyIn \u00b6 Bases: Enum cookie class-attribute \u00b6 cookie = 'cookie' header class-attribute \u00b6 header = 'header' query class-attribute \u00b6 query = 'query' Components \u00b6 Bases: BaseModel callbacks class-attribute \u00b6 callbacks : Optional [ Dict [ str , Union [ Dict [ str , PathItem ], Reference , Any ]] ] = None examples class-attribute \u00b6 examples : Optional [ Dict [ str , Union [ Example , Reference ]] ] = None headers class-attribute \u00b6 headers : Optional [ Dict [ str , Union [ Header , Reference ]] ] = None links class-attribute \u00b6 links : Optional [ Dict [ str , Union [ Link , Reference ]]] = None parameters class-attribute \u00b6 parameters : Optional [ Dict [ str , Union [ Parameter , Reference ]] ] = None requestBodies class-attribute \u00b6 requestBodies : Optional [ Dict [ str , Union [ RequestBody , Reference ]] ] = None responses class-attribute \u00b6 responses : Optional [ Dict [ str , Union [ Response , Reference ]] ] = None schemas class-attribute \u00b6 schemas : Optional [ Dict [ str , Union [ Schema , Reference ]] ] = None securitySchemes class-attribute \u00b6 securitySchemes : Optional [ Dict [ str , Union [ SecurityScheme , Reference ]] ] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' Contact \u00b6 Bases: BaseModel email class-attribute \u00b6 email : Optional [ EmailStr ] = None name class-attribute \u00b6 name : Optional [ str ] = None url class-attribute \u00b6 url : Optional [ AnyUrl ] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' Discriminator \u00b6 Bases: BaseModel mapping class-attribute \u00b6 mapping : Optional [ Dict [ str , str ]] = None propertyName class-attribute \u00b6 propertyName : str EmailStr \u00b6 Bases: str __get_validators__ classmethod \u00b6 __get_validators__ () Source code in fastapi/openapi/models.py 15 16 17 @classmethod def __get_validators__ ( cls ) -> Iterable [ Callable [ ... , Any ]]: yield cls . validate validate classmethod \u00b6 validate ( v ) Source code in fastapi/openapi/models.py 19 20 21 22 23 24 25 @classmethod def validate ( cls , v : Any ) -> str : logger . warning ( \"email-validator not installed, email fields will be treated as str. \\n \" \"To install, run: pip install email-validator\" ) return str ( v ) Encoding \u00b6 Bases: BaseModel allowReserved class-attribute \u00b6 allowReserved : Optional [ bool ] = None contentType class-attribute \u00b6 contentType : Optional [ str ] = None explode class-attribute \u00b6 explode : Optional [ bool ] = None headers class-attribute \u00b6 headers : Optional [ Dict [ str , Union [ \"Header\" , Reference ]] ] = None style class-attribute \u00b6 style : Optional [ str ] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' Example \u00b6 Bases: BaseModel description class-attribute \u00b6 description : Optional [ str ] = None externalValue class-attribute \u00b6 externalValue : Optional [ AnyUrl ] = None summary class-attribute \u00b6 summary : Optional [ str ] = None value class-attribute \u00b6 value : Optional [ Any ] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' ExternalDocumentation \u00b6 Bases: BaseModel description class-attribute \u00b6 description : Optional [ str ] = None url class-attribute \u00b6 url : AnyUrl Config \u00b6 extra class-attribute \u00b6 extra = 'allow' HTTPBase \u00b6 Bases: SecurityBase scheme class-attribute \u00b6 scheme : str type_ class-attribute \u00b6 type_ = Field ( SecuritySchemeType . http , alias = 'type' ) HTTPBearer \u00b6 Bases: HTTPBase bearerFormat class-attribute \u00b6 bearerFormat : Optional [ str ] = None scheme class-attribute \u00b6 scheme = 'bearer' Header \u00b6 Bases: ParameterBase Info \u00b6 Bases: BaseModel contact class-attribute \u00b6 contact : Optional [ Contact ] = None description class-attribute \u00b6 description : Optional [ str ] = None license class-attribute \u00b6 license : Optional [ License ] = None termsOfService class-attribute \u00b6 termsOfService : Optional [ str ] = None title class-attribute \u00b6 title : str version class-attribute \u00b6 version : str Config \u00b6 extra class-attribute \u00b6 extra = 'allow' License \u00b6 Bases: BaseModel name class-attribute \u00b6 name : str url class-attribute \u00b6 url : Optional [ AnyUrl ] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' Link \u00b6 Bases: BaseModel description class-attribute \u00b6 description : Optional [ str ] = None operationId class-attribute \u00b6 operationId : Optional [ str ] = None operationRef class-attribute \u00b6 operationRef : Optional [ str ] = None parameters class-attribute \u00b6 parameters : Optional [ Dict [ str , Union [ Any , str ]]] = None requestBody class-attribute \u00b6 requestBody : Optional [ Union [ Any , str ]] = None server class-attribute \u00b6 server : Optional [ Server ] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' MediaType \u00b6 Bases: BaseModel encoding class-attribute \u00b6 encoding : Optional [ Dict [ str , Encoding ]] = None example class-attribute \u00b6 example : Optional [ Any ] = None examples class-attribute \u00b6 examples : Optional [ Dict [ str , Union [ Example , Reference ]] ] = None schema_ class-attribute \u00b6 schema_ : Optional [ Union [ Schema , Reference ]] = Field ( default = None , alias = \"schema\" ) Config \u00b6 extra class-attribute \u00b6 extra = 'allow' OAuth2 \u00b6 Bases: SecurityBase flows class-attribute \u00b6 flows : OAuthFlows type_ class-attribute \u00b6 type_ = Field ( SecuritySchemeType . oauth2 , alias = 'type' ) OAuthFlow \u00b6 Bases: BaseModel refreshUrl class-attribute \u00b6 refreshUrl : Optional [ str ] = None scopes class-attribute \u00b6 scopes : Dict [ str , str ] = {} Config \u00b6 extra class-attribute \u00b6 extra = 'allow' OAuthFlowAuthorizationCode \u00b6 Bases: OAuthFlow authorizationUrl class-attribute \u00b6 authorizationUrl : str tokenUrl class-attribute \u00b6 tokenUrl : str OAuthFlowClientCredentials \u00b6 Bases: OAuthFlow tokenUrl class-attribute \u00b6 tokenUrl : str OAuthFlowImplicit \u00b6 Bases: OAuthFlow authorizationUrl class-attribute \u00b6 authorizationUrl : str OAuthFlowPassword \u00b6 Bases: OAuthFlow tokenUrl class-attribute \u00b6 tokenUrl : str OAuthFlows \u00b6 Bases: BaseModel authorizationCode class-attribute \u00b6 authorizationCode : Optional [ OAuthFlowAuthorizationCode ] = None clientCredentials class-attribute \u00b6 clientCredentials : Optional [ OAuthFlowClientCredentials ] = None implicit class-attribute \u00b6 implicit : Optional [ OAuthFlowImplicit ] = None password class-attribute \u00b6 password : Optional [ OAuthFlowPassword ] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' OpenAPI \u00b6 Bases: BaseModel components class-attribute \u00b6 components : Optional [ Components ] = None externalDocs class-attribute \u00b6 externalDocs : Optional [ ExternalDocumentation ] = None info class-attribute \u00b6 info : Info openapi class-attribute \u00b6 openapi : str paths class-attribute \u00b6 paths : Dict [ str , Union [ PathItem , Any ]] security class-attribute \u00b6 security : Optional [ List [ Dict [ str , List [ str ]]]] = None servers class-attribute \u00b6 servers : Optional [ List [ Server ]] = None tags class-attribute \u00b6 tags : Optional [ List [ Tag ]] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' OpenIdConnect \u00b6 Bases: SecurityBase openIdConnectUrl class-attribute \u00b6 openIdConnectUrl : str type_ class-attribute \u00b6 type_ = Field ( SecuritySchemeType . openIdConnect , alias = \"type\" ) Operation \u00b6 Bases: BaseModel callbacks class-attribute \u00b6 callbacks : Optional [ Dict [ str , Union [ Dict [ str , \"PathItem\" ], Reference ]] ] = None deprecated class-attribute \u00b6 deprecated : Optional [ bool ] = None description class-attribute \u00b6 description : Optional [ str ] = None externalDocs class-attribute \u00b6 externalDocs : Optional [ ExternalDocumentation ] = None operationId class-attribute \u00b6 operationId : Optional [ str ] = None parameters class-attribute \u00b6 parameters : Optional [ List [ Union [ Parameter , Reference ]] ] = None requestBody class-attribute \u00b6 requestBody : Optional [ Union [ RequestBody , Reference ]] = None responses class-attribute \u00b6 responses : Dict [ str , Union [ Response , Any ]] security class-attribute \u00b6 security : Optional [ List [ Dict [ str , List [ str ]]]] = None servers class-attribute \u00b6 servers : Optional [ List [ Server ]] = None summary class-attribute \u00b6 summary : Optional [ str ] = None tags class-attribute \u00b6 tags : Optional [ List [ str ]] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' Parameter \u00b6 Bases: ParameterBase in_ class-attribute \u00b6 in_ : ParameterInType = Field ( alias = 'in' ) name class-attribute \u00b6 name : str ParameterBase \u00b6 Bases: BaseModel allowReserved class-attribute \u00b6 allowReserved : Optional [ bool ] = None content class-attribute \u00b6 content : Optional [ Dict [ str , MediaType ]] = None deprecated class-attribute \u00b6 deprecated : Optional [ bool ] = None description class-attribute \u00b6 description : Optional [ str ] = None example class-attribute \u00b6 example : Optional [ Any ] = None examples class-attribute \u00b6 examples : Optional [ Dict [ str , Union [ Example , Reference ]] ] = None explode class-attribute \u00b6 explode : Optional [ bool ] = None required class-attribute \u00b6 required : Optional [ bool ] = None schema_ class-attribute \u00b6 schema_ : Optional [ Union [ Schema , Reference ]] = Field ( default = None , alias = \"schema\" ) style class-attribute \u00b6 style : Optional [ str ] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' ParameterInType \u00b6 Bases: Enum cookie class-attribute \u00b6 cookie = 'cookie' header class-attribute \u00b6 header = 'header' path class-attribute \u00b6 path = 'path' query class-attribute \u00b6 query = 'query' PathItem \u00b6 Bases: BaseModel delete class-attribute \u00b6 delete : Optional [ Operation ] = None description class-attribute \u00b6 description : Optional [ str ] = None get class-attribute \u00b6 get : Optional [ Operation ] = None head class-attribute \u00b6 head : Optional [ Operation ] = None options class-attribute \u00b6 options : Optional [ Operation ] = None parameters class-attribute \u00b6 parameters : Optional [ List [ Union [ Parameter , Reference ]] ] = None patch class-attribute \u00b6 patch : Optional [ Operation ] = None post class-attribute \u00b6 post : Optional [ Operation ] = None put class-attribute \u00b6 put : Optional [ Operation ] = None ref class-attribute \u00b6 ref : Optional [ str ] = Field ( default = None , alias = '$ref' ) servers class-attribute \u00b6 servers : Optional [ List [ Server ]] = None summary class-attribute \u00b6 summary : Optional [ str ] = None trace class-attribute \u00b6 trace : Optional [ Operation ] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' Reference \u00b6 Bases: BaseModel ref class-attribute \u00b6 ref : str = Field ( alias = '$ref' ) RequestBody \u00b6 Bases: BaseModel content class-attribute \u00b6 content : Dict [ str , MediaType ] description class-attribute \u00b6 description : Optional [ str ] = None required class-attribute \u00b6 required : Optional [ bool ] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' Response \u00b6 Bases: BaseModel content class-attribute \u00b6 content : Optional [ Dict [ str , MediaType ]] = None description class-attribute \u00b6 description : str headers class-attribute \u00b6 headers : Optional [ Dict [ str , Union [ Header , Reference ]] ] = None links class-attribute \u00b6 links : Optional [ Dict [ str , Union [ Link , Reference ]]] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' Schema \u00b6 Bases: BaseModel additionalProperties class-attribute \u00b6 additionalProperties : Optional [ Union [ \"Schema\" , Reference , bool ] ] = None allOf class-attribute \u00b6 allOf : Optional [ List [ 'Schema' ]] = None anyOf class-attribute \u00b6 anyOf : Optional [ List [ 'Schema' ]] = None default class-attribute \u00b6 default : Optional [ Any ] = None deprecated class-attribute \u00b6 deprecated : Optional [ bool ] = None description class-attribute \u00b6 description : Optional [ str ] = None discriminator class-attribute \u00b6 discriminator : Optional [ Discriminator ] = None enum class-attribute \u00b6 enum : Optional [ List [ Any ]] = None example class-attribute \u00b6 example : Optional [ Any ] = None exclusiveMaximum class-attribute \u00b6 exclusiveMaximum : Optional [ float ] = None exclusiveMinimum class-attribute \u00b6 exclusiveMinimum : Optional [ float ] = None externalDocs class-attribute \u00b6 externalDocs : Optional [ ExternalDocumentation ] = None format class-attribute \u00b6 format : Optional [ str ] = None items class-attribute \u00b6 items : Optional [ Union [ 'Schema' , List [ 'Schema' ]]] = None maxItems class-attribute \u00b6 maxItems : Optional [ int ] = Field ( default = None , gte = 0 ) maxLength class-attribute \u00b6 maxLength : Optional [ int ] = Field ( default = None , gte = 0 ) maxProperties class-attribute \u00b6 maxProperties : Optional [ int ] = Field ( default = None , gte = 0 ) maximum class-attribute \u00b6 maximum : Optional [ float ] = None minItems class-attribute \u00b6 minItems : Optional [ int ] = Field ( default = None , gte = 0 ) minLength class-attribute \u00b6 minLength : Optional [ int ] = Field ( default = None , gte = 0 ) minProperties class-attribute \u00b6 minProperties : Optional [ int ] = Field ( default = None , gte = 0 ) minimum class-attribute \u00b6 minimum : Optional [ float ] = None multipleOf class-attribute \u00b6 multipleOf : Optional [ float ] = None not_ class-attribute \u00b6 not_ : Optional [ 'Schema' ] = Field ( default = None , alias = 'not' ) nullable class-attribute \u00b6 nullable : Optional [ bool ] = None oneOf class-attribute \u00b6 oneOf : Optional [ List [ 'Schema' ]] = None pattern class-attribute \u00b6 pattern : Optional [ str ] = None properties class-attribute \u00b6 properties : Optional [ Dict [ str , 'Schema' ]] = None readOnly class-attribute \u00b6 readOnly : Optional [ bool ] = None ref class-attribute \u00b6 ref : Optional [ str ] = Field ( default = None , alias = '$ref' ) required class-attribute \u00b6 required : Optional [ List [ str ]] = None title class-attribute \u00b6 title : Optional [ str ] = None type class-attribute \u00b6 type : Optional [ str ] = None uniqueItems class-attribute \u00b6 uniqueItems : Optional [ bool ] = None writeOnly class-attribute \u00b6 writeOnly : Optional [ bool ] = None xml class-attribute \u00b6 xml : Optional [ XML ] = None Config \u00b6 extra class-attribute \u00b6 extra : str = 'allow' SecurityBase \u00b6 Bases: BaseModel description class-attribute \u00b6 description : Optional [ str ] = None type_ class-attribute \u00b6 type_ : SecuritySchemeType = Field ( alias = 'type' ) Config \u00b6 extra class-attribute \u00b6 extra = 'allow' SecuritySchemeType \u00b6 Bases: Enum apiKey class-attribute \u00b6 apiKey = 'apiKey' http class-attribute \u00b6 http = 'http' oauth2 class-attribute \u00b6 oauth2 = 'oauth2' openIdConnect class-attribute \u00b6 openIdConnect = 'openIdConnect' Server \u00b6 Bases: BaseModel description class-attribute \u00b6 description : Optional [ str ] = None url class-attribute \u00b6 url : Union [ AnyUrl , str ] variables class-attribute \u00b6 variables : Optional [ Dict [ str , ServerVariable ]] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' ServerVariable \u00b6 Bases: BaseModel default class-attribute \u00b6 default : str description class-attribute \u00b6 description : Optional [ str ] = None enum class-attribute \u00b6 enum : Optional [ List [ str ]] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow' Tag \u00b6 Bases: BaseModel description class-attribute \u00b6 description : Optional [ str ] = None externalDocs class-attribute \u00b6 externalDocs : Optional [ ExternalDocumentation ] = None name class-attribute \u00b6 name : str Config \u00b6 extra class-attribute \u00b6 extra = 'allow' XML \u00b6 Bases: BaseModel attribute class-attribute \u00b6 attribute : Optional [ bool ] = None name class-attribute \u00b6 name : Optional [ str ] = None namespace class-attribute \u00b6 namespace : Optional [ str ] = None prefix class-attribute \u00b6 prefix : Optional [ str ] = None wrapped class-attribute \u00b6 wrapped : Optional [ bool ] = None Config \u00b6 extra class-attribute \u00b6 extra = 'allow'","title":"models"},{"location":"openapi/models/#fastapi.openapi.models.SecurityScheme","text":"SecurityScheme = Union [ APIKey , HTTPBase , OAuth2 , OpenIdConnect , HTTPBearer ]","title":"SecurityScheme"},{"location":"openapi/models/#fastapi.openapi.models.APIKey","text":"Bases: SecurityBase","title":"APIKey"},{"location":"openapi/models/#fastapi.openapi.models.APIKey.in_","text":"in_ : APIKeyIn = Field ( alias = 'in' )","title":"in_"},{"location":"openapi/models/#fastapi.openapi.models.APIKey.name","text":"name : str","title":"name"},{"location":"openapi/models/#fastapi.openapi.models.APIKey.type_","text":"type_ = Field ( SecuritySchemeType . apiKey , alias = 'type' )","title":"type_"},{"location":"openapi/models/#fastapi.openapi.models.APIKeyIn","text":"Bases: Enum","title":"APIKeyIn"},{"location":"openapi/models/#fastapi.openapi.models.APIKeyIn.cookie","text":"cookie = 'cookie'","title":"cookie"},{"location":"openapi/models/#fastapi.openapi.models.APIKeyIn.header","text":"header = 'header'","title":"header"},{"location":"openapi/models/#fastapi.openapi.models.APIKeyIn.query","text":"query = 'query'","title":"query"},{"location":"openapi/models/#fastapi.openapi.models.Components","text":"Bases: BaseModel","title":"Components"},{"location":"openapi/models/#fastapi.openapi.models.Components.callbacks","text":"callbacks : Optional [ Dict [ str , Union [ Dict [ str , PathItem ], Reference , Any ]] ] = None","title":"callbacks"},{"location":"openapi/models/#fastapi.openapi.models.Components.examples","text":"examples : Optional [ Dict [ str , Union [ Example , Reference ]] ] = None","title":"examples"},{"location":"openapi/models/#fastapi.openapi.models.Components.headers","text":"headers : Optional [ Dict [ str , Union [ Header , Reference ]] ] = None","title":"headers"},{"location":"openapi/models/#fastapi.openapi.models.Components.links","text":"links : Optional [ Dict [ str , Union [ Link , Reference ]]] = None","title":"links"},{"location":"openapi/models/#fastapi.openapi.models.Components.parameters","text":"parameters : Optional [ Dict [ str , Union [ Parameter , Reference ]] ] = None","title":"parameters"},{"location":"openapi/models/#fastapi.openapi.models.Components.requestBodies","text":"requestBodies : Optional [ Dict [ str , Union [ RequestBody , Reference ]] ] = None","title":"requestBodies"},{"location":"openapi/models/#fastapi.openapi.models.Components.responses","text":"responses : Optional [ Dict [ str , Union [ Response , Reference ]] ] = None","title":"responses"},{"location":"openapi/models/#fastapi.openapi.models.Components.schemas","text":"schemas : Optional [ Dict [ str , Union [ Schema , Reference ]] ] = None","title":"schemas"},{"location":"openapi/models/#fastapi.openapi.models.Components.securitySchemes","text":"securitySchemes : Optional [ Dict [ str , Union [ SecurityScheme , Reference ]] ] = None","title":"securitySchemes"},{"location":"openapi/models/#fastapi.openapi.models.Components.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.Components.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.Contact","text":"Bases: BaseModel","title":"Contact"},{"location":"openapi/models/#fastapi.openapi.models.Contact.email","text":"email : Optional [ EmailStr ] = None","title":"email"},{"location":"openapi/models/#fastapi.openapi.models.Contact.name","text":"name : Optional [ str ] = None","title":"name"},{"location":"openapi/models/#fastapi.openapi.models.Contact.url","text":"url : Optional [ AnyUrl ] = None","title":"url"},{"location":"openapi/models/#fastapi.openapi.models.Contact.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.Contact.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.Discriminator","text":"Bases: BaseModel","title":"Discriminator"},{"location":"openapi/models/#fastapi.openapi.models.Discriminator.mapping","text":"mapping : Optional [ Dict [ str , str ]] = None","title":"mapping"},{"location":"openapi/models/#fastapi.openapi.models.Discriminator.propertyName","text":"propertyName : str","title":"propertyName"},{"location":"openapi/models/#fastapi.openapi.models.EmailStr","text":"Bases: str","title":"EmailStr"},{"location":"openapi/models/#fastapi.openapi.models.EmailStr.__get_validators__","text":"__get_validators__ () Source code in fastapi/openapi/models.py 15 16 17 @classmethod def __get_validators__ ( cls ) -> Iterable [ Callable [ ... , Any ]]: yield cls . validate","title":"__get_validators__()"},{"location":"openapi/models/#fastapi.openapi.models.EmailStr.validate","text":"validate ( v ) Source code in fastapi/openapi/models.py 19 20 21 22 23 24 25 @classmethod def validate ( cls , v : Any ) -> str : logger . warning ( \"email-validator not installed, email fields will be treated as str. \\n \" \"To install, run: pip install email-validator\" ) return str ( v )","title":"validate()"},{"location":"openapi/models/#fastapi.openapi.models.Encoding","text":"Bases: BaseModel","title":"Encoding"},{"location":"openapi/models/#fastapi.openapi.models.Encoding.allowReserved","text":"allowReserved : Optional [ bool ] = None","title":"allowReserved"},{"location":"openapi/models/#fastapi.openapi.models.Encoding.contentType","text":"contentType : Optional [ str ] = None","title":"contentType"},{"location":"openapi/models/#fastapi.openapi.models.Encoding.explode","text":"explode : Optional [ bool ] = None","title":"explode"},{"location":"openapi/models/#fastapi.openapi.models.Encoding.headers","text":"headers : Optional [ Dict [ str , Union [ \"Header\" , Reference ]] ] = None","title":"headers"},{"location":"openapi/models/#fastapi.openapi.models.Encoding.style","text":"style : Optional [ str ] = None","title":"style"},{"location":"openapi/models/#fastapi.openapi.models.Encoding.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.Encoding.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.Example","text":"Bases: BaseModel","title":"Example"},{"location":"openapi/models/#fastapi.openapi.models.Example.description","text":"description : Optional [ str ] = None","title":"description"},{"location":"openapi/models/#fastapi.openapi.models.Example.externalValue","text":"externalValue : Optional [ AnyUrl ] = None","title":"externalValue"},{"location":"openapi/models/#fastapi.openapi.models.Example.summary","text":"summary : Optional [ str ] = None","title":"summary"},{"location":"openapi/models/#fastapi.openapi.models.Example.value","text":"value : Optional [ Any ] = None","title":"value"},{"location":"openapi/models/#fastapi.openapi.models.Example.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.Example.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.ExternalDocumentation","text":"Bases: BaseModel","title":"ExternalDocumentation"},{"location":"openapi/models/#fastapi.openapi.models.ExternalDocumentation.description","text":"description : Optional [ str ] = None","title":"description"},{"location":"openapi/models/#fastapi.openapi.models.ExternalDocumentation.url","text":"url : AnyUrl","title":"url"},{"location":"openapi/models/#fastapi.openapi.models.ExternalDocumentation.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.ExternalDocumentation.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.HTTPBase","text":"Bases: SecurityBase","title":"HTTPBase"},{"location":"openapi/models/#fastapi.openapi.models.HTTPBase.scheme","text":"scheme : str","title":"scheme"},{"location":"openapi/models/#fastapi.openapi.models.HTTPBase.type_","text":"type_ = Field ( SecuritySchemeType . http , alias = 'type' )","title":"type_"},{"location":"openapi/models/#fastapi.openapi.models.HTTPBearer","text":"Bases: HTTPBase","title":"HTTPBearer"},{"location":"openapi/models/#fastapi.openapi.models.HTTPBearer.bearerFormat","text":"bearerFormat : Optional [ str ] = None","title":"bearerFormat"},{"location":"openapi/models/#fastapi.openapi.models.HTTPBearer.scheme","text":"scheme = 'bearer'","title":"scheme"},{"location":"openapi/models/#fastapi.openapi.models.Header","text":"Bases: ParameterBase","title":"Header"},{"location":"openapi/models/#fastapi.openapi.models.Info","text":"Bases: BaseModel","title":"Info"},{"location":"openapi/models/#fastapi.openapi.models.Info.contact","text":"contact : Optional [ Contact ] = None","title":"contact"},{"location":"openapi/models/#fastapi.openapi.models.Info.description","text":"description : Optional [ str ] = None","title":"description"},{"location":"openapi/models/#fastapi.openapi.models.Info.license","text":"license : Optional [ License ] = None","title":"license"},{"location":"openapi/models/#fastapi.openapi.models.Info.termsOfService","text":"termsOfService : Optional [ str ] = None","title":"termsOfService"},{"location":"openapi/models/#fastapi.openapi.models.Info.title","text":"title : str","title":"title"},{"location":"openapi/models/#fastapi.openapi.models.Info.version","text":"version : str","title":"version"},{"location":"openapi/models/#fastapi.openapi.models.Info.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.Info.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.License","text":"Bases: BaseModel","title":"License"},{"location":"openapi/models/#fastapi.openapi.models.License.name","text":"name : str","title":"name"},{"location":"openapi/models/#fastapi.openapi.models.License.url","text":"url : Optional [ AnyUrl ] = None","title":"url"},{"location":"openapi/models/#fastapi.openapi.models.License.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.License.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.Link","text":"Bases: BaseModel","title":"Link"},{"location":"openapi/models/#fastapi.openapi.models.Link.description","text":"description : Optional [ str ] = None","title":"description"},{"location":"openapi/models/#fastapi.openapi.models.Link.operationId","text":"operationId : Optional [ str ] = None","title":"operationId"},{"location":"openapi/models/#fastapi.openapi.models.Link.operationRef","text":"operationRef : Optional [ str ] = None","title":"operationRef"},{"location":"openapi/models/#fastapi.openapi.models.Link.parameters","text":"parameters : Optional [ Dict [ str , Union [ Any , str ]]] = None","title":"parameters"},{"location":"openapi/models/#fastapi.openapi.models.Link.requestBody","text":"requestBody : Optional [ Union [ Any , str ]] = None","title":"requestBody"},{"location":"openapi/models/#fastapi.openapi.models.Link.server","text":"server : Optional [ Server ] = None","title":"server"},{"location":"openapi/models/#fastapi.openapi.models.Link.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.Link.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.MediaType","text":"Bases: BaseModel","title":"MediaType"},{"location":"openapi/models/#fastapi.openapi.models.MediaType.encoding","text":"encoding : Optional [ Dict [ str , Encoding ]] = None","title":"encoding"},{"location":"openapi/models/#fastapi.openapi.models.MediaType.example","text":"example : Optional [ Any ] = None","title":"example"},{"location":"openapi/models/#fastapi.openapi.models.MediaType.examples","text":"examples : Optional [ Dict [ str , Union [ Example , Reference ]] ] = None","title":"examples"},{"location":"openapi/models/#fastapi.openapi.models.MediaType.schema_","text":"schema_ : Optional [ Union [ Schema , Reference ]] = Field ( default = None , alias = \"schema\" )","title":"schema_"},{"location":"openapi/models/#fastapi.openapi.models.MediaType.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.MediaType.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.OAuth2","text":"Bases: SecurityBase","title":"OAuth2"},{"location":"openapi/models/#fastapi.openapi.models.OAuth2.flows","text":"flows : OAuthFlows","title":"flows"},{"location":"openapi/models/#fastapi.openapi.models.OAuth2.type_","text":"type_ = Field ( SecuritySchemeType . oauth2 , alias = 'type' )","title":"type_"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlow","text":"Bases: BaseModel","title":"OAuthFlow"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlow.refreshUrl","text":"refreshUrl : Optional [ str ] = None","title":"refreshUrl"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlow.scopes","text":"scopes : Dict [ str , str ] = {}","title":"scopes"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlow.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlow.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlowAuthorizationCode","text":"Bases: OAuthFlow","title":"OAuthFlowAuthorizationCode"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlowAuthorizationCode.authorizationUrl","text":"authorizationUrl : str","title":"authorizationUrl"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlowAuthorizationCode.tokenUrl","text":"tokenUrl : str","title":"tokenUrl"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlowClientCredentials","text":"Bases: OAuthFlow","title":"OAuthFlowClientCredentials"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlowClientCredentials.tokenUrl","text":"tokenUrl : str","title":"tokenUrl"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlowImplicit","text":"Bases: OAuthFlow","title":"OAuthFlowImplicit"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlowImplicit.authorizationUrl","text":"authorizationUrl : str","title":"authorizationUrl"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlowPassword","text":"Bases: OAuthFlow","title":"OAuthFlowPassword"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlowPassword.tokenUrl","text":"tokenUrl : str","title":"tokenUrl"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlows","text":"Bases: BaseModel","title":"OAuthFlows"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlows.authorizationCode","text":"authorizationCode : Optional [ OAuthFlowAuthorizationCode ] = None","title":"authorizationCode"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlows.clientCredentials","text":"clientCredentials : Optional [ OAuthFlowClientCredentials ] = None","title":"clientCredentials"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlows.implicit","text":"implicit : Optional [ OAuthFlowImplicit ] = None","title":"implicit"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlows.password","text":"password : Optional [ OAuthFlowPassword ] = None","title":"password"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlows.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.OAuthFlows.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.OpenAPI","text":"Bases: BaseModel","title":"OpenAPI"},{"location":"openapi/models/#fastapi.openapi.models.OpenAPI.components","text":"components : Optional [ Components ] = None","title":"components"},{"location":"openapi/models/#fastapi.openapi.models.OpenAPI.externalDocs","text":"externalDocs : Optional [ ExternalDocumentation ] = None","title":"externalDocs"},{"location":"openapi/models/#fastapi.openapi.models.OpenAPI.info","text":"info : Info","title":"info"},{"location":"openapi/models/#fastapi.openapi.models.OpenAPI.openapi","text":"openapi : str","title":"openapi"},{"location":"openapi/models/#fastapi.openapi.models.OpenAPI.paths","text":"paths : Dict [ str , Union [ PathItem , Any ]]","title":"paths"},{"location":"openapi/models/#fastapi.openapi.models.OpenAPI.security","text":"security : Optional [ List [ Dict [ str , List [ str ]]]] = None","title":"security"},{"location":"openapi/models/#fastapi.openapi.models.OpenAPI.servers","text":"servers : Optional [ List [ Server ]] = None","title":"servers"},{"location":"openapi/models/#fastapi.openapi.models.OpenAPI.tags","text":"tags : Optional [ List [ Tag ]] = None","title":"tags"},{"location":"openapi/models/#fastapi.openapi.models.OpenAPI.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.OpenAPI.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.OpenIdConnect","text":"Bases: SecurityBase","title":"OpenIdConnect"},{"location":"openapi/models/#fastapi.openapi.models.OpenIdConnect.openIdConnectUrl","text":"openIdConnectUrl : str","title":"openIdConnectUrl"},{"location":"openapi/models/#fastapi.openapi.models.OpenIdConnect.type_","text":"type_ = Field ( SecuritySchemeType . openIdConnect , alias = \"type\" )","title":"type_"},{"location":"openapi/models/#fastapi.openapi.models.Operation","text":"Bases: BaseModel","title":"Operation"},{"location":"openapi/models/#fastapi.openapi.models.Operation.callbacks","text":"callbacks : Optional [ Dict [ str , Union [ Dict [ str , \"PathItem\" ], Reference ]] ] = None","title":"callbacks"},{"location":"openapi/models/#fastapi.openapi.models.Operation.deprecated","text":"deprecated : Optional [ bool ] = None","title":"deprecated"},{"location":"openapi/models/#fastapi.openapi.models.Operation.description","text":"description : Optional [ str ] = None","title":"description"},{"location":"openapi/models/#fastapi.openapi.models.Operation.externalDocs","text":"externalDocs : Optional [ ExternalDocumentation ] = None","title":"externalDocs"},{"location":"openapi/models/#fastapi.openapi.models.Operation.operationId","text":"operationId : Optional [ str ] = None","title":"operationId"},{"location":"openapi/models/#fastapi.openapi.models.Operation.parameters","text":"parameters : Optional [ List [ Union [ Parameter , Reference ]] ] = None","title":"parameters"},{"location":"openapi/models/#fastapi.openapi.models.Operation.requestBody","text":"requestBody : Optional [ Union [ RequestBody , Reference ]] = None","title":"requestBody"},{"location":"openapi/models/#fastapi.openapi.models.Operation.responses","text":"responses : Dict [ str , Union [ Response , Any ]]","title":"responses"},{"location":"openapi/models/#fastapi.openapi.models.Operation.security","text":"security : Optional [ List [ Dict [ str , List [ str ]]]] = None","title":"security"},{"location":"openapi/models/#fastapi.openapi.models.Operation.servers","text":"servers : Optional [ List [ Server ]] = None","title":"servers"},{"location":"openapi/models/#fastapi.openapi.models.Operation.summary","text":"summary : Optional [ str ] = None","title":"summary"},{"location":"openapi/models/#fastapi.openapi.models.Operation.tags","text":"tags : Optional [ List [ str ]] = None","title":"tags"},{"location":"openapi/models/#fastapi.openapi.models.Operation.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.Operation.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.Parameter","text":"Bases: ParameterBase","title":"Parameter"},{"location":"openapi/models/#fastapi.openapi.models.Parameter.in_","text":"in_ : ParameterInType = Field ( alias = 'in' )","title":"in_"},{"location":"openapi/models/#fastapi.openapi.models.Parameter.name","text":"name : str","title":"name"},{"location":"openapi/models/#fastapi.openapi.models.ParameterBase","text":"Bases: BaseModel","title":"ParameterBase"},{"location":"openapi/models/#fastapi.openapi.models.ParameterBase.allowReserved","text":"allowReserved : Optional [ bool ] = None","title":"allowReserved"},{"location":"openapi/models/#fastapi.openapi.models.ParameterBase.content","text":"content : Optional [ Dict [ str , MediaType ]] = None","title":"content"},{"location":"openapi/models/#fastapi.openapi.models.ParameterBase.deprecated","text":"deprecated : Optional [ bool ] = None","title":"deprecated"},{"location":"openapi/models/#fastapi.openapi.models.ParameterBase.description","text":"description : Optional [ str ] = None","title":"description"},{"location":"openapi/models/#fastapi.openapi.models.ParameterBase.example","text":"example : Optional [ Any ] = None","title":"example"},{"location":"openapi/models/#fastapi.openapi.models.ParameterBase.examples","text":"examples : Optional [ Dict [ str , Union [ Example , Reference ]] ] = None","title":"examples"},{"location":"openapi/models/#fastapi.openapi.models.ParameterBase.explode","text":"explode : Optional [ bool ] = None","title":"explode"},{"location":"openapi/models/#fastapi.openapi.models.ParameterBase.required","text":"required : Optional [ bool ] = None","title":"required"},{"location":"openapi/models/#fastapi.openapi.models.ParameterBase.schema_","text":"schema_ : Optional [ Union [ Schema , Reference ]] = Field ( default = None , alias = \"schema\" )","title":"schema_"},{"location":"openapi/models/#fastapi.openapi.models.ParameterBase.style","text":"style : Optional [ str ] = None","title":"style"},{"location":"openapi/models/#fastapi.openapi.models.ParameterBase.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.ParameterBase.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.ParameterInType","text":"Bases: Enum","title":"ParameterInType"},{"location":"openapi/models/#fastapi.openapi.models.ParameterInType.cookie","text":"cookie = 'cookie'","title":"cookie"},{"location":"openapi/models/#fastapi.openapi.models.ParameterInType.header","text":"header = 'header'","title":"header"},{"location":"openapi/models/#fastapi.openapi.models.ParameterInType.path","text":"path = 'path'","title":"path"},{"location":"openapi/models/#fastapi.openapi.models.ParameterInType.query","text":"query = 'query'","title":"query"},{"location":"openapi/models/#fastapi.openapi.models.PathItem","text":"Bases: BaseModel","title":"PathItem"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.delete","text":"delete : Optional [ Operation ] = None","title":"delete"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.description","text":"description : Optional [ str ] = None","title":"description"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.get","text":"get : Optional [ Operation ] = None","title":"get"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.head","text":"head : Optional [ Operation ] = None","title":"head"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.options","text":"options : Optional [ Operation ] = None","title":"options"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.parameters","text":"parameters : Optional [ List [ Union [ Parameter , Reference ]] ] = None","title":"parameters"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.patch","text":"patch : Optional [ Operation ] = None","title":"patch"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.post","text":"post : Optional [ Operation ] = None","title":"post"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.put","text":"put : Optional [ Operation ] = None","title":"put"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.ref","text":"ref : Optional [ str ] = Field ( default = None , alias = '$ref' )","title":"ref"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.servers","text":"servers : Optional [ List [ Server ]] = None","title":"servers"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.summary","text":"summary : Optional [ str ] = None","title":"summary"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.trace","text":"trace : Optional [ Operation ] = None","title":"trace"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.PathItem.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.Reference","text":"Bases: BaseModel","title":"Reference"},{"location":"openapi/models/#fastapi.openapi.models.Reference.ref","text":"ref : str = Field ( alias = '$ref' )","title":"ref"},{"location":"openapi/models/#fastapi.openapi.models.RequestBody","text":"Bases: BaseModel","title":"RequestBody"},{"location":"openapi/models/#fastapi.openapi.models.RequestBody.content","text":"content : Dict [ str , MediaType ]","title":"content"},{"location":"openapi/models/#fastapi.openapi.models.RequestBody.description","text":"description : Optional [ str ] = None","title":"description"},{"location":"openapi/models/#fastapi.openapi.models.RequestBody.required","text":"required : Optional [ bool ] = None","title":"required"},{"location":"openapi/models/#fastapi.openapi.models.RequestBody.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.RequestBody.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.Response","text":"Bases: BaseModel","title":"Response"},{"location":"openapi/models/#fastapi.openapi.models.Response.content","text":"content : Optional [ Dict [ str , MediaType ]] = None","title":"content"},{"location":"openapi/models/#fastapi.openapi.models.Response.description","text":"description : str","title":"description"},{"location":"openapi/models/#fastapi.openapi.models.Response.headers","text":"headers : Optional [ Dict [ str , Union [ Header , Reference ]] ] = None","title":"headers"},{"location":"openapi/models/#fastapi.openapi.models.Response.links","text":"links : Optional [ Dict [ str , Union [ Link , Reference ]]] = None","title":"links"},{"location":"openapi/models/#fastapi.openapi.models.Response.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.Response.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.Schema","text":"Bases: BaseModel","title":"Schema"},{"location":"openapi/models/#fastapi.openapi.models.Schema.additionalProperties","text":"additionalProperties : Optional [ Union [ \"Schema\" , Reference , bool ] ] = None","title":"additionalProperties"},{"location":"openapi/models/#fastapi.openapi.models.Schema.allOf","text":"allOf : Optional [ List [ 'Schema' ]] = None","title":"allOf"},{"location":"openapi/models/#fastapi.openapi.models.Schema.anyOf","text":"anyOf : Optional [ List [ 'Schema' ]] = None","title":"anyOf"},{"location":"openapi/models/#fastapi.openapi.models.Schema.default","text":"default : Optional [ Any ] = None","title":"default"},{"location":"openapi/models/#fastapi.openapi.models.Schema.deprecated","text":"deprecated : Optional [ bool ] = None","title":"deprecated"},{"location":"openapi/models/#fastapi.openapi.models.Schema.description","text":"description : Optional [ str ] = None","title":"description"},{"location":"openapi/models/#fastapi.openapi.models.Schema.discriminator","text":"discriminator : Optional [ Discriminator ] = None","title":"discriminator"},{"location":"openapi/models/#fastapi.openapi.models.Schema.enum","text":"enum : Optional [ List [ Any ]] = None","title":"enum"},{"location":"openapi/models/#fastapi.openapi.models.Schema.example","text":"example : Optional [ Any ] = None","title":"example"},{"location":"openapi/models/#fastapi.openapi.models.Schema.exclusiveMaximum","text":"exclusiveMaximum : Optional [ float ] = None","title":"exclusiveMaximum"},{"location":"openapi/models/#fastapi.openapi.models.Schema.exclusiveMinimum","text":"exclusiveMinimum : Optional [ float ] = None","title":"exclusiveMinimum"},{"location":"openapi/models/#fastapi.openapi.models.Schema.externalDocs","text":"externalDocs : Optional [ ExternalDocumentation ] = None","title":"externalDocs"},{"location":"openapi/models/#fastapi.openapi.models.Schema.format","text":"format : Optional [ str ] = None","title":"format"},{"location":"openapi/models/#fastapi.openapi.models.Schema.items","text":"items : Optional [ Union [ 'Schema' , List [ 'Schema' ]]] = None","title":"items"},{"location":"openapi/models/#fastapi.openapi.models.Schema.maxItems","text":"maxItems : Optional [ int ] = Field ( default = None , gte = 0 )","title":"maxItems"},{"location":"openapi/models/#fastapi.openapi.models.Schema.maxLength","text":"maxLength : Optional [ int ] = Field ( default = None , gte = 0 )","title":"maxLength"},{"location":"openapi/models/#fastapi.openapi.models.Schema.maxProperties","text":"maxProperties : Optional [ int ] = Field ( default = None , gte = 0 )","title":"maxProperties"},{"location":"openapi/models/#fastapi.openapi.models.Schema.maximum","text":"maximum : Optional [ float ] = None","title":"maximum"},{"location":"openapi/models/#fastapi.openapi.models.Schema.minItems","text":"minItems : Optional [ int ] = Field ( default = None , gte = 0 )","title":"minItems"},{"location":"openapi/models/#fastapi.openapi.models.Schema.minLength","text":"minLength : Optional [ int ] = Field ( default = None , gte = 0 )","title":"minLength"},{"location":"openapi/models/#fastapi.openapi.models.Schema.minProperties","text":"minProperties : Optional [ int ] = Field ( default = None , gte = 0 )","title":"minProperties"},{"location":"openapi/models/#fastapi.openapi.models.Schema.minimum","text":"minimum : Optional [ float ] = None","title":"minimum"},{"location":"openapi/models/#fastapi.openapi.models.Schema.multipleOf","text":"multipleOf : Optional [ float ] = None","title":"multipleOf"},{"location":"openapi/models/#fastapi.openapi.models.Schema.not_","text":"not_ : Optional [ 'Schema' ] = Field ( default = None , alias = 'not' )","title":"not_"},{"location":"openapi/models/#fastapi.openapi.models.Schema.nullable","text":"nullable : Optional [ bool ] = None","title":"nullable"},{"location":"openapi/models/#fastapi.openapi.models.Schema.oneOf","text":"oneOf : Optional [ List [ 'Schema' ]] = None","title":"oneOf"},{"location":"openapi/models/#fastapi.openapi.models.Schema.pattern","text":"pattern : Optional [ str ] = None","title":"pattern"},{"location":"openapi/models/#fastapi.openapi.models.Schema.properties","text":"properties : Optional [ Dict [ str , 'Schema' ]] = None","title":"properties"},{"location":"openapi/models/#fastapi.openapi.models.Schema.readOnly","text":"readOnly : Optional [ bool ] = None","title":"readOnly"},{"location":"openapi/models/#fastapi.openapi.models.Schema.ref","text":"ref : Optional [ str ] = Field ( default = None , alias = '$ref' )","title":"ref"},{"location":"openapi/models/#fastapi.openapi.models.Schema.required","text":"required : Optional [ List [ str ]] = None","title":"required"},{"location":"openapi/models/#fastapi.openapi.models.Schema.title","text":"title : Optional [ str ] = None","title":"title"},{"location":"openapi/models/#fastapi.openapi.models.Schema.type","text":"type : Optional [ str ] = None","title":"type"},{"location":"openapi/models/#fastapi.openapi.models.Schema.uniqueItems","text":"uniqueItems : Optional [ bool ] = None","title":"uniqueItems"},{"location":"openapi/models/#fastapi.openapi.models.Schema.writeOnly","text":"writeOnly : Optional [ bool ] = None","title":"writeOnly"},{"location":"openapi/models/#fastapi.openapi.models.Schema.xml","text":"xml : Optional [ XML ] = None","title":"xml"},{"location":"openapi/models/#fastapi.openapi.models.Schema.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.Schema.Config.extra","text":"extra : str = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.SecurityBase","text":"Bases: BaseModel","title":"SecurityBase"},{"location":"openapi/models/#fastapi.openapi.models.SecurityBase.description","text":"description : Optional [ str ] = None","title":"description"},{"location":"openapi/models/#fastapi.openapi.models.SecurityBase.type_","text":"type_ : SecuritySchemeType = Field ( alias = 'type' )","title":"type_"},{"location":"openapi/models/#fastapi.openapi.models.SecurityBase.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.SecurityBase.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.SecuritySchemeType","text":"Bases: Enum","title":"SecuritySchemeType"},{"location":"openapi/models/#fastapi.openapi.models.SecuritySchemeType.apiKey","text":"apiKey = 'apiKey'","title":"apiKey"},{"location":"openapi/models/#fastapi.openapi.models.SecuritySchemeType.http","text":"http = 'http'","title":"http"},{"location":"openapi/models/#fastapi.openapi.models.SecuritySchemeType.oauth2","text":"oauth2 = 'oauth2'","title":"oauth2"},{"location":"openapi/models/#fastapi.openapi.models.SecuritySchemeType.openIdConnect","text":"openIdConnect = 'openIdConnect'","title":"openIdConnect"},{"location":"openapi/models/#fastapi.openapi.models.Server","text":"Bases: BaseModel","title":"Server"},{"location":"openapi/models/#fastapi.openapi.models.Server.description","text":"description : Optional [ str ] = None","title":"description"},{"location":"openapi/models/#fastapi.openapi.models.Server.url","text":"url : Union [ AnyUrl , str ]","title":"url"},{"location":"openapi/models/#fastapi.openapi.models.Server.variables","text":"variables : Optional [ Dict [ str , ServerVariable ]] = None","title":"variables"},{"location":"openapi/models/#fastapi.openapi.models.Server.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.Server.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.ServerVariable","text":"Bases: BaseModel","title":"ServerVariable"},{"location":"openapi/models/#fastapi.openapi.models.ServerVariable.default","text":"default : str","title":"default"},{"location":"openapi/models/#fastapi.openapi.models.ServerVariable.description","text":"description : Optional [ str ] = None","title":"description"},{"location":"openapi/models/#fastapi.openapi.models.ServerVariable.enum","text":"enum : Optional [ List [ str ]] = None","title":"enum"},{"location":"openapi/models/#fastapi.openapi.models.ServerVariable.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.ServerVariable.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.Tag","text":"Bases: BaseModel","title":"Tag"},{"location":"openapi/models/#fastapi.openapi.models.Tag.description","text":"description : Optional [ str ] = None","title":"description"},{"location":"openapi/models/#fastapi.openapi.models.Tag.externalDocs","text":"externalDocs : Optional [ ExternalDocumentation ] = None","title":"externalDocs"},{"location":"openapi/models/#fastapi.openapi.models.Tag.name","text":"name : str","title":"name"},{"location":"openapi/models/#fastapi.openapi.models.Tag.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.Tag.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/models/#fastapi.openapi.models.XML","text":"Bases: BaseModel","title":"XML"},{"location":"openapi/models/#fastapi.openapi.models.XML.attribute","text":"attribute : Optional [ bool ] = None","title":"attribute"},{"location":"openapi/models/#fastapi.openapi.models.XML.name","text":"name : Optional [ str ] = None","title":"name"},{"location":"openapi/models/#fastapi.openapi.models.XML.namespace","text":"namespace : Optional [ str ] = None","title":"namespace"},{"location":"openapi/models/#fastapi.openapi.models.XML.prefix","text":"prefix : Optional [ str ] = None","title":"prefix"},{"location":"openapi/models/#fastapi.openapi.models.XML.wrapped","text":"wrapped : Optional [ bool ] = None","title":"wrapped"},{"location":"openapi/models/#fastapi.openapi.models.XML.Config","text":"","title":"Config"},{"location":"openapi/models/#fastapi.openapi.models.XML.Config.extra","text":"extra = 'allow'","title":"extra"},{"location":"openapi/utils/","text":"status_code_ranges module-attribute \u00b6 status_code_ranges : Dict [ str , str ] = { \"1XX\" : \"Information\" , \"2XX\" : \"Success\" , \"3XX\" : \"Redirection\" , \"4XX\" : \"Client Error\" , \"5XX\" : \"Server Error\" , \"DEFAULT\" : \"Default Response\" , } validation_error_definition module-attribute \u00b6 validation_error_definition = { \"title\" : \"ValidationError\" , \"type\" : \"object\" , \"properties\" : { \"loc\" : { \"title\" : \"Location\" , \"type\" : \"array\" , \"items\" : { \"anyOf\" : [ { \"type\" : \"string\" }, { \"type\" : \"integer\" }, ] }, }, \"msg\" : { \"title\" : \"Message\" , \"type\" : \"string\" }, \"type\" : { \"title\" : \"Error Type\" , \"type\" : \"string\" }, }, \"required\" : [ \"loc\" , \"msg\" , \"type\" ], } validation_error_response_definition module-attribute \u00b6 validation_error_response_definition = { \"title\" : \"HTTPValidationError\" , \"type\" : \"object\" , \"properties\" : { \"detail\" : { \"title\" : \"Detail\" , \"type\" : \"array\" , \"items\" : { \"$ref\" : REF_PREFIX + \"ValidationError\" }, } }, } generate_operation_id \u00b6 generate_operation_id ( * , route , method ) Source code in fastapi/openapi/utils.py 148 149 150 151 152 153 154 155 156 157 158 159 160 def generate_operation_id ( * , route : routing . APIRoute , method : str ) -> str : # pragma: nocover warnings . warn ( \"fastapi.openapi.utils.generate_operation_id() was deprecated, \" \"it is not used internally, and will be removed soon\" , DeprecationWarning , stacklevel = 2 , ) if route . operation_id : return route . operation_id path : str = route . path_format return generate_operation_id_for_path ( name = route . name , path = path , method = method ) generate_operation_summary \u00b6 generate_operation_summary ( * , route , method ) Source code in fastapi/openapi/utils.py 163 164 165 166 def generate_operation_summary ( * , route : routing . APIRoute , method : str ) -> str : if route . summary : return route . summary return route . name . replace ( \"_\" , \" \" ) . title () get_flat_models_from_routes \u00b6 get_flat_models_from_routes ( routes ) Source code in fastapi/openapi/utils.py 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 def get_flat_models_from_routes ( routes : Sequence [ BaseRoute ], ) -> Set [ Union [ Type [ BaseModel ], Type [ Enum ]]]: body_fields_from_routes : List [ ModelField ] = [] responses_from_routes : List [ ModelField ] = [] request_fields_from_routes : List [ ModelField ] = [] callback_flat_models : Set [ Union [ Type [ BaseModel ], Type [ Enum ]]] = set () for route in routes : if getattr ( route , \"include_in_schema\" , None ) and isinstance ( route , routing . APIRoute ): if route . body_field : assert isinstance ( route . body_field , ModelField ), \"A request body must be a Pydantic Field\" body_fields_from_routes . append ( route . body_field ) if route . response_field : responses_from_routes . append ( route . response_field ) if route . response_fields : responses_from_routes . extend ( route . response_fields . values ()) if route . callbacks : callback_flat_models |= get_flat_models_from_routes ( route . callbacks ) params = get_flat_params ( route . dependant ) request_fields_from_routes . extend ( params ) flat_models = callback_flat_models | get_flat_models_from_fields ( body_fields_from_routes + responses_from_routes + request_fields_from_routes , known_models = set (), ) return flat_models get_openapi \u00b6 get_openapi ( * , title , version , openapi_version = \"3.0.2\" , description = None , routes , tags = None , servers = None , terms_of_service = None , contact = None , license_info = None ) Source code in fastapi/openapi/utils.py 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 def get_openapi ( * , title : str , version : str , openapi_version : str = \"3.0.2\" , description : Optional [ str ] = None , routes : Sequence [ BaseRoute ], tags : Optional [ List [ Dict [ str , Any ]]] = None , servers : Optional [ List [ Dict [ str , Union [ str , Any ]]]] = None , terms_of_service : Optional [ str ] = None , contact : Optional [ Dict [ str , Union [ str , Any ]]] = None , license_info : Optional [ Dict [ str , Union [ str , Any ]]] = None , ) -> Dict [ str , Any ]: info : Dict [ str , Any ] = { \"title\" : title , \"version\" : version } if description : info [ \"description\" ] = description if terms_of_service : info [ \"termsOfService\" ] = terms_of_service if contact : info [ \"contact\" ] = contact if license_info : info [ \"license\" ] = license_info output : Dict [ str , Any ] = { \"openapi\" : openapi_version , \"info\" : info } if servers : output [ \"servers\" ] = servers components : Dict [ str , Dict [ str , Any ]] = {} paths : Dict [ str , Dict [ str , Any ]] = {} operation_ids : Set [ str ] = set () flat_models = get_flat_models_from_routes ( routes ) model_name_map = get_model_name_map ( flat_models ) definitions = get_model_definitions ( flat_models = flat_models , model_name_map = model_name_map ) for route in routes : if isinstance ( route , routing . APIRoute ): result = get_openapi_path ( route = route , model_name_map = model_name_map , operation_ids = operation_ids ) if result : path , security_schemes , path_definitions = result if path : paths . setdefault ( route . path_format , {}) . update ( path ) if security_schemes : components . setdefault ( \"securitySchemes\" , {}) . update ( security_schemes ) if path_definitions : definitions . update ( path_definitions ) if definitions : components [ \"schemas\" ] = { k : definitions [ k ] for k in sorted ( definitions )} if components : output [ \"components\" ] = components output [ \"paths\" ] = paths if tags : output [ \"tags\" ] = tags return jsonable_encoder ( OpenAPI ( ** output ), by_alias = True , exclude_none = True ) # type: ignore get_openapi_operation_metadata \u00b6 get_openapi_operation_metadata ( * , route , method , operation_ids ) Source code in fastapi/openapi/utils.py 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 def get_openapi_operation_metadata ( * , route : routing . APIRoute , method : str , operation_ids : Set [ str ] ) -> Dict [ str , Any ]: operation : Dict [ str , Any ] = {} if route . tags : operation [ \"tags\" ] = route . tags operation [ \"summary\" ] = generate_operation_summary ( route = route , method = method ) if route . description : operation [ \"description\" ] = route . description operation_id = route . operation_id or route . unique_id if operation_id in operation_ids : message = ( f \"Duplicate Operation ID { operation_id } for function \" + f \" { route . endpoint . __name__ } \" ) file_name = getattr ( route . endpoint , \"__globals__\" , {}) . get ( \"__file__\" ) if file_name : message += f \" at { file_name } \" warnings . warn ( message ) operation_ids . add ( operation_id ) operation [ \"operationId\" ] = operation_id if route . deprecated : operation [ \"deprecated\" ] = route . deprecated return operation get_openapi_operation_parameters \u00b6 get_openapi_operation_parameters ( * , all_route_params , model_name_map ) Source code in fastapi/openapi/utils.py 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 def get_openapi_operation_parameters ( * , all_route_params : Sequence [ ModelField ], model_name_map : Dict [ Union [ Type [ BaseModel ], Type [ Enum ]], str ], ) -> List [ Dict [ str , Any ]]: parameters = [] for param in all_route_params : field_info = param . field_info field_info = cast ( Param , field_info ) if not field_info . include_in_schema : continue parameter = { \"name\" : param . alias , \"in\" : field_info . in_ . value , \"required\" : param . required , \"schema\" : field_schema ( param , model_name_map = model_name_map , ref_prefix = REF_PREFIX )[ 0 ], } if field_info . description : parameter [ \"description\" ] = field_info . description if field_info . examples : parameter [ \"examples\" ] = jsonable_encoder ( field_info . examples ) elif field_info . example != Undefined : parameter [ \"example\" ] = jsonable_encoder ( field_info . example ) if field_info . deprecated : parameter [ \"deprecated\" ] = field_info . deprecated parameters . append ( parameter ) return parameters get_openapi_operation_request_body \u00b6 get_openapi_operation_request_body ( * , body_field , model_name_map ) Source code in fastapi/openapi/utils.py 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 def get_openapi_operation_request_body ( * , body_field : Optional [ ModelField ], model_name_map : Dict [ Union [ Type [ BaseModel ], Type [ Enum ]], str ], ) -> Optional [ Dict [ str , Any ]]: if not body_field : return None assert isinstance ( body_field , ModelField ) body_schema , _ , _ = field_schema ( body_field , model_name_map = model_name_map , ref_prefix = REF_PREFIX ) field_info = cast ( Body , body_field . field_info ) request_media_type = field_info . media_type required = body_field . required request_body_oai : Dict [ str , Any ] = {} if required : request_body_oai [ \"required\" ] = required request_media_content : Dict [ str , Any ] = { \"schema\" : body_schema } if field_info . examples : request_media_content [ \"examples\" ] = jsonable_encoder ( field_info . examples ) elif field_info . example != Undefined : request_media_content [ \"example\" ] = jsonable_encoder ( field_info . example ) request_body_oai [ \"content\" ] = { request_media_type : request_media_content } return request_body_oai get_openapi_path \u00b6 get_openapi_path ( * , route , model_name_map , operation_ids ) Source code in fastapi/openapi/utils.py 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 def get_openapi_path ( * , route : routing . APIRoute , model_name_map : Dict [ type , str ], operation_ids : Set [ str ] ) -> Tuple [ Dict [ str , Any ], Dict [ str , Any ], Dict [ str , Any ]]: path = {} security_schemes : Dict [ str , Any ] = {} definitions : Dict [ str , Any ] = {} assert route . methods is not None , \"Methods must be a list\" if isinstance ( route . response_class , DefaultPlaceholder ): current_response_class : Type [ Response ] = route . response_class . value else : current_response_class = route . response_class assert current_response_class , \"A response class is needed to generate OpenAPI\" route_response_media_type : Optional [ str ] = current_response_class . media_type if route . include_in_schema : for method in route . methods : operation = get_openapi_operation_metadata ( route = route , method = method , operation_ids = operation_ids ) parameters : List [ Dict [ str , Any ]] = [] flat_dependant = get_flat_dependant ( route . dependant , skip_repeats = True ) security_definitions , operation_security = get_openapi_security_definitions ( flat_dependant = flat_dependant ) if operation_security : operation . setdefault ( \"security\" , []) . extend ( operation_security ) if security_definitions : security_schemes . update ( security_definitions ) all_route_params = get_flat_params ( route . dependant ) operation_parameters = get_openapi_operation_parameters ( all_route_params = all_route_params , model_name_map = model_name_map ) parameters . extend ( operation_parameters ) if parameters : operation [ \"parameters\" ] = list ( { param [ \"name\" ]: param for param in parameters } . values () ) if method in METHODS_WITH_BODY : request_body_oai = get_openapi_operation_request_body ( body_field = route . body_field , model_name_map = model_name_map ) if request_body_oai : operation [ \"requestBody\" ] = request_body_oai if route . callbacks : callbacks = {} for callback in route . callbacks : if isinstance ( callback , routing . APIRoute ): ( cb_path , cb_security_schemes , cb_definitions , ) = get_openapi_path ( route = callback , model_name_map = model_name_map , operation_ids = operation_ids , ) callbacks [ callback . name ] = { callback . path : cb_path } operation [ \"callbacks\" ] = callbacks if route . status_code is not None : status_code = str ( route . status_code ) else : # It would probably make more sense for all response classes to have an # explicit default status_code, and to extract it from them, instead of # doing this inspection tricks, that would probably be in the future # TODO: probably make status_code a default class attribute for all # responses in Starlette response_signature = inspect . signature ( current_response_class . __init__ ) status_code_param = response_signature . parameters . get ( \"status_code\" ) if status_code_param is not None : if isinstance ( status_code_param . default , int ): status_code = str ( status_code_param . default ) operation . setdefault ( \"responses\" , {}) . setdefault ( status_code , {})[ \"description\" ] = route . response_description if ( route_response_media_type and route . status_code not in STATUS_CODES_WITH_NO_BODY ): response_schema = { \"type\" : \"string\" } if lenient_issubclass ( current_response_class , JSONResponse ): if route . response_field : response_schema , _ , _ = field_schema ( route . response_field , model_name_map = model_name_map , ref_prefix = REF_PREFIX , ) else : response_schema = {} operation . setdefault ( \"responses\" , {}) . setdefault ( status_code , {} ) . setdefault ( \"content\" , {}) . setdefault ( route_response_media_type , {})[ \"schema\" ] = response_schema if route . responses : operation_responses = operation . setdefault ( \"responses\" , {}) for ( additional_status_code , additional_response , ) in route . responses . items (): process_response = additional_response . copy () process_response . pop ( \"model\" , None ) status_code_key = str ( additional_status_code ) . upper () if status_code_key == \"DEFAULT\" : status_code_key = \"default\" openapi_response = operation_responses . setdefault ( status_code_key , {} ) assert isinstance ( process_response , dict ), \"An additional response must be a dict\" field = route . response_fields . get ( additional_status_code ) additional_field_schema : Optional [ Dict [ str , Any ]] = None if field : additional_field_schema , _ , _ = field_schema ( field , model_name_map = model_name_map , ref_prefix = REF_PREFIX ) media_type = route_response_media_type or \"application/json\" additional_schema = ( process_response . setdefault ( \"content\" , {}) . setdefault ( media_type , {}) . setdefault ( \"schema\" , {}) ) deep_dict_update ( additional_schema , additional_field_schema ) status_text : Optional [ str ] = status_code_ranges . get ( str ( additional_status_code ) . upper () ) or http . client . responses . get ( int ( additional_status_code )) description = ( process_response . get ( \"description\" ) or openapi_response . get ( \"description\" ) or status_text or \"Additional Response\" ) deep_dict_update ( openapi_response , process_response ) openapi_response [ \"description\" ] = description http422 = str ( HTTP_422_UNPROCESSABLE_ENTITY ) if ( all_route_params or route . body_field ) and not any ( [ status in operation [ \"responses\" ] for status in [ http422 , \"4XX\" , \"default\" ] ] ): operation [ \"responses\" ][ http422 ] = { \"description\" : \"Validation Error\" , \"content\" : { \"application/json\" : { \"schema\" : { \"$ref\" : REF_PREFIX + \"HTTPValidationError\" } } }, } if \"ValidationError\" not in definitions : definitions . update ( { \"ValidationError\" : validation_error_definition , \"HTTPValidationError\" : validation_error_response_definition , } ) if route . openapi_extra : deep_dict_update ( operation , route . openapi_extra ) path [ method . lower ()] = operation return path , security_schemes , definitions get_openapi_security_definitions \u00b6 get_openapi_security_definitions ( flat_dependant ) Source code in fastapi/openapi/utils.py 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 def get_openapi_security_definitions ( flat_dependant : Dependant , ) -> Tuple [ Dict [ str , Any ], List [ Dict [ str , Any ]]]: security_definitions = {} operation_security = [] for security_requirement in flat_dependant . security_requirements : security_definition = jsonable_encoder ( security_requirement . security_scheme . model , by_alias = True , exclude_none = True , ) security_name = security_requirement . security_scheme . scheme_name security_definitions [ security_name ] = security_definition operation_security . append ({ security_name : security_requirement . scopes }) return security_definitions , operation_security","title":"utils"},{"location":"openapi/utils/#fastapi.openapi.utils.status_code_ranges","text":"status_code_ranges : Dict [ str , str ] = { \"1XX\" : \"Information\" , \"2XX\" : \"Success\" , \"3XX\" : \"Redirection\" , \"4XX\" : \"Client Error\" , \"5XX\" : \"Server Error\" , \"DEFAULT\" : \"Default Response\" , }","title":"status_code_ranges"},{"location":"openapi/utils/#fastapi.openapi.utils.validation_error_definition","text":"validation_error_definition = { \"title\" : \"ValidationError\" , \"type\" : \"object\" , \"properties\" : { \"loc\" : { \"title\" : \"Location\" , \"type\" : \"array\" , \"items\" : { \"anyOf\" : [ { \"type\" : \"string\" }, { \"type\" : \"integer\" }, ] }, }, \"msg\" : { \"title\" : \"Message\" , \"type\" : \"string\" }, \"type\" : { \"title\" : \"Error Type\" , \"type\" : \"string\" }, }, \"required\" : [ \"loc\" , \"msg\" , \"type\" ], }","title":"validation_error_definition"},{"location":"openapi/utils/#fastapi.openapi.utils.validation_error_response_definition","text":"validation_error_response_definition = { \"title\" : \"HTTPValidationError\" , \"type\" : \"object\" , \"properties\" : { \"detail\" : { \"title\" : \"Detail\" , \"type\" : \"array\" , \"items\" : { \"$ref\" : REF_PREFIX + \"ValidationError\" }, } }, }","title":"validation_error_response_definition"},{"location":"openapi/utils/#fastapi.openapi.utils.generate_operation_id","text":"generate_operation_id ( * , route , method ) Source code in fastapi/openapi/utils.py 148 149 150 151 152 153 154 155 156 157 158 159 160 def generate_operation_id ( * , route : routing . APIRoute , method : str ) -> str : # pragma: nocover warnings . warn ( \"fastapi.openapi.utils.generate_operation_id() was deprecated, \" \"it is not used internally, and will be removed soon\" , DeprecationWarning , stacklevel = 2 , ) if route . operation_id : return route . operation_id path : str = route . path_format return generate_operation_id_for_path ( name = route . name , path = path , method = method )","title":"generate_operation_id()"},{"location":"openapi/utils/#fastapi.openapi.utils.generate_operation_summary","text":"generate_operation_summary ( * , route , method ) Source code in fastapi/openapi/utils.py 163 164 165 166 def generate_operation_summary ( * , route : routing . APIRoute , method : str ) -> str : if route . summary : return route . summary return route . name . replace ( \"_\" , \" \" ) . title ()","title":"generate_operation_summary()"},{"location":"openapi/utils/#fastapi.openapi.utils.get_flat_models_from_routes","text":"get_flat_models_from_routes ( routes ) Source code in fastapi/openapi/utils.py 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 def get_flat_models_from_routes ( routes : Sequence [ BaseRoute ], ) -> Set [ Union [ Type [ BaseModel ], Type [ Enum ]]]: body_fields_from_routes : List [ ModelField ] = [] responses_from_routes : List [ ModelField ] = [] request_fields_from_routes : List [ ModelField ] = [] callback_flat_models : Set [ Union [ Type [ BaseModel ], Type [ Enum ]]] = set () for route in routes : if getattr ( route , \"include_in_schema\" , None ) and isinstance ( route , routing . APIRoute ): if route . body_field : assert isinstance ( route . body_field , ModelField ), \"A request body must be a Pydantic Field\" body_fields_from_routes . append ( route . body_field ) if route . response_field : responses_from_routes . append ( route . response_field ) if route . response_fields : responses_from_routes . extend ( route . response_fields . values ()) if route . callbacks : callback_flat_models |= get_flat_models_from_routes ( route . callbacks ) params = get_flat_params ( route . dependant ) request_fields_from_routes . extend ( params ) flat_models = callback_flat_models | get_flat_models_from_fields ( body_fields_from_routes + responses_from_routes + request_fields_from_routes , known_models = set (), ) return flat_models","title":"get_flat_models_from_routes()"},{"location":"openapi/utils/#fastapi.openapi.utils.get_openapi","text":"get_openapi ( * , title , version , openapi_version = \"3.0.2\" , description = None , routes , tags = None , servers = None , terms_of_service = None , contact = None , license_info = None ) Source code in fastapi/openapi/utils.py 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 def get_openapi ( * , title : str , version : str , openapi_version : str = \"3.0.2\" , description : Optional [ str ] = None , routes : Sequence [ BaseRoute ], tags : Optional [ List [ Dict [ str , Any ]]] = None , servers : Optional [ List [ Dict [ str , Union [ str , Any ]]]] = None , terms_of_service : Optional [ str ] = None , contact : Optional [ Dict [ str , Union [ str , Any ]]] = None , license_info : Optional [ Dict [ str , Union [ str , Any ]]] = None , ) -> Dict [ str , Any ]: info : Dict [ str , Any ] = { \"title\" : title , \"version\" : version } if description : info [ \"description\" ] = description if terms_of_service : info [ \"termsOfService\" ] = terms_of_service if contact : info [ \"contact\" ] = contact if license_info : info [ \"license\" ] = license_info output : Dict [ str , Any ] = { \"openapi\" : openapi_version , \"info\" : info } if servers : output [ \"servers\" ] = servers components : Dict [ str , Dict [ str , Any ]] = {} paths : Dict [ str , Dict [ str , Any ]] = {} operation_ids : Set [ str ] = set () flat_models = get_flat_models_from_routes ( routes ) model_name_map = get_model_name_map ( flat_models ) definitions = get_model_definitions ( flat_models = flat_models , model_name_map = model_name_map ) for route in routes : if isinstance ( route , routing . APIRoute ): result = get_openapi_path ( route = route , model_name_map = model_name_map , operation_ids = operation_ids ) if result : path , security_schemes , path_definitions = result if path : paths . setdefault ( route . path_format , {}) . update ( path ) if security_schemes : components . setdefault ( \"securitySchemes\" , {}) . update ( security_schemes ) if path_definitions : definitions . update ( path_definitions ) if definitions : components [ \"schemas\" ] = { k : definitions [ k ] for k in sorted ( definitions )} if components : output [ \"components\" ] = components output [ \"paths\" ] = paths if tags : output [ \"tags\" ] = tags return jsonable_encoder ( OpenAPI ( ** output ), by_alias = True , exclude_none = True ) # type: ignore","title":"get_openapi()"},{"location":"openapi/utils/#fastapi.openapi.utils.get_openapi_operation_metadata","text":"get_openapi_operation_metadata ( * , route , method , operation_ids ) Source code in fastapi/openapi/utils.py 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 def get_openapi_operation_metadata ( * , route : routing . APIRoute , method : str , operation_ids : Set [ str ] ) -> Dict [ str , Any ]: operation : Dict [ str , Any ] = {} if route . tags : operation [ \"tags\" ] = route . tags operation [ \"summary\" ] = generate_operation_summary ( route = route , method = method ) if route . description : operation [ \"description\" ] = route . description operation_id = route . operation_id or route . unique_id if operation_id in operation_ids : message = ( f \"Duplicate Operation ID { operation_id } for function \" + f \" { route . endpoint . __name__ } \" ) file_name = getattr ( route . endpoint , \"__globals__\" , {}) . get ( \"__file__\" ) if file_name : message += f \" at { file_name } \" warnings . warn ( message ) operation_ids . add ( operation_id ) operation [ \"operationId\" ] = operation_id if route . deprecated : operation [ \"deprecated\" ] = route . deprecated return operation","title":"get_openapi_operation_metadata()"},{"location":"openapi/utils/#fastapi.openapi.utils.get_openapi_operation_parameters","text":"get_openapi_operation_parameters ( * , all_route_params , model_name_map ) Source code in fastapi/openapi/utils.py 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 def get_openapi_operation_parameters ( * , all_route_params : Sequence [ ModelField ], model_name_map : Dict [ Union [ Type [ BaseModel ], Type [ Enum ]], str ], ) -> List [ Dict [ str , Any ]]: parameters = [] for param in all_route_params : field_info = param . field_info field_info = cast ( Param , field_info ) if not field_info . include_in_schema : continue parameter = { \"name\" : param . alias , \"in\" : field_info . in_ . value , \"required\" : param . required , \"schema\" : field_schema ( param , model_name_map = model_name_map , ref_prefix = REF_PREFIX )[ 0 ], } if field_info . description : parameter [ \"description\" ] = field_info . description if field_info . examples : parameter [ \"examples\" ] = jsonable_encoder ( field_info . examples ) elif field_info . example != Undefined : parameter [ \"example\" ] = jsonable_encoder ( field_info . example ) if field_info . deprecated : parameter [ \"deprecated\" ] = field_info . deprecated parameters . append ( parameter ) return parameters","title":"get_openapi_operation_parameters()"},{"location":"openapi/utils/#fastapi.openapi.utils.get_openapi_operation_request_body","text":"get_openapi_operation_request_body ( * , body_field , model_name_map ) Source code in fastapi/openapi/utils.py 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 def get_openapi_operation_request_body ( * , body_field : Optional [ ModelField ], model_name_map : Dict [ Union [ Type [ BaseModel ], Type [ Enum ]], str ], ) -> Optional [ Dict [ str , Any ]]: if not body_field : return None assert isinstance ( body_field , ModelField ) body_schema , _ , _ = field_schema ( body_field , model_name_map = model_name_map , ref_prefix = REF_PREFIX ) field_info = cast ( Body , body_field . field_info ) request_media_type = field_info . media_type required = body_field . required request_body_oai : Dict [ str , Any ] = {} if required : request_body_oai [ \"required\" ] = required request_media_content : Dict [ str , Any ] = { \"schema\" : body_schema } if field_info . examples : request_media_content [ \"examples\" ] = jsonable_encoder ( field_info . examples ) elif field_info . example != Undefined : request_media_content [ \"example\" ] = jsonable_encoder ( field_info . example ) request_body_oai [ \"content\" ] = { request_media_type : request_media_content } return request_body_oai","title":"get_openapi_operation_request_body()"},{"location":"openapi/utils/#fastapi.openapi.utils.get_openapi_path","text":"get_openapi_path ( * , route , model_name_map , operation_ids ) Source code in fastapi/openapi/utils.pydef get_openapi_path ( * , route : routing . APIRoute , model_name_map : Dict [ type , str ], operation_ids : Set [ str ] ) -> Tuple [ Dict [ str , Any ], Dict [ str , Any ], Dict [ str , Any ]]: path = {} security_schemes : Dict [ str , Any ] = {} definitions : Dict [ str , Any ] = {} assert route . methods is not None , \"Methods must be a list\" if isinstance ( route . response_class , DefaultPlaceholder ): current_response_class : Type [ Response ] = route . response_class . value else : current_response_class = route . response_class assert current_response_class , \"A response class is needed to generate OpenAPI\" route_response_media_type : Optional [ str ] = current_response_class . media_type if route . include_in_schema : for method in route . methods : operation = get_openapi_operation_metadata ( route = route , method = method , operation_ids = operation_ids ) parameters : List [ Dict [ str , Any ]] = [] flat_dependant = get_flat_dependant ( route . dependant , skip_repeats = True ) security_definitions , operation_security = get_openapi_security_definitions ( flat_dependant = flat_dependant ) if operation_security : operation . setdefault ( \"security\" , []) . extend ( operation_security ) if security_definitions : security_schemes . update ( security_definitions ) all_route_params = get_flat_params ( route . dependant ) operation_parameters = get_openapi_operation_parameters ( all_route_params = all_route_params , model_name_map = model_name_map ) parameters . extend ( operation_parameters ) if parameters : operation [ \"parameters\" ] = list ( { param [ \"name\" ]: param for param in parameters } . values () ) if method in METHODS_WITH_BODY : request_body_oai = get_openapi_operation_request_body ( body_field = route . body_field , model_name_map = model_name_map ) if request_body_oai : operation [ \"requestBody\" ] = request_body_oai if route . callbacks : callbacks = {} for callback in route . callbacks : if isinstance ( callback , routing . APIRoute ): ( cb_path , cb_security_schemes , cb_definitions , ) = get_openapi_path ( route = callback , model_name_map = model_name_map , operation_ids = operation_ids , ) callbacks [ callback . name ] = { callback . path : cb_path } operation [ \"callbacks\" ] = callbacks if route . status_code is not None : status_code = str ( route . status_code ) else : # It would probably make more sense for all response classes to have an # explicit default status_code, and to extract it from them, instead of # doing this inspection tricks, that would probably be in the future # TODO: probably make status_code a default class attribute for all # responses in Starlette response_signature = inspect . signature ( current_response_class . __init__ ) status_code_param = response_signature . parameters . get ( \"status_code\" ) if status_code_param is not None : if isinstance ( status_code_param . default , int ): status_code = str ( status_code_param . default ) operation . setdefault ( \"responses\" , {}) . setdefault ( status_code , {})[ \"description\" ] = route . response_description if ( route_response_media_type and route . status_code not in STATUS_CODES_WITH_NO_BODY ): response_schema = { \"type\" : \"string\" } if lenient_issubclass ( current_response_class , JSONResponse ): if route . response_field : response_schema , _ , _ = field_schema ( route . response_field , model_name_map = model_name_map , ref_prefix = REF_PREFIX , ) else : response_schema = {} operation . setdefault ( \"responses\" , {}) . setdefault ( status_code , {} ) . setdefault ( \"content\" , {}) . setdefault ( route_response_media_type , {})[ \"schema\" ] = response_schema if route . responses : operation_responses = operation . setdefault ( \"responses\" , {}) for ( additional_status_code , additional_response , ) in route . responses . items (): process_response = additional_response . copy () process_response . pop ( \"model\" , None ) status_code_key = str ( additional_status_code ) . upper () if status_code_key == \"DEFAULT\" : status_code_key = \"default\" openapi_response = operation_responses . setdefault ( status_code_key , {} ) assert isinstance ( process_response , dict ), \"An additional response must be a dict\" field = route . response_fields . get ( additional_status_code ) additional_field_schema : Optional [ Dict [ str , Any ]] = None if field : additional_field_schema , _ , _ = field_schema ( field , model_name_map = model_name_map , ref_prefix = REF_PREFIX ) media_type = route_response_media_type or \"application/json\" additional_schema = ( process_response . setdefault ( \"content\" , {}) . setdefault ( media_type , {}) . setdefault ( \"schema\" , {}) ) deep_dict_update ( additional_schema , additional_field_schema ) status_text : Optional [ str ] = status_code_ranges . get ( str ( additional_status_code ) . upper () ) or http . client . responses . get ( int ( additional_status_code )) description = ( process_response . get ( \"description\" ) or openapi_response . get ( \"description\" ) or status_text or \"Additional Response\" ) deep_dict_update ( openapi_response , process_response ) openapi_response [ \"description\" ] = description http422 = str ( HTTP_422_UNPROCESSABLE_ENTITY ) if ( all_route_params or route . body_field ) and not any ( [ status in operation [ \"responses\" ] for status in [ http422 , \"4XX\" , \"default\" ] ] ): operation [ \"responses\" ][ http422 ] = { \"description\" : \"Validation Error\" , \"content\" : { \"application/json\" : { \"schema\" : { \"$ref\" : REF_PREFIX + \"HTTPValidationError\" } } }, } if \"ValidationError\" not in definitions : definitions . update ( { \"ValidationError\" : validation_error_definition , \"HTTPValidationError\" : validation_error_response_definition , } ) if route . openapi_extra : deep_dict_update ( operation , route . openapi_extra ) path [ method . lower ()] = operation return path , security_schemes , definitions","title":"get_openapi_path()"},{"location":"openapi/utils/#fastapi.openapi.utils.get_openapi_security_definitions","text":"get_openapi_security_definitions ( flat_dependant ) Source code in fastapi/openapi/utils.py 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 def get_openapi_security_definitions ( flat_dependant : Dependant , ) -> Tuple [ Dict [ str , Any ], List [ Dict [ str , Any ]]]: security_definitions = {} operation_security = [] for security_requirement in flat_dependant . security_requirements : security_definition = jsonable_encoder ( security_requirement . security_scheme . model , by_alias = True , exclude_none = True , ) security_name = security_requirement . security_scheme . scheme_name security_definitions [ security_name ] = security_definition operation_security . append ({ security_name : security_requirement . scopes }) return security_definitions , operation_security","title":"get_openapi_security_definitions()"},{"location":"security/","text":"","title":"security"},{"location":"security/api_key/","text":"APIKeyBase \u00b6 Bases: SecurityBase APIKeyCookie \u00b6 APIKeyCookie ( * , name , scheme_name = None , description = None , auto_error = True ) Bases: APIKeyBase Source code in fastapi/security/api_key.py 69 70 71 72 73 74 75 76 77 78 79 80 81 def __init__ ( self , * , name : str , scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True ): self . model : APIKey = APIKey ( ** { \"in\" : APIKeyIn . cookie }, name = name , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error auto_error instance-attribute \u00b6 auto_error = auto_error model instance-attribute \u00b6 model : APIKey = APIKey ( None = { \"in\" : APIKeyIn . cookie }, name = name , description = description , ) scheme_name instance-attribute \u00b6 scheme_name = scheme_name or self . __class__ . __name__ __call__ async \u00b6 __call__ ( request ) Source code in fastapi/security/api_key.py 83 84 85 86 87 88 89 90 91 92 async def __call__ ( self , request : Request ) -> Optional [ str ]: api_key = request . cookies . get ( self . model . name ) if not api_key : if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None return api_key APIKeyHeader \u00b6 APIKeyHeader ( * , name , scheme_name = None , description = None , auto_error = True ) Bases: APIKeyBase Source code in fastapi/security/api_key.py 42 43 44 45 46 47 48 49 50 51 52 53 54 def __init__ ( self , * , name : str , scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True ): self . model : APIKey = APIKey ( ** { \"in\" : APIKeyIn . header }, name = name , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error auto_error instance-attribute \u00b6 auto_error = auto_error model instance-attribute \u00b6 model : APIKey = APIKey ( None = { \"in\" : APIKeyIn . header }, name = name , description = description , ) scheme_name instance-attribute \u00b6 scheme_name = scheme_name or self . __class__ . __name__ __call__ async \u00b6 __call__ ( request ) Source code in fastapi/security/api_key.py 56 57 58 59 60 61 62 63 64 65 async def __call__ ( self , request : Request ) -> Optional [ str ]: api_key : str = request . headers . get ( self . model . name ) if not api_key : if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None return api_key APIKeyQuery \u00b6 APIKeyQuery ( * , name , scheme_name = None , description = None , auto_error = True ) Bases: APIKeyBase Source code in fastapi/security/api_key.py 15 16 17 18 19 20 21 22 23 24 25 26 27 def __init__ ( self , * , name : str , scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True ): self . model : APIKey = APIKey ( ** { \"in\" : APIKeyIn . query }, name = name , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error auto_error instance-attribute \u00b6 auto_error = auto_error model instance-attribute \u00b6 model : APIKey = APIKey ( None = { \"in\" : APIKeyIn . query }, name = name , description = description , ) scheme_name instance-attribute \u00b6 scheme_name = scheme_name or self . __class__ . __name__ __call__ async \u00b6 __call__ ( request ) Source code in fastapi/security/api_key.py 29 30 31 32 33 34 35 36 37 38 async def __call__ ( self , request : Request ) -> Optional [ str ]: api_key : str = request . query_params . get ( self . model . name ) if not api_key : if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None return api_key","title":"api_key"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyBase","text":"Bases: SecurityBase","title":"APIKeyBase"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyCookie","text":"APIKeyCookie ( * , name , scheme_name = None , description = None , auto_error = True ) Bases: APIKeyBase Source code in fastapi/security/api_key.py 69 70 71 72 73 74 75 76 77 78 79 80 81 def __init__ ( self , * , name : str , scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True ): self . model : APIKey = APIKey ( ** { \"in\" : APIKeyIn . cookie }, name = name , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error","title":"APIKeyCookie"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyCookie.auto_error","text":"auto_error = auto_error","title":"auto_error"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyCookie.model","text":"model : APIKey = APIKey ( None = { \"in\" : APIKeyIn . cookie }, name = name , description = description , )","title":"model"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyCookie.scheme_name","text":"scheme_name = scheme_name or self . __class__ . __name__","title":"scheme_name"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyCookie.__call__","text":"__call__ ( request ) Source code in fastapi/security/api_key.py 83 84 85 86 87 88 89 90 91 92 async def __call__ ( self , request : Request ) -> Optional [ str ]: api_key = request . cookies . get ( self . model . name ) if not api_key : if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None return api_key","title":"__call__()"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyHeader","text":"APIKeyHeader ( * , name , scheme_name = None , description = None , auto_error = True ) Bases: APIKeyBase Source code in fastapi/security/api_key.py 42 43 44 45 46 47 48 49 50 51 52 53 54 def __init__ ( self , * , name : str , scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True ): self . model : APIKey = APIKey ( ** { \"in\" : APIKeyIn . header }, name = name , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error","title":"APIKeyHeader"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyHeader.auto_error","text":"auto_error = auto_error","title":"auto_error"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyHeader.model","text":"model : APIKey = APIKey ( None = { \"in\" : APIKeyIn . header }, name = name , description = description , )","title":"model"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyHeader.scheme_name","text":"scheme_name = scheme_name or self . __class__ . __name__","title":"scheme_name"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyHeader.__call__","text":"__call__ ( request ) Source code in fastapi/security/api_key.py 56 57 58 59 60 61 62 63 64 65 async def __call__ ( self , request : Request ) -> Optional [ str ]: api_key : str = request . headers . get ( self . model . name ) if not api_key : if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None return api_key","title":"__call__()"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyQuery","text":"APIKeyQuery ( * , name , scheme_name = None , description = None , auto_error = True ) Bases: APIKeyBase Source code in fastapi/security/api_key.py 15 16 17 18 19 20 21 22 23 24 25 26 27 def __init__ ( self , * , name : str , scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True ): self . model : APIKey = APIKey ( ** { \"in\" : APIKeyIn . query }, name = name , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error","title":"APIKeyQuery"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyQuery.auto_error","text":"auto_error = auto_error","title":"auto_error"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyQuery.model","text":"model : APIKey = APIKey ( None = { \"in\" : APIKeyIn . query }, name = name , description = description , )","title":"model"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyQuery.scheme_name","text":"scheme_name = scheme_name or self . __class__ . __name__","title":"scheme_name"},{"location":"security/api_key/#fastapi.security.api_key.APIKeyQuery.__call__","text":"__call__ ( request ) Source code in fastapi/security/api_key.py 29 30 31 32 33 34 35 36 37 38 async def __call__ ( self , request : Request ) -> Optional [ str ]: api_key : str = request . query_params . get ( self . model . name ) if not api_key : if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None return api_key","title":"__call__()"},{"location":"security/base/","text":"SecurityBase \u00b6 model class-attribute \u00b6 model : SecurityBaseModel scheme_name class-attribute \u00b6 scheme_name : str","title":"base"},{"location":"security/base/#fastapi.security.base.SecurityBase","text":"","title":"SecurityBase"},{"location":"security/base/#fastapi.security.base.SecurityBase.model","text":"model : SecurityBaseModel","title":"model"},{"location":"security/base/#fastapi.security.base.SecurityBase.scheme_name","text":"scheme_name : str","title":"scheme_name"},{"location":"security/http/","text":"HTTPAuthorizationCredentials \u00b6 Bases: BaseModel credentials class-attribute \u00b6 credentials : str scheme class-attribute \u00b6 scheme : str HTTPBase \u00b6 HTTPBase ( * , scheme , scheme_name = None , description = None , auto_error = True ) Bases: SecurityBase Source code in fastapi/security/http.py 26 27 28 29 30 31 32 33 34 35 36 def __init__ ( self , * , scheme : str , scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True , ): self . model = HTTPBaseModel ( scheme = scheme , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error auto_error instance-attribute \u00b6 auto_error = auto_error model instance-attribute \u00b6 model = HTTPBaseModel ( scheme = scheme , description = description ) scheme_name instance-attribute \u00b6 scheme_name = scheme_name or self . __class__ . __name__ __call__ async \u00b6 __call__ ( request ) Source code in fastapi/security/http.py 38 39 40 41 42 43 44 45 46 47 48 49 50 async def __call__ ( self , request : Request ) -> Optional [ HTTPAuthorizationCredentials ]: authorization : str = request . headers . get ( \"Authorization\" ) scheme , credentials = get_authorization_scheme_param ( authorization ) if not ( authorization and scheme and credentials ): if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None return HTTPAuthorizationCredentials ( scheme = scheme , credentials = credentials ) HTTPBasic \u00b6 HTTPBasic ( * , scheme_name = None , realm = None , description = None , auto_error = True ) Bases: HTTPBase Source code in fastapi/security/http.py 54 55 56 57 58 59 60 61 62 63 64 65 def __init__ ( self , * , scheme_name : Optional [ str ] = None , realm : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True , ): self . model = HTTPBaseModel ( scheme = \"basic\" , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . realm = realm self . auto_error = auto_error auto_error instance-attribute \u00b6 auto_error = auto_error model instance-attribute \u00b6 model = HTTPBaseModel ( scheme = \"basic\" , description = description ) realm instance-attribute \u00b6 realm = realm scheme_name instance-attribute \u00b6 scheme_name = scheme_name or self . __class__ . __name__ __call__ async \u00b6 __call__ ( request ) Source code in fastapi/security/http.py 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 async def __call__ ( # type: ignore self , request : Request ) -> Optional [ HTTPBasicCredentials ]: authorization : str = request . headers . get ( \"Authorization\" ) scheme , param = get_authorization_scheme_param ( authorization ) if self . realm : unauthorized_headers = { \"WWW-Authenticate\" : f 'Basic realm=\" { self . realm } \"' } else : unauthorized_headers = { \"WWW-Authenticate\" : \"Basic\" } invalid_user_credentials_exc = HTTPException ( status_code = HTTP_401_UNAUTHORIZED , detail = \"Invalid authentication credentials\" , headers = unauthorized_headers , ) if not authorization or scheme . lower () != \"basic\" : if self . auto_error : raise HTTPException ( status_code = HTTP_401_UNAUTHORIZED , detail = \"Not authenticated\" , headers = unauthorized_headers , ) else : return None try : data = b64decode ( param ) . decode ( \"ascii\" ) except ( ValueError , UnicodeDecodeError , binascii . Error ): raise invalid_user_credentials_exc username , separator , password = data . partition ( \":\" ) if not separator : raise invalid_user_credentials_exc return HTTPBasicCredentials ( username = username , password = password ) HTTPBasicCredentials \u00b6 Bases: BaseModel password class-attribute \u00b6 password : str username class-attribute \u00b6 username : str HTTPBearer \u00b6 HTTPBearer ( * , bearerFormat = None , scheme_name = None , description = None , auto_error = True ) Bases: HTTPBase Source code in fastapi/security/http.py 101 102 103 104 105 106 107 108 109 110 111 def __init__ ( self , * , bearerFormat : Optional [ str ] = None , scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True , ): self . model = HTTPBearerModel ( bearerFormat = bearerFormat , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error auto_error instance-attribute \u00b6 auto_error = auto_error model instance-attribute \u00b6 model = HTTPBearerModel ( bearerFormat = bearerFormat , description = description ) scheme_name instance-attribute \u00b6 scheme_name = scheme_name or self . __class__ . __name__ __call__ async \u00b6 __call__ ( request ) Source code in fastapi/security/http.py 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 async def __call__ ( self , request : Request ) -> Optional [ HTTPAuthorizationCredentials ]: authorization : str = request . headers . get ( \"Authorization\" ) scheme , credentials = get_authorization_scheme_param ( authorization ) if not ( authorization and scheme and credentials ): if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None if scheme . lower () != \"bearer\" : if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Invalid authentication credentials\" , ) else : return None return HTTPAuthorizationCredentials ( scheme = scheme , credentials = credentials ) HTTPDigest \u00b6 HTTPDigest ( * , scheme_name = None , description = None , auto_error = True ) Bases: HTTPBase Source code in fastapi/security/http.py 137 138 139 140 141 142 143 144 145 146 def __init__ ( self , * , scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True , ): self . model = HTTPBaseModel ( scheme = \"digest\" , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error auto_error instance-attribute \u00b6 auto_error = auto_error model instance-attribute \u00b6 model = HTTPBaseModel ( scheme = \"digest\" , description = description ) scheme_name instance-attribute \u00b6 scheme_name = scheme_name or self . __class__ . __name__ __call__ async \u00b6 __call__ ( request ) Source code in fastapi/security/http.py 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 async def __call__ ( self , request : Request ) -> Optional [ HTTPAuthorizationCredentials ]: authorization : str = request . headers . get ( \"Authorization\" ) scheme , credentials = get_authorization_scheme_param ( authorization ) if not ( authorization and scheme and credentials ): if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None if scheme . lower () != \"digest\" : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Invalid authentication credentials\" , ) return HTTPAuthorizationCredentials ( scheme = scheme , credentials = credentials )","title":"http"},{"location":"security/http/#fastapi.security.http.HTTPAuthorizationCredentials","text":"Bases: BaseModel","title":"HTTPAuthorizationCredentials"},{"location":"security/http/#fastapi.security.http.HTTPAuthorizationCredentials.credentials","text":"credentials : str","title":"credentials"},{"location":"security/http/#fastapi.security.http.HTTPAuthorizationCredentials.scheme","text":"scheme : str","title":"scheme"},{"location":"security/http/#fastapi.security.http.HTTPBase","text":"HTTPBase ( * , scheme , scheme_name = None , description = None , auto_error = True ) Bases: SecurityBase Source code in fastapi/security/http.py 26 27 28 29 30 31 32 33 34 35 36 def __init__ ( self , * , scheme : str , scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True , ): self . model = HTTPBaseModel ( scheme = scheme , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error","title":"HTTPBase"},{"location":"security/http/#fastapi.security.http.HTTPBase.auto_error","text":"auto_error = auto_error","title":"auto_error"},{"location":"security/http/#fastapi.security.http.HTTPBase.model","text":"model = HTTPBaseModel ( scheme = scheme , description = description )","title":"model"},{"location":"security/http/#fastapi.security.http.HTTPBase.scheme_name","text":"scheme_name = scheme_name or self . __class__ . __name__","title":"scheme_name"},{"location":"security/http/#fastapi.security.http.HTTPBase.__call__","text":"__call__ ( request ) Source code in fastapi/security/http.py 38 39 40 41 42 43 44 45 46 47 48 49 50 async def __call__ ( self , request : Request ) -> Optional [ HTTPAuthorizationCredentials ]: authorization : str = request . headers . get ( \"Authorization\" ) scheme , credentials = get_authorization_scheme_param ( authorization ) if not ( authorization and scheme and credentials ): if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None return HTTPAuthorizationCredentials ( scheme = scheme , credentials = credentials )","title":"__call__()"},{"location":"security/http/#fastapi.security.http.HTTPBasic","text":"HTTPBasic ( * , scheme_name = None , realm = None , description = None , auto_error = True ) Bases: HTTPBase Source code in fastapi/security/http.py 54 55 56 57 58 59 60 61 62 63 64 65 def __init__ ( self , * , scheme_name : Optional [ str ] = None , realm : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True , ): self . model = HTTPBaseModel ( scheme = \"basic\" , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . realm = realm self . auto_error = auto_error","title":"HTTPBasic"},{"location":"security/http/#fastapi.security.http.HTTPBasic.auto_error","text":"auto_error = auto_error","title":"auto_error"},{"location":"security/http/#fastapi.security.http.HTTPBasic.model","text":"model = HTTPBaseModel ( scheme = \"basic\" , description = description )","title":"model"},{"location":"security/http/#fastapi.security.http.HTTPBasic.realm","text":"realm = realm","title":"realm"},{"location":"security/http/#fastapi.security.http.HTTPBasic.scheme_name","text":"scheme_name = scheme_name or self . __class__ . __name__","title":"scheme_name"},{"location":"security/http/#fastapi.security.http.HTTPBasic.__call__","text":"__call__ ( request ) Source code in fastapi/security/http.py 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 async def __call__ ( # type: ignore self , request : Request ) -> Optional [ HTTPBasicCredentials ]: authorization : str = request . headers . get ( \"Authorization\" ) scheme , param = get_authorization_scheme_param ( authorization ) if self . realm : unauthorized_headers = { \"WWW-Authenticate\" : f 'Basic realm=\" { self . realm } \"' } else : unauthorized_headers = { \"WWW-Authenticate\" : \"Basic\" } invalid_user_credentials_exc = HTTPException ( status_code = HTTP_401_UNAUTHORIZED , detail = \"Invalid authentication credentials\" , headers = unauthorized_headers , ) if not authorization or scheme . lower () != \"basic\" : if self . auto_error : raise HTTPException ( status_code = HTTP_401_UNAUTHORIZED , detail = \"Not authenticated\" , headers = unauthorized_headers , ) else : return None try : data = b64decode ( param ) . decode ( \"ascii\" ) except ( ValueError , UnicodeDecodeError , binascii . Error ): raise invalid_user_credentials_exc username , separator , password = data . partition ( \":\" ) if not separator : raise invalid_user_credentials_exc return HTTPBasicCredentials ( username = username , password = password )","title":"__call__()"},{"location":"security/http/#fastapi.security.http.HTTPBasicCredentials","text":"Bases: BaseModel","title":"HTTPBasicCredentials"},{"location":"security/http/#fastapi.security.http.HTTPBasicCredentials.password","text":"password : str","title":"password"},{"location":"security/http/#fastapi.security.http.HTTPBasicCredentials.username","text":"username : str","title":"username"},{"location":"security/http/#fastapi.security.http.HTTPBearer","text":"HTTPBearer ( * , bearerFormat = None , scheme_name = None , description = None , auto_error = True ) Bases: HTTPBase Source code in fastapi/security/http.py 101 102 103 104 105 106 107 108 109 110 111 def __init__ ( self , * , bearerFormat : Optional [ str ] = None , scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True , ): self . model = HTTPBearerModel ( bearerFormat = bearerFormat , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error","title":"HTTPBearer"},{"location":"security/http/#fastapi.security.http.HTTPBearer.auto_error","text":"auto_error = auto_error","title":"auto_error"},{"location":"security/http/#fastapi.security.http.HTTPBearer.model","text":"model = HTTPBearerModel ( bearerFormat = bearerFormat , description = description )","title":"model"},{"location":"security/http/#fastapi.security.http.HTTPBearer.scheme_name","text":"scheme_name = scheme_name or self . __class__ . __name__","title":"scheme_name"},{"location":"security/http/#fastapi.security.http.HTTPBearer.__call__","text":"__call__ ( request ) Source code in fastapi/security/http.py 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 async def __call__ ( self , request : Request ) -> Optional [ HTTPAuthorizationCredentials ]: authorization : str = request . headers . get ( \"Authorization\" ) scheme , credentials = get_authorization_scheme_param ( authorization ) if not ( authorization and scheme and credentials ): if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None if scheme . lower () != \"bearer\" : if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Invalid authentication credentials\" , ) else : return None return HTTPAuthorizationCredentials ( scheme = scheme , credentials = credentials )","title":"__call__()"},{"location":"security/http/#fastapi.security.http.HTTPDigest","text":"HTTPDigest ( * , scheme_name = None , description = None , auto_error = True ) Bases: HTTPBase Source code in fastapi/security/http.py 137 138 139 140 141 142 143 144 145 146 def __init__ ( self , * , scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True , ): self . model = HTTPBaseModel ( scheme = \"digest\" , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error","title":"HTTPDigest"},{"location":"security/http/#fastapi.security.http.HTTPDigest.auto_error","text":"auto_error = auto_error","title":"auto_error"},{"location":"security/http/#fastapi.security.http.HTTPDigest.model","text":"model = HTTPBaseModel ( scheme = \"digest\" , description = description )","title":"model"},{"location":"security/http/#fastapi.security.http.HTTPDigest.scheme_name","text":"scheme_name = scheme_name or self . __class__ . __name__","title":"scheme_name"},{"location":"security/http/#fastapi.security.http.HTTPDigest.__call__","text":"__call__ ( request ) Source code in fastapi/security/http.py 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 async def __call__ ( self , request : Request ) -> Optional [ HTTPAuthorizationCredentials ]: authorization : str = request . headers . get ( \"Authorization\" ) scheme , credentials = get_authorization_scheme_param ( authorization ) if not ( authorization and scheme and credentials ): if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None if scheme . lower () != \"digest\" : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Invalid authentication credentials\" , ) return HTTPAuthorizationCredentials ( scheme = scheme , credentials = credentials )","title":"__call__()"},{"location":"security/oauth2/","text":"OAuth2 \u00b6 OAuth2 ( * , flows = OAuthFlowsModel (), scheme_name = None , description = None , auto_error = True ) Bases: SecurityBase Source code in fastapi/security/oauth2.py 116 117 118 119 120 121 122 123 124 125 126 def __init__ ( self , * , flows : Union [ OAuthFlowsModel , Dict [ str , Dict [ str , Any ]]] = OAuthFlowsModel (), scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : Optional [ bool ] = True ): self . model = OAuth2Model ( flows = flows , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error auto_error instance-attribute \u00b6 auto_error = auto_error model instance-attribute \u00b6 model = OAuth2Model ( flows = flows , description = description ) scheme_name instance-attribute \u00b6 scheme_name = scheme_name or self . __class__ . __name__ __call__ async \u00b6 __call__ ( request ) Source code in fastapi/security/oauth2.py 128 129 130 131 132 133 134 135 136 137 async def __call__ ( self , request : Request ) -> Optional [ str ]: authorization : str = request . headers . get ( \"Authorization\" ) if not authorization : if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None return authorization OAuth2AuthorizationCodeBearer \u00b6 OAuth2AuthorizationCodeBearer ( authorizationUrl , tokenUrl , refreshUrl = None , scheme_name = None , scopes = None , description = None , auto_error = True , ) Bases: OAuth2 Source code in fastapi/security/oauth2.py 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 def __init__ ( self , authorizationUrl : str , tokenUrl : str , refreshUrl : Optional [ str ] = None , scheme_name : Optional [ str ] = None , scopes : Optional [ Dict [ str , str ]] = None , description : Optional [ str ] = None , auto_error : bool = True , ): if not scopes : scopes = {} flows = OAuthFlowsModel ( authorizationCode = { \"authorizationUrl\" : authorizationUrl , \"tokenUrl\" : tokenUrl , \"refreshUrl\" : refreshUrl , \"scopes\" : scopes , } ) super () . __init__ ( flows = flows , scheme_name = scheme_name , description = description , auto_error = auto_error , ) __call__ async \u00b6 __call__ ( request ) Source code in fastapi/security/oauth2.py 202 203 204 205 206 207 208 209 210 211 212 213 214 async def __call__ ( self , request : Request ) -> Optional [ str ]: authorization : str = request . headers . get ( \"Authorization\" ) scheme , param = get_authorization_scheme_param ( authorization ) if not authorization or scheme . lower () != \"bearer\" : if self . auto_error : raise HTTPException ( status_code = HTTP_401_UNAUTHORIZED , detail = \"Not authenticated\" , headers = { \"WWW-Authenticate\" : \"Bearer\" }, ) else : return None # pragma: nocover return param OAuth2PasswordBearer \u00b6 OAuth2PasswordBearer ( tokenUrl , scheme_name = None , scopes = None , description = None , auto_error = True , ) Bases: OAuth2 Source code in fastapi/security/oauth2.py 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 def __init__ ( self , tokenUrl : str , scheme_name : Optional [ str ] = None , scopes : Optional [ Dict [ str , str ]] = None , description : Optional [ str ] = None , auto_error : bool = True , ): if not scopes : scopes = {} flows = OAuthFlowsModel ( password = { \"tokenUrl\" : tokenUrl , \"scopes\" : scopes }) super () . __init__ ( flows = flows , scheme_name = scheme_name , description = description , auto_error = auto_error , ) __call__ async \u00b6 __call__ ( request ) Source code in fastapi/security/oauth2.py 159 160 161 162 163 164 165 166 167 168 169 170 171 async def __call__ ( self , request : Request ) -> Optional [ str ]: authorization : str = request . headers . get ( \"Authorization\" ) scheme , param = get_authorization_scheme_param ( authorization ) if not authorization or scheme . lower () != \"bearer\" : if self . auto_error : raise HTTPException ( status_code = HTTP_401_UNAUTHORIZED , detail = \"Not authenticated\" , headers = { \"WWW-Authenticate\" : \"Bearer\" }, ) else : return None return param OAuth2PasswordRequestForm \u00b6 OAuth2PasswordRequestForm ( grant_type = Form ( default = None , regex = \"password\" ), username = Form (), password = Form (), scope = Form ( default = \"\" ), client_id = Form ( default = None ), client_secret = Form ( default = None ), ) This is a dependency class, use it like: @app.post(\"/login\") def login(form_data: OAuth2PasswordRequestForm = Depends()): data = form_data.parse() print(data.username) print(data.password) for scope in data.scopes: print(scope) if data.client_id: print(data.client_id) if data.client_secret: print(data.client_secret) return data It creates the following Form request parameters in your endpoint: the OAuth2 spec says it is required and MUST be the fixed string \"password\". Nevertheless, this dependency class is permissive and allows not passing it. If you want to enforce it, use instead the OAuth2PasswordRequestFormStrict dependency. username: username string. The OAuth2 spec requires the exact field name \"username\". password: password string. The OAuth2 spec requires the exact field name \"password\". Optional string. Several scopes (each one a string) separated by spaces. E.g. \"items:read items:write users:read profile openid\" optional string. OAuth2 recommends sending the client_id and client_secret (if any) using HTTP Basic auth, as: client_id:client_secret optional string. OAuth2 recommends sending the client_id and client_secret (if any) using HTTP Basic auth, as: client_id:client_secret Source code in fastapi/security/oauth2.py 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 def __init__ ( self , grant_type : str = Form ( default = None , regex = \"password\" ), username : str = Form (), password : str = Form (), scope : str = Form ( default = \"\" ), client_id : Optional [ str ] = Form ( default = None ), client_secret : Optional [ str ] = Form ( default = None ), ): self . grant_type = grant_type self . username = username self . password = password self . scopes = scope . split () self . client_id = client_id self . client_secret = client_secret client_id instance-attribute \u00b6 client_id = client_id client_secret instance-attribute \u00b6 client_secret = client_secret grant_type instance-attribute \u00b6 grant_type = grant_type password instance-attribute \u00b6 password = password scopes instance-attribute \u00b6 scopes = scope . split () username instance-attribute \u00b6 username = username OAuth2PasswordRequestFormStrict \u00b6 OAuth2PasswordRequestFormStrict ( grant_type = Form ( regex = \"password\" ), username = Form (), password = Form (), scope = Form ( default = \"\" ), client_id = Form ( default = None ), client_secret = Form ( default = None ), ) Bases: OAuth2PasswordRequestForm This is a dependency class, use it like: @app.post(\"/login\") def login(form_data: OAuth2PasswordRequestFormStrict = Depends()): data = form_data.parse() print(data.username) print(data.password) for scope in data.scopes: print(scope) if data.client_id: print(data.client_id) if data.client_secret: print(data.client_secret) return data It creates the following Form request parameters in your endpoint: the OAuth2 spec says it is required and MUST be the fixed string \"password\". This dependency is strict about it. If you want to be permissive, use instead the OAuth2PasswordRequestForm dependency class. username: username string. The OAuth2 spec requires the exact field name \"username\". password: password string. The OAuth2 spec requires the exact field name \"password\". Optional string. Several scopes (each one a string) separated by spaces. E.g. \"items:read items:write users:read profile openid\" optional string. OAuth2 recommends sending the client_id and client_secret (if any) using HTTP Basic auth, as: client_id:client_secret optional string. OAuth2 recommends sending the client_id and client_secret (if any) using HTTP Basic auth, as: client_id:client_secret Source code in fastapi/security/oauth2.py 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 def __init__ ( self , grant_type : str = Form ( regex = \"password\" ), username : str = Form (), password : str = Form (), scope : str = Form ( default = \"\" ), client_id : Optional [ str ] = Form ( default = None ), client_secret : Optional [ str ] = Form ( default = None ), ): super () . __init__ ( grant_type = grant_type , username = username , password = password , scope = scope , client_id = client_id , client_secret = client_secret , ) SecurityScopes \u00b6 SecurityScopes ( scopes = None ) Source code in fastapi/security/oauth2.py 218 219 220 def __init__ ( self , scopes : Optional [ List [ str ]] = None ): self . scopes = scopes or [] self . scope_str = \" \" . join ( self . scopes ) scope_str instance-attribute \u00b6 scope_str = ' ' . join ( self . scopes ) scopes instance-attribute \u00b6 scopes = scopes or []","title":"oauth2"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2","text":"OAuth2 ( * , flows = OAuthFlowsModel (), scheme_name = None , description = None , auto_error = True ) Bases: SecurityBase Source code in fastapi/security/oauth2.py 116 117 118 119 120 121 122 123 124 125 126 def __init__ ( self , * , flows : Union [ OAuthFlowsModel , Dict [ str , Dict [ str , Any ]]] = OAuthFlowsModel (), scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : Optional [ bool ] = True ): self . model = OAuth2Model ( flows = flows , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error","title":"OAuth2"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2.auto_error","text":"auto_error = auto_error","title":"auto_error"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2.model","text":"model = OAuth2Model ( flows = flows , description = description )","title":"model"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2.scheme_name","text":"scheme_name = scheme_name or self . __class__ . __name__","title":"scheme_name"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2.__call__","text":"__call__ ( request ) Source code in fastapi/security/oauth2.py 128 129 130 131 132 133 134 135 136 137 async def __call__ ( self , request : Request ) -> Optional [ str ]: authorization : str = request . headers . get ( \"Authorization\" ) if not authorization : if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None return authorization","title":"__call__()"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2AuthorizationCodeBearer","text":"OAuth2AuthorizationCodeBearer ( authorizationUrl , tokenUrl , refreshUrl = None , scheme_name = None , scopes = None , description = None , auto_error = True , ) Bases: OAuth2 Source code in fastapi/security/oauth2.py 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 def __init__ ( self , authorizationUrl : str , tokenUrl : str , refreshUrl : Optional [ str ] = None , scheme_name : Optional [ str ] = None , scopes : Optional [ Dict [ str , str ]] = None , description : Optional [ str ] = None , auto_error : bool = True , ): if not scopes : scopes = {} flows = OAuthFlowsModel ( authorizationCode = { \"authorizationUrl\" : authorizationUrl , \"tokenUrl\" : tokenUrl , \"refreshUrl\" : refreshUrl , \"scopes\" : scopes , } ) super () . __init__ ( flows = flows , scheme_name = scheme_name , description = description , auto_error = auto_error , )","title":"OAuth2AuthorizationCodeBearer"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2AuthorizationCodeBearer.__call__","text":"__call__ ( request ) Source code in fastapi/security/oauth2.py 202 203 204 205 206 207 208 209 210 211 212 213 214 async def __call__ ( self , request : Request ) -> Optional [ str ]: authorization : str = request . headers . get ( \"Authorization\" ) scheme , param = get_authorization_scheme_param ( authorization ) if not authorization or scheme . lower () != \"bearer\" : if self . auto_error : raise HTTPException ( status_code = HTTP_401_UNAUTHORIZED , detail = \"Not authenticated\" , headers = { \"WWW-Authenticate\" : \"Bearer\" }, ) else : return None # pragma: nocover return param","title":"__call__()"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2PasswordBearer","text":"OAuth2PasswordBearer ( tokenUrl , scheme_name = None , scopes = None , description = None , auto_error = True , ) Bases: OAuth2 Source code in fastapi/security/oauth2.py 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 def __init__ ( self , tokenUrl : str , scheme_name : Optional [ str ] = None , scopes : Optional [ Dict [ str , str ]] = None , description : Optional [ str ] = None , auto_error : bool = True , ): if not scopes : scopes = {} flows = OAuthFlowsModel ( password = { \"tokenUrl\" : tokenUrl , \"scopes\" : scopes }) super () . __init__ ( flows = flows , scheme_name = scheme_name , description = description , auto_error = auto_error , )","title":"OAuth2PasswordBearer"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2PasswordBearer.__call__","text":"__call__ ( request ) Source code in fastapi/security/oauth2.py 159 160 161 162 163 164 165 166 167 168 169 170 171 async def __call__ ( self , request : Request ) -> Optional [ str ]: authorization : str = request . headers . get ( \"Authorization\" ) scheme , param = get_authorization_scheme_param ( authorization ) if not authorization or scheme . lower () != \"bearer\" : if self . auto_error : raise HTTPException ( status_code = HTTP_401_UNAUTHORIZED , detail = \"Not authenticated\" , headers = { \"WWW-Authenticate\" : \"Bearer\" }, ) else : return None return param","title":"__call__()"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2PasswordRequestForm","text":"OAuth2PasswordRequestForm ( grant_type = Form ( default = None , regex = \"password\" ), username = Form (), password = Form (), scope = Form ( default = \"\" ), client_id = Form ( default = None ), client_secret = Form ( default = None ), ) This is a dependency class, use it like: @app.post(\"/login\") def login(form_data: OAuth2PasswordRequestForm = Depends()): data = form_data.parse() print(data.username) print(data.password) for scope in data.scopes: print(scope) if data.client_id: print(data.client_id) if data.client_secret: print(data.client_secret) return data It creates the following Form request parameters in your endpoint: the OAuth2 spec says it is required and MUST be the fixed string \"password\". Nevertheless, this dependency class is permissive and allows not passing it. If you want to enforce it, use instead the OAuth2PasswordRequestFormStrict dependency. username: username string. The OAuth2 spec requires the exact field name \"username\". password: password string. The OAuth2 spec requires the exact field name \"password\". Optional string. Several scopes (each one a string) separated by spaces. E.g. \"items:read items:write users:read profile openid\" optional string. OAuth2 recommends sending the client_id and client_secret (if any) using HTTP Basic auth, as: client_id:client_secret optional string. OAuth2 recommends sending the client_id and client_secret (if any) using HTTP Basic auth, as: client_id:client_secret Source code in fastapi/security/oauth2.py 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 def __init__ ( self , grant_type : str = Form ( default = None , regex = \"password\" ), username : str = Form (), password : str = Form (), scope : str = Form ( default = \"\" ), client_id : Optional [ str ] = Form ( default = None ), client_secret : Optional [ str ] = Form ( default = None ), ): self . grant_type = grant_type self . username = username self . password = password self . scopes = scope . split () self . client_id = client_id self . client_secret = client_secret","title":"OAuth2PasswordRequestForm"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2PasswordRequestForm.client_id","text":"client_id = client_id","title":"client_id"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2PasswordRequestForm.client_secret","text":"client_secret = client_secret","title":"client_secret"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2PasswordRequestForm.grant_type","text":"grant_type = grant_type","title":"grant_type"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2PasswordRequestForm.password","text":"password = password","title":"password"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2PasswordRequestForm.scopes","text":"scopes = scope . split ()","title":"scopes"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2PasswordRequestForm.username","text":"username = username","title":"username"},{"location":"security/oauth2/#fastapi.security.oauth2.OAuth2PasswordRequestFormStrict","text":"OAuth2PasswordRequestFormStrict ( grant_type = Form ( regex = \"password\" ), username = Form (), password = Form (), scope = Form ( default = \"\" ), client_id = Form ( default = None ), client_secret = Form ( default = None ), ) Bases: OAuth2PasswordRequestForm This is a dependency class, use it like: @app.post(\"/login\") def login(form_data: OAuth2PasswordRequestFormStrict = Depends()): data = form_data.parse() print(data.username) print(data.password) for scope in data.scopes: print(scope) if data.client_id: print(data.client_id) if data.client_secret: print(data.client_secret) return data It creates the following Form request parameters in your endpoint: the OAuth2 spec says it is required and MUST be the fixed string \"password\". This dependency is strict about it. If you want to be permissive, use instead the OAuth2PasswordRequestForm dependency class. username: username string. The OAuth2 spec requires the exact field name \"username\". password: password string. The OAuth2 spec requires the exact field name \"password\". Optional string. Several scopes (each one a string) separated by spaces. E.g. \"items:read items:write users:read profile openid\" optional string. OAuth2 recommends sending the client_id and client_secret (if any) using HTTP Basic auth, as: client_id:client_secret optional string. OAuth2 recommends sending the client_id and client_secret (if any) using HTTP Basic auth, as: client_id:client_secret Source code in fastapi/security/oauth2.py 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 def __init__ ( self , grant_type : str = Form ( regex = \"password\" ), username : str = Form (), password : str = Form (), scope : str = Form ( default = \"\" ), client_id : Optional [ str ] = Form ( default = None ), client_secret : Optional [ str ] = Form ( default = None ), ): super () . __init__ ( grant_type = grant_type , username = username , password = password , scope = scope , client_id = client_id , client_secret = client_secret , )","title":"OAuth2PasswordRequestFormStrict"},{"location":"security/oauth2/#fastapi.security.oauth2.SecurityScopes","text":"SecurityScopes ( scopes = None ) Source code in fastapi/security/oauth2.py 218 219 220 def __init__ ( self , scopes : Optional [ List [ str ]] = None ): self . scopes = scopes or [] self . scope_str = \" \" . join ( self . scopes )","title":"SecurityScopes"},{"location":"security/oauth2/#fastapi.security.oauth2.SecurityScopes.scope_str","text":"scope_str = ' ' . join ( self . scopes )","title":"scope_str"},{"location":"security/oauth2/#fastapi.security.oauth2.SecurityScopes.scopes","text":"scopes = scopes or []","title":"scopes"},{"location":"security/open_id_connect_url/","text":"OpenIdConnect \u00b6 OpenIdConnect ( * , openIdConnectUrl , scheme_name = None , description = None , auto_error = True ) Bases: SecurityBase Source code in fastapi/security/open_id_connect_url.py 11 12 13 14 15 16 17 18 19 20 21 22 23 def __init__ ( self , * , openIdConnectUrl : str , scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True ): self . model = OpenIdConnectModel ( openIdConnectUrl = openIdConnectUrl , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error auto_error instance-attribute \u00b6 auto_error = auto_error model instance-attribute \u00b6 model = OpenIdConnectModel ( openIdConnectUrl = openIdConnectUrl , description = description , ) scheme_name instance-attribute \u00b6 scheme_name = scheme_name or self . __class__ . __name__ __call__ async \u00b6 __call__ ( request ) Source code in fastapi/security/open_id_connect_url.py 25 26 27 28 29 30 31 32 33 34 async def __call__ ( self , request : Request ) -> Optional [ str ]: authorization : str = request . headers . get ( \"Authorization\" ) if not authorization : if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None return authorization","title":"open_id_connect_url"},{"location":"security/open_id_connect_url/#fastapi.security.open_id_connect_url.OpenIdConnect","text":"OpenIdConnect ( * , openIdConnectUrl , scheme_name = None , description = None , auto_error = True ) Bases: SecurityBase Source code in fastapi/security/open_id_connect_url.py 11 12 13 14 15 16 17 18 19 20 21 22 23 def __init__ ( self , * , openIdConnectUrl : str , scheme_name : Optional [ str ] = None , description : Optional [ str ] = None , auto_error : bool = True ): self . model = OpenIdConnectModel ( openIdConnectUrl = openIdConnectUrl , description = description ) self . scheme_name = scheme_name or self . __class__ . __name__ self . auto_error = auto_error","title":"OpenIdConnect"},{"location":"security/open_id_connect_url/#fastapi.security.open_id_connect_url.OpenIdConnect.auto_error","text":"auto_error = auto_error","title":"auto_error"},{"location":"security/open_id_connect_url/#fastapi.security.open_id_connect_url.OpenIdConnect.model","text":"model = OpenIdConnectModel ( openIdConnectUrl = openIdConnectUrl , description = description , )","title":"model"},{"location":"security/open_id_connect_url/#fastapi.security.open_id_connect_url.OpenIdConnect.scheme_name","text":"scheme_name = scheme_name or self . __class__ . __name__","title":"scheme_name"},{"location":"security/open_id_connect_url/#fastapi.security.open_id_connect_url.OpenIdConnect.__call__","text":"__call__ ( request ) Source code in fastapi/security/open_id_connect_url.py 25 26 27 28 29 30 31 32 33 34 async def __call__ ( self , request : Request ) -> Optional [ str ]: authorization : str = request . headers . get ( \"Authorization\" ) if not authorization : if self . auto_error : raise HTTPException ( status_code = HTTP_403_FORBIDDEN , detail = \"Not authenticated\" ) else : return None return authorization","title":"__call__()"},{"location":"security/utils/","text":"get_authorization_scheme_param \u00b6 get_authorization_scheme_param ( authorization_header_value ) Source code in fastapi/security/utils.py 4 5 6 7 8 def get_authorization_scheme_param ( authorization_header_value : str ) -> Tuple [ str , str ]: if not authorization_header_value : return \"\" , \"\" scheme , _ , param = authorization_header_value . partition ( \" \" ) return scheme , param","title":"utils"},{"location":"security/utils/#fastapi.security.utils.get_authorization_scheme_param","text":"get_authorization_scheme_param ( authorization_header_value ) Source code in fastapi/security/utils.py 4 5 6 7 8 def get_authorization_scheme_param ( authorization_header_value : str ) -> Tuple [ str , str ]: if not authorization_header_value : return \"\" , \"\" scheme , _ , param = authorization_header_value . partition ( \" \" ) return scheme , param","title":"get_authorization_scheme_param()"}]}